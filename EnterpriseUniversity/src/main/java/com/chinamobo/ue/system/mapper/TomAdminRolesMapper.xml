<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.system.dao.TomAdminRolesMapper">
	<resultMap id="BaseResultMap" type="com.chinamobo.ue.system.entity.TomAdminRoles">
		<result column="ADMIN_ID" property="adminId" jdbcType="DECIMAL" />
		<result column="ROLE_ID" property="roleId" jdbcType="DECIMAL" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="TomRole" type="com.chinamobo.ue.system.entity.TomRole">
		<id column="ROLE_ID" property="roleId" jdbcType="DECIMAL" />
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="ROLE_TYPE" property="roleType" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="PermissionTemp" type="com.chinamobo.ue.ums.shiro.PermissionTemp">
		<result column="ROLE_ID" property="roleid" jdbcType="VARCHAR" />
		<result column="ROLE_SCOPE" property="rolescope" jdbcType="VARCHAR" />
		<result column="ROLE_TYPE" property="roletype" jdbcType="VARCHAR" />
		<result column="AUTHORITY_ID" property="authorityid" jdbcType="VARCHAR" />
		<result column="AUTHORITY_NAME" property="authorityname"
			jdbcType="VARCHAR" />
		<result column="AUTHORITY_TYPE" property="authoritytype"
			jdbcType="VARCHAR" />
		<result column="AUTHORITY_URL" property="authorityurl"
			jdbcType="VARCHAR" />
		<result column="METHOD" property="authoritymethod" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Role_Column_List">
		ROLE_ID, ROLE_NAME, ROLE_TYPE, STATUS, CREATOR,
		CREATE_TIME, OPERATOR,
		UPDATE_TIME
	</sql>
	<delete id="deleteByAdminId" parameterType="Integer">
		delete from
		tom_admin_roles
		where admin_id = #{adminId,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByRoleId" parameterType="Integer">
		delete from
		tom_admin_roles
		where role_id = #{roleId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.chinamobo.ue.system.entity.TomAdminRoles">
		insert into TOM_ADMIN_ROLES
		(ADMIN_ID, ROLE_ID, CREATOR,
		CREATE_TIME, OPERATOR, UPDATE_TIME
		)
		values
		(#{adminId,jdbcType=DECIMAL}, #{roleId,jdbcType=DECIMAL},
		#{creator,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{operator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<update id="updateByRoleId" parameterType="com.chinamobo.ue.system.entity.TomAdminRoles">
		update TOM_ADMIN_ROLES
		<set>
			<if test="adminId !=null">
				ADMIN_ID = #{adminId,jdbcType=DECIMAL},
			</if>
			<if test="creator !=null">
				CREATOR = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime!=null">
				CREATE_TIME= #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator!=null">
				OPERATOR = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="updateTime!=null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</update>
	<insert id="insertSelective" parameterType="com.chinamobo.ue.system.entity.TomAdminRoles">
		insert into TOM_ADMIN_ROLES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="adminId != null">
				ADMIN_ID,
			</if>
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="creator != null">
				CREATOR,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="operator != null">
				OPERATOR,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="creatorId != null">
				CREATOR_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="adminId != null">
				#{adminId,jdbcType=DECIMAL},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=DECIMAL},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="selectRoleByAminId" parameterType="java.lang.Integer"
		resultMap="TomRole">
		select
		TOM_ROLE.*
		from TOM_ROLE,TOM_ADMIN_ROLES where
		TOM_ROLE.ROLE_ID=TOM_ADMIN_ROLES.ROLE_ID AND TOM_ROLE.STATUS='Y' AND
		TOM_ADMIN_ROLES.ADMIN_ID= #{id}
	</select>
	<select id="selectPermissionTempByAdminId" parameterType="java.lang.Integer"
		resultMap="PermissionTemp">
		select
		TOM_ADMIN_ROLES.ROLE_ID,ROLE_SCOPE,TOM_ROLE_SCOPES.ROLE_TYPE,TOM_AUTHORITIES.AUTHORITY_ID,AUTHORITY_NAME,AUTHORITY_TYPE,AUTHORITY_URL,METHOD
		from
		TOM_ADMIN_ROLES,TOM_ROLE_AUTHORITIES,TOM_AUTHORITIES,TOM_ROLE_SCOPES,TOM_ROLE
		where TOM_ADMIN_ROLES.ROLE_ID=TOM_ROLE_AUTHORITIES.ROLE_ID AND
		TOM_ADMIN_ROLES.ROLE_ID=TOM_ROLE_SCOPES.ROLE_ID AND
		TOM_ADMIN_ROLES.ROLE_ID=TOM_ROLE_SCOPES.ROLE_ID AND
		TOM_ADMIN_ROLES.ROLE_ID=TOM_ROLE.ROLE_ID AND TOM_ROLE.STATUS='Y' AND
		TOM_ROLE_AUTHORITIES.STATUS='Y' AND TOM_AUTHORITIES.STATUS='Y' AND
		TOM_ADMIN_ROLES.ADMIN_ID= #{id}
	</select>
	<select id="selectByRoleid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select * from TOM_ADMIN_ROLES where role_id = #{roleId}
	</select>
	<select id="selectRoleByRoleId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select * from TOM_ADMIN_ROLES where role_id = #{roleId}
	</select>
	<select id="selectPermByAdminId" parameterType="java.lang.Integer"
		resultMap="PermissionTemp">
		SELECT
		tar.role_id,
		trs.role_scope,
		trs.role_type,
		ta.AUTHORITY_ID,
		ta.AUTHORITY_NAME,
		ta.AUTHORITY_TYPE,
		ta.AUTHORITY_URL,
		ta.METHOD
		FROM
		tom_admin_roles tar
		LEFT JOIN TOM_ROLE_AUTHORITIES tra
		ON
		tar.role_id=tra.role_id
		LEFT JOIN TOM_ROLE_SCOPES trs
		ON
		trs.role_id=tar.role_id
		LEFT JOIN TOM_AUTHORITIES ta
		ON
		ta.AUTHORITY_ID=tra.AUTHORITY_ID
		WHERE
		tar.admin_id=#{id}
	</select>
</mapper>