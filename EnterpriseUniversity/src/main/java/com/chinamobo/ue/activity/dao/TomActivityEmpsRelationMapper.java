package com.chinamobo.ue.activity.dao;

import java.util.List;
import java.util.Map;

import com.chinamobo.ue.activity.common.BaseDao;
import com.chinamobo.ue.activity.dto.TomActivityEmpDto;
import com.chinamobo.ue.activity.dto.TomActivityProcessDto;
import com.chinamobo.ue.activity.entity.TomActivity;
import com.chinamobo.ue.activity.entity.TomActivityEmpsRelation;
import com.chinamobo.ue.activity.entity.TomActivityEmpsRelationKey;
import com.chinamobo.ue.reportforms.dto.EmpActivityDto;
import com.chinamobo.ue.system.entity.TomEmp;

public interface TomActivityEmpsRelationMapper {//extends BaseDao<TomActivityEmpsRelationKey>{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(TomActivityEmpsRelationKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    int insert(TomActivityEmpsRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    int insertSelective(TomActivityEmpsRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    TomActivityEmpsRelation selectByPrimaryKey(TomActivityEmpsRelationKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TomActivityEmpsRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_ACTIVITY_EMPS_RELATION
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TomActivityEmpsRelation record);

	List<TomActivityEmpsRelation> selectByActivityId(int activityId);

	List<TomActivityEmpsRelation> selectByActivitycode(String code);
	/**
	 * 
	 * 功能描述：[根据活动ID删除]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年5月25日 下午4:20:53
	 * @param activityId
	 */
	void deleteByActivityId(Integer activityId);

	int countByExample(TomActivityEmpsRelation record);
	
	int countByApplyExample(TomActivityEmpsRelation record);
	
	int countByExamples(TomActivityEmpsRelation record);

	/**
	 * 
	 * 功能描述：[查询活动人员关联]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年5月29日 下午5:14:26
	 * @param empsRelationExample
	 * @return
	 */
	List<TomActivityEmpsRelation> selectListByExample(
			TomActivityEmpsRelation empsRelationExample);
	//查询已报名人员
	List<TomActivityEmpsRelation> selectListApplyExample(Map<Object,Object> map);
	//查询开放名单人员
	List<TomActivityEmpDto> selectListEmpExample(Map<Object,Object> map);
	
	List<TomActivityEmpsRelation> selectListExample(Map<Object,Object> map);
	//用于消息查询活动中的人
	List<TomActivityEmpsRelation> selectByActivityId2(int activityId);

	//查询某个人的活动信息
	List<TomActivityEmpDto> selectActiveListByEmp(Map<Object,Object> map);
	
	int countActiveListByEmp(Map<Object,Object> map);
	//平台统计
	List<TomActivityEmpDto> selectpingtaibyDate(Map<Object,Object> map);
	int countpingtaibyDate(Map<Object,Object> map);
	
	
	List<TomEmp> selectpingtailearn(Map<Object,Object> map);
	int countpingtailearn(Map<Object,Object> map);
	
	List<TomEmp> selectpingtaipel(Map<Object,Object> map);
	int countpingtaipel(Map<Object,Object> map);
	
	List<TomActivityEmpDto> selectLogintimebyDate(Map<Object,Object> map);
	int countLogintimebyDate(Map<Object,Object> map);
	
	/**
	 * 查询活动完成进度
	 */
	 int selectTotalTask(Map<Object,Object> map);
	 int selectFinishedCourseTask(Map<Object,Object> map);
	 int selectFinishedExamTask(Map<Object,Object> map);
	 int countByProcessExample(TomActivityProcessDto record);
	 List<TomActivityProcessDto> selectProcessListExample(Map<Object,Object> map);
	 List<TomActivityProcessDto> selectAllListExample(Map<Object,Object> map);
	 
	//查询时间段内人员的总活动数
	 int countEmpAll(Map<Object, Object> map);
	 //查询时间段内人员的活动ID
	 List<EmpActivityDto> selectEmpAll(Map<Object, Object> map);
	 //查询活动相关人员
	 List<TomActivityEmpsRelation> selectActEmpById(int activityId);
}