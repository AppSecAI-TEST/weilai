<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.activity.dao.TomActivityMapper">
	<resultMap id="BaseResultMap" type="com.chinamobo.ue.activity.entity.TomActivity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="ACTIVITY_ID" property="activityId" jdbcType="DECIMAL" />
		<result column="ACTIVITY_NUMBER" property="activityNumber"
			jdbcType="VARCHAR" />
		<result column="ACTIVITY_NAME" property="activityName"
			jdbcType="VARCHAR" />
		<result column="ACTIVITY_NAME_EN" property="activityNameEn"
			jdbcType="VARCHAR" />
		<result column="INTRODUCTION" property="introduction" jdbcType="VARCHAR" />
		<result column="INTRODUCTION_EN" property="introductionEn"
			jdbcType="VARCHAR" />
		<result column="PROTOCOL" property="protocol" jdbcType="VARCHAR" />
		<result column="PROTOCOL_START_TIME" property="protocolStartTime"
			jdbcType="TIMESTAMP" />
		<result column="PROTOCOL_END_TIME" property="protocolEndTime"
			jdbcType="TIMESTAMP" />
		<result column="TRAIN_FEE" property="trainFee" jdbcType="DECIMAL" />
		<result column="NEED_APPLY" property="needApply" jdbcType="VARCHAR" />
		<result column="NUMBER_OF_PARTICIPANTS" property="numberOfParticipants"
			jdbcType="DECIMAL" />
		<result column="STAFF_LEVELS" property="staffLevels" jdbcType="VARCHAR" />
		<result column="CITY" property="city" jdbcType="VARCHAR" />
		<result column="CITY_EN" property="cityEn" jdbcType="VARCHAR" />
		<!-- <result column="CITY_EN" property="cityEn" jdbcType="VARCHAR" /> -->
		<result column="ADMINS" property="admins" jdbcType="VARCHAR" />
		<result column="APPLICATION_START_TIME" property="applicationStartTime"
			jdbcType="TIMESTAMP" />
		<result column="APPLICATION_DEADLINE" property="applicationDeadline"
			jdbcType="TIMESTAMP" />
		<result column="ACTIVITY_START_TIME" property="activityStartTime"
			jdbcType="TIMESTAMP" />
		<result column="ACTIVITY_END_TIME" property="activityEndTime"
			jdbcType="TIMESTAMP" />
		<result column="DEPTS" property="depts" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
		<!-- zhui jia wanglg -->
		<result column="ACT_PICTURE" property="actPicture" jdbcType="VARCHAR" />
		<result column="ACT_PICTURE_EN" property="actPictureEn" jdbcType="VARCHAR" />
		<result column="activityCount" property="activityCount"
			jdbcType="VARCHAR" />
		<result column="ADMIN_NAMES" property="adminsNames" jdbcType="VARCHAR" />
		<result column="CREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
		<result column="IS_CN" property="isCN" jdbcType="VARCHAR" />
		<result column="IS_EN" property="isEN" jdbcType="VARCHAR" />
		<result column="PARENT_PROJECT_CLASSIFY_NAME" property="parentProjectClassifyName" jdbcType="VARCHAR" />
     <result column="SECTION_TYPES" property="sectionTypes" jdbcType="VARCHAR" />
	</resultMap>
	
<!-- 	<resultMap type="com.chinamobo.ue.reportforms.dto.ActivityDeptListDto" id="BaseResultMap1" extends="BaseResultMap">
	<id column="ACTIVITY_ID" property="actitvtyId" jdbcType="DECIMAL" />
	<result column="ACTIVITY_NUMBER" property="activityNumber"
			jdbcType="VARCHAR" />
		<result column="ACTIVITY_NAME" property="activityName"
			jdbcType="VARCHAR" />
	
		<result column="NEED_APPLY" property="needApply" jdbcType="VARCHAR" />
		<result column="NUMBER_OF_PARTICIPANTS" property="numberOfParticipants"
			jdbcType="DECIMAL" />
		<result column="ADMINS" property="admins" jdbcType="VARCHAR" />
		<result column="ACTIVITY_START_TIME" property="activityStartTime"
			jdbcType="TIMESTAMP" />
		<result column="ACTIVITY_END_TIME" property="activityEndTime"
			jdbcType="TIMESTAMP" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		zhui jia wanglg
		
		<result column="TOPNAME" property="deptname" jdbcType="VARCHAR" />
		<result column="ORGNAME" property="orgname" jdbcType="VARCHAR" />
		<result column="NAME" property="depttopname" jdbcType="VARCHAR" />
		<result column="TYPENAME" property="deptthname" jdbcType="VARCHAR" />
	</resultMap> -->
	<!-- <sql id="ACTIVITY_SEQ">ACTIVITY_SEQ.nextval</sql> -->
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME,ACTIVITY_NAME_EN,
		INTRODUCTION,INTRODUCTION_EN, PROTOCOL, PROTOCOL_START_TIME,
		PROTOCOL_END_TIME, TRAIN_FEE, NEED_APPLY, NUMBER_OF_PARTICIPANTS,
		STAFF_LEVELS, CITY,CITY_EN,
		ADMINS, APPLICATION_START_TIME,
		APPLICATION_DEADLINE, ACTIVITY_START_TIME,
		ACTIVITY_END_TIME,
		DEPTS,
		CREATOR, CREATE_TIME, OPERATOR, UPDATE_TIME,ACT_PICTURE,ACT_PICTURE_EN,CREATOR_ID,IS_CN,IS_EN
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from TOM_ACTIVITY
		where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from TOM_ACTIVITY
		where ACTIVITY_ID =
		#{activityId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="activityId"
		parameterType="com.chinamobo.ue.activity.entity.TomActivity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into TOM_ACTIVITY (ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME,
		ACTIVITY_NAME_EN,
		INTRODUCTION,INTRODUCTION_EN, PROTOCOL,
		PROTOCOL_START_TIME,
		PROTOCOL_END_TIME, TRAIN_FEE, NEED_APPLY,
		NUMBER_OF_PARTICIPANTS, STAFF_LEVELS, CITY,  CITY_EN, 
		ADMINS, APPLICATION_START_TIME, APPLICATION_DEADLINE,
		ACTIVITY_START_TIME, ACTIVITY_END_TIME,
		DEPTS, CREATOR, CREATE_TIME,
		OPERATOR, UPDATE_TIME,CREATOR_ID,IS_CN,IS_EN)
		values
		(#{activityId,jdbcType=DECIMAL}, #{activityNumber,jdbcType=VARCHAR},
		#{activityName,jdbcType=VARCHAR},
		#{activityNameEn,jdbcType=VARCHAR},
		#{introduction,jdbcType=VARCHAR},#{introductionEn,jdbcType=VARCHAR},
		#{protocol,jdbcType=VARCHAR},
		#{protocolStartTime,jdbcType=TIMESTAMP},
		#{protocolEndTime,jdbcType=TIMESTAMP}, #{trainFee,jdbcType=DECIMAL},
		#{needApply,jdbcType=VARCHAR},
		#{numberOfParticipants,jdbcType=DECIMAL},
		#{staffLevels,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},#{cityEn,jdbcType=VARCHAR},
		#{admins,jdbcType=VARCHAR},
		#{applicationStartTime,jdbcType=TIMESTAMP},
		#{applicationDeadline,jdbcType=TIMESTAMP},
		#{activityStartTime,jdbcType=TIMESTAMP},
		#{activityEndTime,jdbcType=TIMESTAMP},
		#{depts,jdbcType=VARCHAR},
		#{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{operator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
		#{creatorId,jdbcType=VARCHAR}, #{isCN,jdbcType=VARCHAR},
		#{isEN,jdbcType=VARCHAR})
	</insert>


	<!-- Wanglg add activity 2016年3月10日 -->
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="activityId" parameterType="com.chinamobo.ue.activity.entity.TomActivity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<!-- <selectKey keyProperty="activityId" resultType="Integer" order="BEFORE"> 
			select <include refid="ACTIVITY_SEQ" /> from dual </selectKey> -->
		insert into TOM_ACTIVITY
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<!-- ACTIVITY_ID, -->
			<if test="activityNumber != null">
				ACTIVITY_NUMBER,
			</if>
			<if test="activityName != null">
				ACTIVITY_NAME,
			</if>
			<if test="activityNameEn != null">
				ACTIVITY_NAME_EN,
			</if>
			<if test="introduction != null">
				INTRODUCTION,
			</if>
			<if test="introductionEn != null">
				INTRODUCTION_EN,
			</if>
			<if test="protocol != null">
				PROTOCOL,
			</if>
			<if test="protocolStartTime != null">
				PROTOCOL_START_TIME,
			</if>
			<if test="protocolEndTime != null">
				PROTOCOL_END_TIME,
			</if>
			<if test="trainFee != null">
				TRAIN_FEE,
			</if>
			<if test="needApply != null">
				NEED_APPLY,
			</if>
			<if test="numberOfParticipants != null">
				NUMBER_OF_PARTICIPANTS,
			</if>
			<if test="staffLevels != null">
				STAFF_LEVELS,
			</if>
			<if test="city != null">
				CITY,
			</if>
			<if test="cityEn != null">
				CITY_EN,
			</if>
			<if test="admins != null">
				ADMINS,
			</if>
			<if test="adminNames != null">
				ADMIN_NAMES,
			</if>
			<if test="applicationStartTime != null">
				APPLICATION_START_TIME,
			</if>
			<if test="applicationDeadline != null">
				APPLICATION_DEADLINE,
			</if>
			<if test="activityStartTime != null">
				ACTIVITY_START_TIME,
			</if>
			<if test="activityEndTime != null">
				ACTIVITY_END_TIME,
			</if>
			<if test="depts != null">
				DEPTS,
			</if>
			<if test="creator != null">
				CREATOR,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="operator != null">
				OPERATOR,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="actPicture != null">
				ACT_PICTURE,
			</if>
			<if test="actPictureEn != null">
				ACT_PICTURE_EN,
			</if>
			<if test="creatorId != null">
				CREATOR_ID,
			</if>
			<if test="isCN != null">
				IS_CN,
			</if>
			<if test="isEN != null">
				IS_EN,
			</if>
			<if test="parentClassifyId !=null">
				PARENT_CLASSIFY_ID,
			</if>
			<if test="parentProjectClassifyName !=null">
				PARENT_PROJECT_CLASSIFY_NAME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<!-- <if test="activityId != null" > #{activityId,jdbcType=DECIMAL}, </if> -->
			<if test="activityNumber != null">
				#{activityNumber,jdbcType=VARCHAR},
			</if>
			<if test="activityName != null">
				#{activityName,jdbcType=VARCHAR},
			</if>
			<if test="activityNameEn != null">
				#{activityNameEn,jdbcType=VARCHAR},
			</if>
			<if test="introduction != null">
				#{introduction,jdbcType=VARCHAR},
			</if>
			<if test="introductionEn != null">
				#{introductionEn,jdbcType=VARCHAR},
			</if>
			<if test="protocol != null">
				#{protocol,jdbcType=VARCHAR},
			</if>
			<if test="protocolStartTime != null">
				#{protocolStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="protocolEndTime != null">
				#{protocolEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="trainFee != null">
				#{trainFee,jdbcType=DECIMAL},
			</if>
			<if test="needApply != null">
				#{needApply,jdbcType=VARCHAR},
			</if>
			<if test="numberOfParticipants != null">
				#{numberOfParticipants,jdbcType=DECIMAL},
			</if>
			<if test="staffLevels != null">
				#{staffLevels,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="cityEn != null">
				#{cityEn,jdbcType=VARCHAR},
			</if>
			<if test="admins != null">
				#{admins,jdbcType=VARCHAR},
			</if>
			<if test="adminNames != null">
				#{adminNames,jdbcType=VARCHAR},
			</if>
			<if test="applicationStartTime != null">
				#{applicationStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="applicationDeadline != null">
				#{applicationDeadline,jdbcType=TIMESTAMP},
			</if>
			<if test="activityStartTime != null">
				#{activityStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="activityEndTime != null">
				#{activityEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="depts != null">
				#{depts,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actPicture != null">
				#{actPicture,jdbcType=VARCHAR},
			</if>
			<if test="actPictureEn != null">
				#{actPictureEn,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=VARCHAR},
			</if>
			<if test="isCN != null">
				#{isCN,jdbcType=VARCHAR},
			</if>
			<if test="isEN != null">
				#{isEN,jdbcType=VARCHAR},
			</if>
			 <if test="parentClassifyId != null"> 
			#{parentClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="parentProjectClassifyName != null">
			#{parentProjectClassifyName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.chinamobo.ue.activity.entity.TomActivity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update TOM_ACTIVITY
		<set>
			<if test="activityNumber != null">
				ACTIVITY_NUMBER = #{activityNumber,jdbcType=VARCHAR},
			</if>
			<if test="activityName != null">
				ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
			</if>
			<if test="activityNameEn != null">
				ACTIVITY_NAME_EN = #{activityNameEn,jdbcType=VARCHAR},
			</if>
			<if test="introduction != null">
				INTRODUCTION = #{introduction,jdbcType=VARCHAR},
			</if>
			<if test="introductionEn != null">
				INTRODUCTION_EN = #{introductionEn,jdbcType=VARCHAR},
			</if>
			<if test="protocol != null">
				PROTOCOL = #{protocol,jdbcType=VARCHAR},
			</if>
			<if test="protocolStartTime != null">
				PROTOCOL_START_TIME =
				#{protocolStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="protocolEndTime != null">
				PROTOCOL_END_TIME =
				#{protocolEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="trainFee != null">
				TRAIN_FEE = #{trainFee,jdbcType=DECIMAL},
			</if>
			<if test="needApply != null">
				NEED_APPLY = #{needApply,jdbcType=VARCHAR},
			</if>
			<if test="numberOfParticipants != null">
				NUMBER_OF_PARTICIPANTS =
				#{numberOfParticipants,jdbcType=DECIMAL},
			</if>
			<if test="staffLevels != null">
				STAFF_LEVELS = #{staffLevels,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				CITY = #{city,jdbcType=VARCHAR},
			</if>
			<if test="cityEn != null">
				CITY_EN = #{cityEn,jdbcType=VARCHAR},
			</if>
			<if test="admins != null">
				ADMINS = #{admins,jdbcType=VARCHAR},
			</if>
			<if test="adminNames != null">
				ADMIN_NAMES = #{adminNames,jdbcType=VARCHAR},
			</if>
			<if test="applicationStartTime != null">
				APPLICATION_START_TIME =
				#{applicationStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="applicationDeadline != null">
				APPLICATION_DEADLINE =
				#{applicationDeadline,jdbcType=TIMESTAMP},
			</if>
			<if test="activityStartTime != null">
				ACTIVITY_START_TIME =
				#{activityStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="activityEndTime != null">
				ACTIVITY_END_TIME =
				#{activityEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="depts != null">
				DEPTS = #{depts,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				CREATOR = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator != null">
				OPERATOR = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				CREATOR_ID=#{creatorId,jdbcType=VARCHAR},
			</if>
			<if test="actPicture !=null">
				ACT_PICTURE=#{actPicture,jdbcType=VARCHAR},
			</if>
			<if test="actPictureEn !=null">
				ACT_PICTURE_EN=#{actPictureEn,jdbcType=VARCHAR},
			</if>
			<if test="isCN !=null">
				IS_CN=#{isCN,jdbcType=VARCHAR},
			</if>
			<if test="isEN !=null">
				IS_EN=#{isEN,jdbcType=VARCHAR},
			</if>
			<if test="parentClassifyId !=null">
		      	PARENT_CLASSIFY_ID= #{parentClassifyId,jdbcType=VARCHAR},
		      </if>
		      <if test="parentProjectClassifyName !=null">
		      	PARENT_PROJECT_CLASSIFY_NAME= #{parentProjectClassifyName,jdbcType=VARCHAR},
		      </if>
		</set>
		where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chinamobo.ue.activity.entity.TomActivity">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update TOM_ACTIVITY
		set ACTIVITY_NUMBER =
		#{activityNumber,jdbcType=VARCHAR},
		ACTIVITY_NAME =
		#{activityName,jdbcType=VARCHAR},
		ACTIVITY_NAME_EN =
		#{activityNameEn,jdbcType=VARCHAR},
		INTRODUCTION =
		#{introduction,jdbcType=VARCHAR},
		INTRODUCTION_EN =
		#{introductionEn,jdbcType=VARCHAR},
		PROTOCOL =
		#{protocol,jdbcType=VARCHAR},
		PROTOCOL_START_TIME =
		#{protocolStartTime,jdbcType=TIMESTAMP},
		PROTOCOL_END_TIME =
		#{protocolEndTime,jdbcType=TIMESTAMP},
		TRAIN_FEE =
		#{trainFee,jdbcType=DECIMAL},
		NEED_APPLY =
		#{needApply,jdbcType=VARCHAR},
		NUMBER_OF_PARTICIPANTS =
		#{numberOfParticipants,jdbcType=DECIMAL},
		STAFF_LEVELS =
		#{staffLevels,jdbcType=VARCHAR},
		CITY = #{city,jdbcType=VARCHAR},CITY_EN = #{cityEn,jdbcType=VARCHAR},
		ADMINS = #{admins,jdbcType=VARCHAR},
		APPLICATION_START_TIME =
		#{applicationStartTime,jdbcType=TIMESTAMP},
		APPLICATION_DEADLINE =
		#{applicationDeadline,jdbcType=TIMESTAMP},
		ACTIVITY_START_TIME =
		#{activityStartTime,jdbcType=TIMESTAMP},
		ACTIVITY_END_TIME =
		#{activityEndTime,jdbcType=TIMESTAMP},
		DEPTS =
		#{depts,jdbcType=VARCHAR},
		CREATOR = #{creator,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		OPERATOR =
		#{operator,jdbcType=VARCHAR},
		UPDATE_TIME =
		#{updateTime,jdbcType=TIMESTAMP},
		IS_CN=#{isCN,jdbcType=VARCHAR},
		IS_EN=#{isEN,jdbcType=VARCHAR},
		CREATOR_ID=#{creatorId,jdbcType=VARCHAR}
		where ACTIVITY_ID =
		#{activityId,jdbcType=DECIMAL}
	</update>

	<sql id="Base_Column_List1">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME,ACTIVITY_NAME_EN,
		ACTIVITY_START_TIME, ACTIVITY_END_TIME, CREATOR, CREATE_TIME,
		OPERATOR, UPDATE_TIME
	</sql>

	<select id="selectListByParam" resultMap="BaseResultMap"
		parameterType="map">
		select * from TOM_ACTIVITY where 1=1
		<if test="activityName != null and '' != activityName ">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
			or INSTR(ACTIVITY_NUMBER,#{activityName,jdbcType=VARCHAR})>0
		</if>
		<if test="beginTimeq != null and '' != beginTimeq">
		<![CDATA[AND DATE(activity_start_time) >= #{beginTimeq,jdbcType=TIMESTAMP} ]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		<![CDATA[AND  DATE(activity_start_time) <= #{endTimeq,jdbcType=TIMESTAMP} ]]>
		</if>
		order by UPDATE_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	<!-- 复选框查询 -->
	<select id="selectListByCodes" resultMap="BaseResultMap" parameterType="map">
	  select * from TOM_ACTIVITY where 1=1
	  and activity_id  in
	  <foreach collection="Ids" item="item" index="index"  open="(" separator="," close=")">
		 #{item}
	</foreach>
	order by UPDATE_TIME desc
	</select>

	<select id="countByList" parameterType="map" resultType="java.lang.Integer">
		select count(*) from TOM_ACTIVITY
		where 1=1
		<if test="activityName != null">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
			or INSTR(ACTIVITY_NUMBER,#{activityName,jdbcType=VARCHAR})>0
		</if>
		<if test="beginTimeq != null and '' != beginTimeq">
		<![CDATA[AND DATE(ACTIVITY_START_TIME) >=#{beginTimeq,jdbcType=TIMESTAMP} ]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		<![CDATA[AND DATE(ACTIVITY_START_TIME) <=#{endTimeq,jdbcType=TIMESTAMP} ]]>
		</if>
	</select>
	<select id="countCompletedNum" parameterType="map" resultType="java.lang.Integer">
	    SELECT COUNT(DISTINCT er. CODE)
		FROM tom_activity_property tp
		LEFT JOIN tom_activity_emps_relation er  ON tp.activity_id = er.activity_id 
		where tp.activity_id = #{activityId,jdbcType=VARCHAR} and er.`CODE` not in 
		(
		SELECT DISTINCT
			er. CODE
		FROM tom_activity_property tp
		LEFT JOIN tom_activity_emps_relation er  ON tp.activity_id = er.activity_id and tp.COURSE_ID is not null
		LEFT JOIN tom_course_learning_record l ON l. CODE = er. CODE
		where tp.activity_id = #{activityId,jdbcType=VARCHAR}
		UNION 
		SELECT DISTINCT
			er. CODE
		FROM tom_activity_property tp
		LEFT JOIN tom_activity_emps_relation er  ON tp.activity_id = er.activity_id and tp.EXAM_ID is not null
		LEFT JOIN tom_exam_score l ON l. CODE = er. CODE 
		where tp.activity_id = #{activityId,jdbcType=VARCHAR} and l.grade_state='y'
		)
	</select>

	<select id="selectAllList" parameterType="com.chinamobo.ue.activity.entity.TomActivity"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from TOM_ACTIVITY where 1=1
		<if test="activityName != null and '' != activityName ">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
		</if>
	</select>

	<!-- API -->
	<select id="selectByUser" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">
		SELECT b.apply_status AS applyStatus,
		a.ACT_PICTURE AS actPicture,
		a.ACT_PICTURE_EN AS actPictureEn,
		a.INTRODUCTION AS introduction,
		a.INTRODUCTION_EN AS introductionEn,
		a.ACTIVITY_NAME AS activityName,
		a.ACTIVITY_NAME_EN AS activityNameEn,
		a. ACTIVITY_START_TIME AS activityStartTime,
		a.ACTIVITY_END_TIME AS
		activityEndTime,
		a.CITY AS city,
		a.CITY_EN AS cityEn,
		a.IS_CN AS isCN,
		a.IS_EN AS isEN,
		b.apply_type AS applyType,
		c.course_address AS courseAddress
		FROM TOM_ACTIVITY a
		LEFT JOIN
		TOM_ACTIVITY_EMPS_RELATION b
		ON a.activity_id = b.activity_id
		LEFT JOIN
		tom_activity_property c
		ON c.activity_id = a.activity_id where 1=1
		<if test="code != null and '' != code ">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="activityId != null and '' != activityId ">
			and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectByUserRe" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">
		SELECT b.apply_status AS applyStatus,
		a.ACT_PICTURE AS actPicture,
		a.ACT_PICTURE_EN AS actPictureEn,
		a.INTRODUCTION AS introduction,
		a.INTRODUCTION_EN AS introductionEn,
		a.ACTIVITY_NAME AS activityName,
		a.ACTIVITY_NAME_EN AS activityNameEn,
		a. ACTIVITY_START_TIME AS activityStartTime,
		a.ACTIVITY_END_TIME AS
		activityEndTime,
		a.CITY AS city,
		a.CITY_EN AS cityEn,
		a.IS_CN AS isCN,
		a.IS_EN AS isEN,
		b.apply_type AS applyType,
		c.course_address AS courseAddress,
		c.course_id AS courseId,
		d.exam_id AS
		examId,
		e.course_online AS courseOnline,
		d.offline_exam AS offlineExam,
		e.course_img AS courseImg,
		e.course_name AS courseName,
		d.exam_name AS
		examName
		FROM TOM_ACTIVITY a
		LEFT JOIN TOM_ACTIVITY_EMPS_RELATION b
		ON
		a.activity_id = b.activity_id
		LEFT JOIN tom_activity_property c
		ON
		c.activity_id = a.activity_id
		LEFT JOIN TOM_EXAM d
		ON d.exam_id =
		c.exam_id
		LEFT JOIN tom_courses e
		ON e.course_id = c.course_id
		where 1=1
		<!-- and e.status = 'Y' -->

		<if test="activityId != null and '' != activityId ">
			and b.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>

	</select>
	<select id="countByUserList" parameterType="map" resultType="java.lang.Integer">
		SELECT count(ac.ACTIVITY_ID)
		FROM TOM_ACTIVITY_EMPS_RELATION c
		inner
		JOIN TOM_ACTIVITY ac ON c.ACTIVITY_ID =ac.ACTIVITY_ID
		where
		((c.APPLY_STATUS='Y' and ac.ACTIVITY_END_TIME <![CDATA[>NOW()]]>)
		or (c.APPLY_STATUS='N' and ac.APPLICATION_DEADLINE <![CDATA[>NOW()]]>)or(c.APPLY_TYPE='P'
		and ac.ACTIVITY_START_TIME <![CDATA[>NOW()]]>))
		and c.status='Y'
		<if test="code != null and '' != code ">
			AND c.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="lang== 'cn'">
			and ac.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and ac.is_en='Y'
		</if>
	</select>
	<select id="selectByUserList" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">

		SELECT
		ac.ACTIVITY_ID AS activityId,
		c.apply_status AS applyStatus,
		ac.INTRODUCTION AS introduction,
		ac.INTRODUCTION_EN AS introductionEn,
		ac.ACTIVITY_NAME AS activityName,
		ac.ACTIVITY_NAME_EN AS
		activityNameEn,
		ac.ACTIVITY_START_TIME AS activityStartTime,
		ac.ACTIVITY_END_TIME AS activityEndTime,
		ac.ACT_PICTURE AS actPicture,
		ac.ACT_PICTURE_EN AS actPictureEn,
		ac.need_apply as needApply,
		ac.application_start_time as
		applicationStartTime,
		ac.application_deadline as applicationDeadline,
		ac.CITY AS city,
		ac.IS_CN AS isCN,
		ac.IS_EN AS isEN,
		ac.CITY_EN AS cityEn
		FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
		where
		((c.APPLY_STATUS='Y' and ac.ACTIVITY_END_TIME  <![CDATA[>NOW()]]>)
		or (c.APPLY_STATUS='N' and ac.APPLICATION_DEADLINE  <![CDATA[>NOW()]]>)
		or(c.APPLY_TYPE='P' and ac.ACTIVITY_START_TIME  <![CDATA[>NOW()]]>))
		and c.ACTIVITY_ID =ac.ACTIVITY_ID
		and c.status='Y'
		<if test="code != null and '' != code ">
			AND c.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="lang== 'cn'">
			and ac.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and ac.is_en='Y'
		</if>
		order by ac.UPDATE_TIME desc

		limit<![CDATA[
             #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>

	<select id="selectByUserListGlobel" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">

		SELECT
		ac.ACTIVITY_ID AS activityId,
		c.apply_status AS applyStatus,
		ac.INTRODUCTION AS introduction,
		ac.INTRODUCTION_EN AS introductionEn,
		ac.ACTIVITY_NAME AS activityName,
		ac.ACTIVITY_NAME_EN AS
		activityNameEn,
		ac.ACTIVITY_START_TIME AS activityStartTime,
		ac.ACTIVITY_END_TIME AS activityEndTime,
		ac.ACT_PICTURE AS actPicture,
		ac.ACT_PICTURE_EN AS actPictureEn,
		ac.need_apply as needApply,
		ac.application_start_time as
		applicationStartTime,
		ac.application_deadline as applicationDeadline,
		ac.CITY AS city,
		ac.IS_CN AS isCN,
		ac.IS_EN AS isEN,
		ac.CITY_EN AS cityEn
		FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
		where
		c.ACTIVITY_ID =ac.ACTIVITY_ID and c.status='Y'
		<if test="code != null and '' != code ">
			AND c.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="null !=example.activityName">
			and
			INSTR(ACTIVITY_NAME,#{example.activityName,jdbcType=VARCHAR})>0
		</if>
		<if test="null !=example.activityNameEn">
			and
			INSTR(ACTIVITY_NAME_EN,#{example.activityNameEn,jdbcType=VARCHAR})>0
		</if>
		order by ac.UPDATE_TIME desc

		limit<![CDATA[
            #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>

	<select id="countByListGlobel" parameterType="map" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
		where
		c.ACTIVITY_ID =ac.ACTIVITY_ID and c.status='Y'
		<if test="lang== 'cn'">
			and ac.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and ac.is_en='Y'
		</if>
		<if test="code != null and '' != code ">
			AND c.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="example.activityName != null and '' != example.activityName ">
			and
			INSTR(ac.ACTIVITY_NAME,#{example.activityName,jdbcType=VARCHAR})>0
		</if>
		<if test="example.activityNameEn != null and '' != example.activityNameEn ">
			and
			INSTR(ac.ACTIVITY_NAME_EN,#{example.activityNameEn,jdbcType=VARCHAR})>0
		</if>
	</select>
	<select id="selectByUserDetail" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">
		SELECT
		a.ACTIVITY_ID AS activityId,
		a.APPLICATION_START_TIME as
		applicationStartTime,
		a.APPLICATION_DEADLINE as applicationDeadline,
		a.ACTIVITY_NAME AS activityName,
		a.ACTIVITY_NAME_EN AS activityNameEn,
		a.NEED_APPLY as needApply,
		a. ACTIVITY_START_TIME AS activityStartTime,
		a.ACTIVITY_END_TIME AS activityEndTime,
		a.INTRODUCTION AS introduction,
		a.INTRODUCTION_EN AS introductionEn,
		a.ACT_PICTURE AS actPicture,
		a.ACT_PICTURE_EN AS actPictureEn,
		b.apply_status AS applyStatus,
		a.CITY AS city,
		a.CITY_EN AS cityEn,
		a.IS_CN AS isCN,
		a.IS_EN AS isEN,
		a.NUMBER_OF_PARTICIPANTS
		as numberOfParticipants
		FROM TOM_ACTIVITY a
		LEFT JOIN
		TOM_ACTIVITY_EMPS_RELATION b
		ON b.activity_id = a.activity_id
		WHERE 1=1
		<if test="lang== 'cn'">
			and ac.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and ac.is_en='Y'
		</if>
		<!-- and e.status = 'Y' -->
		<if test="code != null and '' != code ">
			and b.code = #{code,jdbcType=VARCHAR}
		</if>
		<if test="activityId != null and '' != activityId ">
			and a.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
		<if test="applyType != null and '' != applyType ">
			and b.APPLY_TYPE = #{applyType,jdbcType=VARCHAR}
		</if>
	</select>

	<sql id="detailEdit_actColumns">
		a.ADMINS_NAMES AS adminNames,
		a.admins AS admins,
		a.ACTIVITY_NAME AS activityName,
		a.ACTIVITY_NAME_EN AS activityNameEn,
		a.INTRODUCTION AS introduction,
		a.INTRODUCTION_EN AS introductionEn,
		a.PROTOCOL AS protocol ,
		a.PROTOCOL_START_TIME AS protocolStartTime,
		a.PROTOCOL_END_TIME AS protocolEndTime,
		a.TRAIN_FEE AS trainFee,
		a.NEED_APPLY AS needApply,
		a.NUMBER_OF_PARTICIPANTS AS
		numberOfParticipants,
		a.STAFF_LEVELS AS staffLevels,
		a.CITY AS city,
		a.CITY_EN AS cityEn,
		a.IS_CN AS isCN,
		a.IS_EN AS isEN,
		a.APPLICATION_START_TIME AS applicationStartTime,
		a.APPLICATION_DEADLINE AS applicationDeadline,
		a.ACTIVITY_START_TIME AS
		activityStartTime,
		a.ACTIVITY_END_TIME AS activityEndTime,
		a.ACT_PICTURE AS actPicture,
		a.ACT_PICTURE_EN AS actPictureEN,
	</sql>
	<sql id="detailEdit_proColumns">
		c.ACTIVITY_ID AS activityId,
		c.PACKAGE_ID AS packageId,
		c.SORT AS sort,
		c.START_TIME AS startTime,
		c.END_TIME AS endTime,
		c.LECTURERS AS lecturers,
		c.COURSE_ADDRESS AS courseAddress,
		c.COURSE_TIME AS courseTime,
		c.UNIT_PRICE AS unitPrice,
		c.TOTAL_PRICE AS
		totalPrice,
		c.EXAM_NAME AS examName,
		c.RETAKING_EXAM_TIMES AS
		retakingExamTimes,
		c.OFFLINE_EXAM AS offlineExam,
		c.PRE_TASK AS preTask,
	</sql>
	<sql id="detailEdit_prosColumns">
		t.PACKAGE_NAME AS packageName,
	</sql>
	<sql id="detailEdit_FeesColumns">
		f.FEE_ID AS feeId,
		f.FEE AS fee,
	</sql>
	<sql id="detailEdit_EmpsRColumns">
		b.CODE AS code,
		b.APPLY_STATUS AS applyStatus,
		b.APPLY_TYPE
		AS applyType,
		b.IS_REQUIRED AS isRequired
	</sql>
	<select id="selectDetails" resultType="com.chinamobo.ue.activity.dto.TomActivityDto"
		parameterType="map">
		SELECT
		<include refid="detailEdit_actColumns" />
		<include refid="detailEdit_proColumns" />
		<include refid="detailEdit_prosColumns" />
		<include refid="detailEdit_FeesColumns" />
		<include refid="detailEdit_EmpsRColumns" />
		FROM TOM_ACTIVITY a
		RIGHT JOIN tom_activity_property c
		ON c.activity_id
		= a.activity_id
		RIGHT JOIN TOM_ACTIVITY_EMPS_RELATION b
		ON a.activity_id
		= b.activity_id
		RIGHT JOIN TOM_TASK_PACKAGE t
		ON t.PACKAGE_ID =
		c.PACKAGE_ID
		LEFT JOIN tom_task_exam_relation te
		ON te.package_id =
		t.package_id
		LEFT JOIN tom_task_courses_relation tc
		ON tc.package_id =
		t.package_id
		LEFT JOIN tom_activity_fees f
		ON c.activity_id =
		f.activity_id
		LEFT JOIN tom_emp em
		ON em.code = b.code
		<if test="activity_id != null and '' != activity_id ">
			and a.ACTIVITY_ID = #{activity_id,jdbcType=DECIMAL}
		</if>
	</select>

	<select id="FindByCoursecount" parameterType="map" resultType="java.lang.Integer">
		select
		count(*)
		from tom_exam_score S LEFT JOIN
		TOM_activity_emps_relation AC on s.code =
		AC.code
		LEFT JOIN TOM_ACTIVITY
		SA
		ON SA.activity_id = AC.activity_id
		where 1=1
		<if test="code !=null and '' !=code">
			AND AC.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="gradeState !=null and '' !=gradeState">
			AND S.GRADE_STATE=#{gradeState,jdbcType=VARCHAR}
		</if>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND (AC.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or
			AC.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR})
		</if>
	</select>

	<select id="FindByCourseList" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">

		SELECT AC.ACTIVITY_ID AS activityId,
		B.apply_status AS applyStatus,
		AC.need_apply as needApply,
		AC.ACTIVITY_NAME AS activityName,
		AC.ACTIVITY_NAME_EN AS activityNameEn,
		AC. ACTIVITY_START_TIME AS
		activityStartTime,
		AC.ACTIVITY_END_TIME AS activityEndTime,
		AC.ACT_PICTURE AS actPicture,
		AC.ACT_PICTURE_EN AS actPictureEn
		FROM TOM_ACTIVITY AC
		LEFT JOIN
		TOM_ACTIVITY_EMPS_RELATION B
		ON AC.activity_id = B.activity_id
		LEFT JOIN
		TOM_EXAM_SCORE S
		ON S.code = B.code
		WHERE 1=1
		<if test="applyStatus !=null and '' !=applyStatus">
			AND (B.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or
			B.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR})
		</if>

		<if test="gradeState !=null and '' !=gradeState">
			AND S.GRADE_STATE=#{gradeState,jdbcType=VARCHAR}
		</if>
		<if test="code !=null and '' !=code">
			AND B.CODE = #{code,jdbcType=VARCHAR}
		</if>

		limit<![CDATA[
             #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>


	<select id="FindAllBylist" resultType="com.chinamobo.ue.api.activity.dto.ActResults"
		parameterType="map">

		SELECT AC.ACTIVITY_ID AS activityId,
		B.apply_status AS applyStatus,
		AC.need_apply as needApply,
		AC.ACTIVITY_NAME AS activityName,
		AC.ACTIVITY_NAME_EN AS activityNameEn,
		AC. ACTIVITY_START_TIME AS
		activityStartTime,
		AC.ACTIVITY_END_TIME AS activityEndTime,
		AC.ACT_PICTURE AS actPicture,
		AC.ACT_PICTURE_EN AS actPictureEN
		FROM TOM_ACTIVITY AC
		LEFT JOIN
		TOM_ACTIVITY_EMPS_RELATION B
		ON AC.activity_id = B.activity_id
		LEFT JOIN
		TOM_EXAM_SCORE S
		ON S.code = B.code
		WHERE 1=1
		<if test="applyStatus !=null and '' !=applyStatus ">
			AND (B.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or
			B.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR})
		</if>
		<if test="code !=null and '' !=code">
			AND B.CODE = #{code,jdbcType=VARCHAR}
		</if>

		limit<![CDATA[
            #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	<select id="selectAllByEmp" parameterType="map" resultMap="BaseResultMap">
		select
		a.*
		from TOM_ACTIVITY a,TOM_ACTIVITY_EMPS_RELATION b where
		b.status='Y' and b.code=#{code,jdbcType=VARCHAR}
		and b.APPLY_STATUS='Y'
		and a.ACTIVITY_ID=b.ACTIVITY_ID
				<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	</select>
	<select id="countNotStart" parameterType="map" resultType="java.lang.Integer">
		select count(*) from TOM_ACTIVITY a left join
		TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id
		where
		b.status='Y' 
	 <![CDATA[
	and a.ACTIVITY_START_TIME  >NOW()
	]]>
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	</select>
	<select id="countUnderway" parameterType="map" resultType="java.lang.Integer">
		select count(*) from TOM_ACTIVITY a left join
		TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id
		where
		b.status='Y' 
	 <![CDATA[
	and ((a.ACTIVITY_START_TIME  <=NOW() and a.ACTIVITY_END_TIME>NOW()
	]]>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>)
		or(b.APPLY_TYPE='P' AND a.ACTIVITY_START_TIME <![CDATA[>NOW()]]>)
		)
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	</select>
	<select id="countFinished" parameterType="map" resultType="java.lang.Integer">
		select count(*) from (select DISTINCT a.* from TOM_ACTIVITY a left
		join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id
		where (b.status='Y' and a.ACTIVITY_ID in (${ids})
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
		)or a.ACTIVITY_ID in (select ACTIVITY_ID from TOM_ACTIVITY_DEPT where
		HEADER_CODE=#{code,jdbcType=VARCHAR} and push_status='Y')) as a
	</select>
	<select id="countNotPass" parameterType="map" resultType="java.lang.Integer">
		select count(*) from TOM_ACTIVITY a left join
		TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id
		where
		b.status='Y' and a.ACTIVITY_ID in (${ids}) and ((1=1
		<!-- <![CDATA[ -->
		<!-- and ((a.ACTIVITY_END_TIME<SYSDATE -->
		<!-- ]]> -->
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>)
		or (b.APPLY_TYPE='P' and <![CDATA[NOW()>]]>a.ACTIVITY_START_TIME))
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	</select>
	<select id="selectNotStart" parameterType="map" resultMap="BaseResultMap">

		select a.*
		from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b
		on
		a.activity_id = b.activity_id
		where b.status='Y' 
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	 <![CDATA[
	and a.ACTIVITY_START_TIME >NOW()
	]]>
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>
		order by a.UPDATE_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>


	</select>
	<select id="selectUnderway" parameterType="map" resultMap="BaseResultMap">

		select a.*
		from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b
		on
		a.activity_id = b.activity_id
		where b.status='Y' 
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
	 <![CDATA[
	and ((a.ACTIVITY_START_TIME <=NOW() and a.ACTIVITY_END_TIME>NOW()
	]]>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>)
		or(b.APPLY_TYPE='P' AND a.ACTIVITY_START_TIME <![CDATA[>NOW()]]>)
		)
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		order by a.UPDATE_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	<select id="selectFinished" parameterType="map" resultMap="BaseResultMap">

		select DISTINCT a.*
		from TOM_ACTIVITY a left join
		TOM_ACTIVITY_EMPS_RELATION b on
		a.activity_id = b.activity_id
		where
		(b.status='Y' and a.ACTIVITY_ID in (${ids})
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>)or
		a.ACTIVITY_ID in (select ACTIVITY_ID from TOM_ACTIVITY_DEPT where
		HEADER_CODE=#{code,jdbcType=VARCHAR} and push_status='Y')
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
		order by
		a.UPDATE_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>

	</select>
	<select id="selectNotPass" parameterType="map" resultMap="BaseResultMap">

		select a.*
		from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b
		on
		a.activity_id = b.activity_id
		where b.status='Y' 
		<if test="lang== 'cn'">
			and a.is_cn='Y'
		</if>
		<if test="lang== 'en'">
			and a.is_en='Y'
		</if>
		and a.ACTIVITY_ID in
		(${ids}) and ((1=1
		<if test="applyStatus !=null and '' !=applyStatus">
			AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
		</if>)
		or (b.APPLY_TYPE='P' and <![CDATA[NOW()>]]>a.ACTIVITY_START_TIME))
		<if test="code !=null and ''!=code">
			and b.CODE = #{code,jdbcType=VARCHAR}
		</if>
		order by a.UPDATE_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>

	</select>





	<!-- 活动费用条数和列表 -->
	<select id="selectCount" resultType="int" parameterType="map">

		SELECT count(*) FROM TOM_VI_ACTIVITY_FEE
		WHERE 1=1




		<if test="activityName != null and '' != activityName ">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
		</if>
	</select>
	<select id="selectactivityCostList"
		resultType="com.chinamobo.ue.statistics.entity.TomActivityCostStatistics"
		parameterType="map">

		select
		activity_id as actitvtyId,
		ACTIVITY_NAME AS activityName,
		ACTIVITY_START_TIME AS activityStarttime,
		ALL_FEE AS allFee
		from
		TOM_VI_ACTIVITY_FEE where 1=1
		<if test="activityName != null and '' != activityName ">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
		</if>
		order by ACTIVITY_START_TIME desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>

	<!-- 根据员工CODE查询用户和活动信息 -->
	<select id="selectByEmpActivity" resultMap="BaseResultMap"
		parameterType="map">
		select a.* from tom_emp e
		join
		tom_activity_emps_relation aer on
		e.code=aer.code
		left join
		tom_activity a on
		aer.activity_id=a.activity_id
		where aer.apply_status='Y' and e.code=
		#{code,jdbcType=VARCHAR} order by a.create_time desc
		limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	<!--员工 活动数 -->
	<select id="CountByEmpActivity" resultType="int" parameterType="map">
		select count(*) from tom_emp e
		join
		tom_activity_emps_relation aer on
		e.code=aer.code
		left join
		tom_activity a on
		aer.activity_id=a.activity_id
		where aer.apply_status='Y' and e.code=
		#{code,jdbcType=VARCHAR}
	</select>
	<!-- 根据考试id查中英文状态 -->
	<select id="selectByExamPaper" resultMap="BaseResultMap"  parameterType="int">
	   select distinct a.*
       from tom_activity a,tom_task_exam_paper_relation r,tom_activity_property p where 
       a.activity_id = p.activity_id and r. PACKAGE_ID = p. PACKAGE_ID and r.EXAM_PAPER_ID = #{examPaperId,jdbcType=DECIMAL}
	</select>
	
	
	
	 <select  id="selectByEmpId"  resultType="int"  parameterType="int" >
	 select count(a.code) from(
     select code
    from tom_course_emp_relation
    where finish_status='N'
        and course_id= #{courseId,jdbcType=VARCHAR} )as a
  </select> 
  
  <select id="selectAvgScore" resultType="Double"  parameterType="map" >
SELECT ifnull(avg(total_points),0.0)  FROM tom_activity_dept_view as a
					LEFT JOIN tom_activity_property as b on a.activity_id=b.activity_id
					LEFT JOIN tom_exam_score as c ON c.EXAM_ID=b.EXAM_ID 
					WHERE 1=1
					<if test="activityId != null">
				and a.ACTIVITY_ID=#{activityId,jdbcType=DECIMAL}
				</if>
				 AND a.`CODE` =c.`CODE` AND c.GRADE_STATE!='D'
  </select>
    <select id="selectAvgScore1" resultType="Double"  parameterType="map" >
SELECT ifnull(SUM(aaa.total_points),0.0)FROM(SELECT DISTINCT a.`CODE`,total_points FROM tom_activity_emps_relation as a
					LEFT JOIN tom_activity_property as b on a.activity_id=b.activity_id
					LEFT JOIN tom_exam_score as c ON c.EXAM_ID=b.EXAM_ID 
					WHERE 1=1
					<if test="activityId != null">
				and a.ACTIVITY_ID=#{activityId,jdbcType=DECIMAL}
				</if>
					<if test="code != null">
				and a.code=#{code,jdbcType=DECIMAL}
				</if>
				 AND a.`CODE` =c.`CODE` AND c.GRADE_STATE!='D') aaa
  </select>
  <select id="selectOpenNum" resultType="int"  parameterType="map" >
  select count(distinct code) from tom_activity_emps_relation where 1=1
  			<if test="activityId != null">
				and
				INSTR(ACTIVITY_ID,#{activityId,jdbcType=VARCHAR})>0
				</if>
  </select>
  
<select id="CountActivityDept" parameterType="com.chinamobo.ue.reportforms.dto.ActivityDeptListDto" resultType="int">
	SELECT COUNT(*) FROM(
	 select distinct ta.ACTIVITY_ID actitvtyId,ta.ACTIVITY_NUMBER activityNumber, ta.ACTIVITY_NAME activityName,ta.CREATE_TIME createTime,
	 ta.ACTIVITY_START_TIME activityStartTime,ta.ACTIVITY_END_TIME activityEndTime, ta.NEED_APPLY needApply,ta.ADMINS admins,
	 td.ORGNAME orgname,td.TOPNAME topname,td.NAME depttopname,td.TYPENAME  deptthname,tpr.parent_project_classify_name parent_project_classify_name
	  from tom_dept as td,tom_activity as ta,tom_project_resource as tpr
 where 1=1 and  instr(ta.depts ,td.code) and tpr.resource_id=ta.ACTIVITY_ID and tpr.type='A'
		<if test="type != null">
			and
			INSTR(tpr.type,#{activityType,jdbcType=VARCHAR})>0
		</if>
		<if test="activityName != null">
			and
			INSTR(ta.ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
		</if>
	<!-- 	<if test="status != null">
			and
			INSTR(status,#{status,jdbcType=VARCHAR})>0
		</if> -->
		<if test="needApply != null">
			and
			INSTR(ta.need_apply,#{needApply,jdbcType=VARCHAR})>0
		</if>
		<if test="orgname != null">
			and
			INSTR(td.ORGNAME,#{orgname,jdbcType=VARCHAR})>0
		</if>
		<if test="deptname != null">
			and
			INSTR(td.TOPNAME,#{deptname,jdbcType=VARCHAR})>0
		</if>
		<if test="depttopname != null">
			and
			INSTR(td.NAME,#{depttopname,jdbcType=VARCHAR})>0
		</if>
		<if test="depttopname != null">
			and
			INSTR(td.TYPENAME,#{depttopname,jdbcType=VARCHAR})>0
		</if>
		
		<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
	) AS a
	</select>
	
	
	<select id="selectActivityDept" parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.ActivityDeptListDto">
	 select distinct ta.ACTIVITY_ID actitvtyId,ta.ACTIVITY_NUMBER activityNumber, ta.ACTIVITY_NAME activityName,ta.CREATE_TIME createTime,
	 ta.ACTIVITY_START_TIME activityStartTime,ta.ACTIVITY_END_TIME activityEndTime, ta.NEED_APPLY needApply,ta.ADMINS admins,
	 td.ORGNAME orgname,td.TOPNAME topname,td.NAME depttopname,td.TYPENAME  deptthname,td.TOPCODE topcode,ta.DEPTS depts,
	 td.CODE code, tpc.project_name activityType,td.ORGCODE orgcode,ta.DEPTS depts,
	 ta.NUMBER_OF_PARTICIPANTS numberofparticipants
	  from tom_dept as td,tom_activity as ta,tom_project_resource as tpr,tom_project_classify as tpc
 where 1=1 and  instr(ta.depts ,td.code) and tpr.resource_id=ta.ACTIVITY_ID and tpr.type='A' and tpr.project_id=tpc.project_id
		<if test="activityType!= null">
			and tpr.project_id=#{activityType,jdbcType=DECIMAL}
		</if>
		<if test="activityName != null">
			and ta.ACTIVITY_ID=#{activityName,jdbcType=DECIMAL}
<!-- 			INSTR(ta.ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0 -->
		</if>
		<!-- <if test="status != null">
			and
			INSTR(status,#{status,jdbcType=VARCHAR})>0
		</if> -->
		<if test="status ==1">
			and
			 ACTIVITY_START_TIME<![CDATA[>now()]]>
			 and
			  ACTIVITY_END_TIME<![CDATA[<now()]]>
			</if>
			<if test="status ==3">
			 and
			  ACTIVITY_END_TIME<![CDATA[<now()]]>
			</if>
		<if test="needApply != null">
			and
			INSTR(ta.need_apply,#{needApply,jdbcType=VARCHAR})>0
		</if>
		<if test="orgname != null">
			and td.ORGCODE=#{orgname,jdbcType=VARCHAR}
<!-- 			INSTR(td.ORGNAME,#{orgname,jdbcType=VARCHAR})>0 -->
		</if>
		<if test="deptname != null">
			and td.CODE=#{deptname,jdbcType=VARCHAR}
<!-- 			INSTR(td.TOPNAME,#{deptname,jdbcType=VARCHAR})>0 -->
		</if>
		<if test="depttopname != null">
			and td.CODE=#{depttopname,jdbcType=VARCHAR}
<!-- 			INSTR(td.NAME,#{depttopname,jdbcType=VARCHAR})>0 -->
		</if>
		<if test="depttopname != null">
			and td.CODE=#{depttopname,jdbcType=VARCHAR}
<!-- 			INSTR(td.TYPENAME,#{depttopname,jdbcType=VARCHAR})>0 -->
		</if>
		
		<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
	 order by ta.CREATE_TIME desc 
    limit<![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	
		<select id="selectActivityDeptExcel" parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.ActivityDeptListDto">
 select distinct ta.ACTIVITY_ID actitvtyId,ta.ACTIVITY_NUMBER activityNumber, ta.ACTIVITY_NAME activityName,ta.CREATE_TIME createTime,
	 ta.ACTIVITY_START_TIME activityStartTime,ta.ACTIVITY_END_TIME activityEndTime, ta.NEED_APPLY needApply,ta.ADMINS admins,
	 td.ORGNAME orgname,td.TOPNAME topname,td.NAME depttopname,td.TYPENAME  deptthname,td.TOPCODE topcode,ta.DEPTS depts,
	 td.CODE code, tpc.project_name activityType,td.ORGCODE orgcode,ta.DEPTS depts,
	 ta.NUMBER_OF_PARTICIPANTS numberofparticipants
	  from tom_dept as td,tom_activity as ta,tom_project_resource as tpr,tom_project_classify as tpc
 where 1=1 and  instr(ta.depts ,td.code) and tpr.resource_id=ta.ACTIVITY_ID and tpr.type='A' and tpr.project_id=tpc.project_id
		 and ta.ACTIVITY_ID  in
	  <foreach collection="Ids" item="item" index="index"  open="(" separator="," close=")">
		 #{item}
	</foreach>
	 order by ta.CREATE_TIME desc 
   
	</select>
	
	
	<!-- 根据项目id查找活动 -->
	<select id="selectByProjectId" resultMap="BaseResultMap" parameterType="map">
	   select distinct a.activity_id,a.activity_name from tom_activity a,tom_project_resource pr where a.activity_id = pr.resource_id and pr.type = 'A' 
       and pr.project_id = #{projectId,jdbcType=DECIMAL}
	</select>
	
 	<select id="selectActivity" parameterType="map" resultMap="BaseResultMap">
	 select * from TOM_ACTIVITY where 1=1
		<if test="activityType != null">
			and
			INSTR(activityType,#{activityType,jdbcType=VARCHAR})>0
		</if>
		<if test="activityName != null">
			and
			INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
		</if>
		<if test="status != null">
			and
			INSTR(status,#{status,jdbcType=VARCHAR})>0
		</if>
		<if test="isRequired != null">
			and
			INSTR(isRequired,#{isRequired,jdbcType=VARCHAR})>0
		</if>
		<if test="orgname != null">
			and
			INSTR(orgname,#{orgname,jdbcType=VARCHAR})>0
		</if>
		<if test="deptname != null">
			and
			INSTR(deptname,#{deptname,jdbcType=VARCHAR})>0
		</if>
		<if test="depttopname != null">
			and
			INSTR(name,#{name,jdbcType=VARCHAR})>0
		</if>
		<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
 order by CREATE_TIME desc 
    limit<![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	
<!-- 	<select id="selectActivityDept"  parameterType="java.lang.Integer"  resultType="com.chinamobo.ue.system.entity.TomDept">
	 select 
	 td.ORGNAME orgname,td.TOPNAME topname,td.NAME name,td.TYPENAME  typename from tom_dept as td,tom_activity as ta
 where 1=1 and  instr(ta.depts ,td.code)
 
		and ta.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
	
	</select> -->
	
	<select id="selectcourseByactiveId" parameterType="map" resultType="com.chinamobo.ue.course.entity.TomCourses">
  	select p.course_id courseId,p.exam_id countApply from tom_activity a 
		left join tom_activity_property  p on p.activity_id=a.activity_id 
	where  1=1
  	<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="courseId!= null">
		and p.course_id!=''
	</if>
	<if test="examId!= null">
		and p.exam_id!=''
	</if>
  </select>
  
   <select id="selectCoursefinish" parameterType="map" resultType="com.chinamobo.ue.course.entity.TomCourseEmpRelation">
	  select ar.code code,lr.course_id courseId,lr.FINISH_STATUS finishStatus from tom_activity_emps_relation ar 
		left join  tom_course_emp_relation lr on lr.code=ar.code  and ar.status='Y'
		<if test="courseId!= null">
			and lr.course_id = #{courseId,jdbcType=VARCHAR}
		</if>
	  where 1=1
	<if test="activityId!= null">
		and ar.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	
  </select>
  
   <select id="selectExamfinish" parameterType="map" resultType="com.chinamobo.ue.exam.entity.TomExamScore">
  	select es.exam_id examId,es.grade_state gradeState,es.code code from tom_activity_emps_relation ar <!-- //ar.* -->
		join tom_exam_score es on ar.code=es.code
	where  1=1<!-- es.grade_state='Y' -->
	<if test="activityId!= null">
		and ar.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="examId!= null">
		and es.exam_id = #{examId,jdbcType=VARCHAR}
	</if>
  </select>
  
  <select id="selectScore" parameterType="map" resultType="Double">
  	select sum(es.TOTAL_POINTS ) score  from tom_activity_emps_relation ar <!-- //ar.* -->
		join tom_exam_score es on ar.code=es.code
	where  1=1<!-- es.grade_state='Y' -->
	<if test="activityId!= null">
		and ar.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
<!-- 	<if test="examId!= null">
		and es.exam_id = #{examId,jdbcType=VARCHAR}
	</if> -->
  </select>
  
  <select id="selectloginemp" parameterType="map" resultType="com.chinamobo.ue.system.entity.TomUserLog">
  	select distinct code  from tom_active_user where 1=1 
  	<if test="startTime!= null">
		and CREATE_DATE >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and CREATE_DATE <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  
  <select id="sumlogineb" parameterType="map" resultType="int">
  	select ifnull(sum(EXCHANGE_NUMBER),0) allEb from tom_eb_record where 1=1
  	<if test="startTime!= null">
		and UPDATE_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and UPDATE_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
		and code  in
	 <foreach collection="Ids" item="item" index="index"  open="(" separator="," close=")">
		 #{item}
	</foreach>
  </select>
  
  <select id="selectActivityType" parameterType="int" resultType="String">
  	 select distinct tpr.parent_project_classify_name parent_project_classify_name from tom_dept as td,tom_activity as ta,tom_project_resource as tpr
 where 1=1 and  instr(ta.depts ,td.code)and tpr.resource_id=ta.ACTIVITY_ID and tpr.type='A' 
 	<if test="activityId!= null">
		and ta.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="selectAcyivityName" resultMap="BaseResultMap" parameterType="map">
   select distinct a.activity_id,a.activity_name from tom_activity a,tom_project_resource pr where a.activity_id = pr.resource_id and pr.type = 'A' 
   <if test="activityType!= null">
			and
			INSTR(pr.project_id,#{activityType,jdbcType=VARCHAR})>0
		</if>
  </select>
  <!-- 学员报表-活动详情 -->
  	<select id="countEmpActivityDeta"  parameterType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto" resultType="int">
  		select count(*) from (
		select distinct
  		b.code,b.name,b.orgname,b.onedeptname,b.jobname as jobName,b.secret_email as secretEmail,b.onedeptcode,
  		 b.TWO_DEPT_CODE as depttopcode, b.TWO_DEPT_NAME as twoDeptName,b.THREE_DEPT_CODE as deptcode,b.THREE_DEPT_NAME as threeDeptName,
						c.ACTIVITY_NAME activityName,c.NEED_APPLY needApply,c.NUMBER_OF_PARTICIPANTS offlineCourseApply,c.ACTIVITY_ID activityId,c.activity_start_time activityStartTime,
						c.activity_end_time activityEndTime,c.ADMIN_NAMES admins,c.ACTIVITY_NUMBER activityNumber,c.protocol_start_time protocolStartTime,c.create_time fristJoinTime,
						c.PARENT_PROJECT_CLASSIFY_NAME activityType
							 FROM tom_emp  as b
							  left join tom_activity_emps_relation  as a on a.code=b.code
							 left join tom_activity as c  on  c.activity_id=a.activity_id
							 left join tom_project_resource as d  on d.resource_id=c.activity_id
							 where 1=1
		<if test="examTotalTime != null" >
       		and a.CREATE_TIME <![CDATA[<]]> #{examTotalTime,jdbcType=TIMESTAMP}
    	</if>
		<if test="code != null">
			and INSTR(b.CODE,#{code,jdbcType=VARCHAR})>0
		</if>
		<if test="name != null" >
       		and INSTR(b.NAME,#{name,jdbcType=VARCHAR})>0
      	</if>
      	<if test="orgcode != null and ' ' !=orgcode" >
       		and b.ORGCODE = #{orgcode,jdbcType=VARCHAR}
      	</if>
      	<if test="onedeptcode != null and ''!=onedeptcode">
				and b.onedeptcode = #{onedeptcode,jdbcType=VARCHAR}
			</if>
			<if test="deptcode2 != null and  '' !=deptcode2">
				and b.TWO_DEPT_CODE = #{deptcode2,jdbcType=VARCHAR}
			</if>
			<if test="deptcode3 != null and  ''!=deptcode3">
				and b.THREE_DEPT_CODE = #{deptcode3,jdbcType=VARCHAR}
			</if>
      	<if test="needApply != null">
			and c.NEED_APPLY = #{needApply,jdbcType=VARCHAR}
		</if>
		<if test="activityName != null" >
       		and c.INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
      	</if>
      	<if test="activityId != null">
			and c.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
      	<if test="activityIn != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[>]]> #{activityIn,jdbcType=TIMESTAMP}
       		and c.ACTIVITY_START_TIME <![CDATA[<]]> #{activityIn,jdbcType=TIMESTAMP} 
    	</if>
    	<if test="activityEnd != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[<]]> #{activityEnd,jdbcType=TIMESTAMP}
    	</if>
    	<if test="activityCenter!= null" >
       		and c.ACTIVITY_START_TIME <![CDATA[>]]> #{activityCenter,jdbcType=TIMESTAMP}
    	</if>
		and d.type='A'
		and a.apply_status='Y'
		<if test="projectId != null">
			and d.PROJECT_ID = #{projectId,jdbcType=DECIMAL}
		</if>
      	<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
		order by b.code   ) as a
  	
  	</select>
  	<select id="empActivityDetaList"  parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto">
  		select distinct
  		b.code,b.name,b.orgname,b.onedeptname,b.jobname as jobName,b.secret_email as secretEmail,b.onedeptcode,
  		 b.TWO_DEPT_CODE as depttopcode, b.TWO_DEPT_NAME as twoDeptName,b.THREE_DEPT_CODE as deptcode,b.THREE_DEPT_NAME as threeDeptName,
						c.ACTIVITY_NAME activityName,c.NEED_APPLY needApply,c.NUMBER_OF_PARTICIPANTS offlineCourseApply,c.ACTIVITY_ID activityId,c.activity_start_time activityStartTime,
						c.activity_end_time activityEndTime,c.ACTIVITY_NUMBER activityNumber,c.create_time protocolStartTime,
						c.PARENT_PROJECT_CLASSIFY_NAME activityType,c.ADMIN_NAMES admins
							 FROM tom_emp  as b
							  left join tom_activity_emps_relation  as a on a.code=b.code
							 left join tom_activity as c  on  c.activity_id=a.activity_id
							 left join tom_project_resource as d  on d.resource_id=c.activity_id
							<!--  left join tom_dept as two on	two.`CODE` = getDeptCode (`b`.`DEPTCODE`,`b`.`DEPTTOPCODE`,`b`.`ONEDEPTCODE`,2) 
							 left join tom_dept as three on  three.`CODE` = getDeptCode (`b`.`DEPTCODE`,`b`.`DEPTTOPCODE`,`b`.`ONEDEPTCODE`,3) -->
							<!--  left join tom_activity_property e on c.activity_id=e.activity_id -->
							 where 1=1
		<if test="examTotalTime != null" >
       		and a.CREATE_TIME <![CDATA[<]]> #{examTotalTime,jdbcType=TIMESTAMP}
    	</if>
		<if test="code != null">
			and INSTR(b.CODE,#{code,jdbcType=VARCHAR})>0
		</if>
		<if test="name != null" >
       		and INSTR(b.NAME,#{name,jdbcType=VARCHAR})>0
      	</if>
     	<if test="orgcode != null and ' ' !=orgcode" >
       		and b.ORGCODE = #{orgcode,jdbcType=VARCHAR}
      	</if>
     <!--   	<if test="onedeptcode != null and ''!=onedeptcode" >
       		and b.ONEDEPTCODE = #{onedeptcode,jdbcType=VARCHAR}
      	</if>
      	<if test="deptcode2 != null and '' !=deptcode2" >
       		and two.`CODE` = #{deptcode2,jdbcType=VARCHAR}
      	</if>
      	<if test="deptcode3 != null and ''!=deptcode3" >
       		and three.`CODE` = #{deptcode3,jdbcType=VARCHAR}
      	</if> -->
			<if test="onedeptcode != null and ''!=onedeptcode">
				and b.onedeptcode = #{onedeptcode,jdbcType=VARCHAR}
			</if>
			<if test="deptcode2 != null and  '' !=deptcode2">
				and b.TWO_DEPT_CODE = #{deptcode2,jdbcType=VARCHAR}
			</if>
			<if test="deptcode3 != null and  ''!=deptcode3">
				and b.THREE_DEPT_CODE = #{deptcode3,jdbcType=VARCHAR}
			</if>
      	<if test="needApply != null">
			and c.NEED_APPLY = #{needApply,jdbcType=VARCHAR}
		</if>
		<if test="activityName != null" >
       		and c.INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
      	</if>
      	<if test="activityId != null">
			and c.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
      	<if test="activityIn != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[>]]> #{activityIn,jdbcType=TIMESTAMP}
       		and c.ACTIVITY_START_TIME <![CDATA[<]]> #{activityIn,jdbcType=TIMESTAMP} 
    	</if>
    	<if test="activityEnd != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[<]]> #{activityEnd,jdbcType=TIMESTAMP}
    	</if>
    	<if test="activityCenter!= null" >
       		and c.ACTIVITY_START_TIME <![CDATA[>]]> #{activityCenter,jdbcType=TIMESTAMP}
    	</if>
		and d.type='A'
		and a.apply_status='Y'
		<if test="projectId != null">
			and c.PARENT_CLASSIFY_ID = #{projectId,jdbcType=DECIMAL}
		</if>
      	<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
		order by b.code 
  		 limit<![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
     
  	</select>
  	
  	<select id="empActivityDetaListExcel"  parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto">
  		select distinct
  		b.code,b.name,b.orgname,b.onedeptname,b.jobname as jobName,b.secret_email as secretEmail,b.onedeptcode,
  		 b.TWO_DEPT_CODE as depttopcode, b.TWO_DEPT_NAME as twoDeptName,b.THREE_DEPT_CODE as deptcode,b.THREE_DEPT_NAME as threeDeptName,
						c.ACTIVITY_NAME activityName,c.NEED_APPLY needApply,c.NUMBER_OF_PARTICIPANTS offlineCourseApply,c.ACTIVITY_ID activityId,c.activity_start_time activityStartTime,
						c.activity_end_time activityEndTime,c.ADMIN_NAMES admins,c.ACTIVITY_NUMBER activityNumber,c.protocol_start_time protocolStartTime,c.create_time fristJoinTime,
						c.PARENT_PROJECT_CLASSIFY_NAME activityType
							 FROM tom_emp  as b
							  left join tom_activity_emps_relation  as a on a.code=b.code
							 left join tom_activity as c  on  c.activity_id=a.activity_id
							 left join tom_project_resource as d  on d.resource_id=c.activity_id
							 where 1=1
							 <if test="examTotalTime != null" >
       		and a.CREATE_TIME <![CDATA[<]]> #{examTotalTime,jdbcType=TIMESTAMP}
    	</if>
		<if test="code != null">
			and INSTR(b.CODE,#{code,jdbcType=VARCHAR})>0
		</if>
		<if test="name != null" >
       		and INSTR(b.NAME,#{name,jdbcType=VARCHAR})>0
      	</if>
      	<if test="orgcode != null and ' ' !=orgcode" >
       		and b.ORGCODE = #{orgcode,jdbcType=VARCHAR}
      	</if>
      <if test="onedeptcode != null and ''!=onedeptcode">
				and b.onedeptcode = #{onedeptcode,jdbcType=VARCHAR}
			</if>
			<if test="deptcode2 != null and  '' !=deptcode2">
				and b.TWO_DEPT_CODE = #{deptcode2,jdbcType=VARCHAR}
			</if>
			<if test="deptcode3 != null and  ''!=deptcode3">
				and b.THREE_DEPT_CODE = #{deptcode3,jdbcType=VARCHAR}
			</if>
      	<if test="needApply != null">
			and c.NEED_APPLY = #{needApply,jdbcType=VARCHAR}
		</if>
		<if test="activityName != null" >
       		and c.INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
      	</if>
      	<if test="activityId != null">
			and c.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
      	<if test="activityIn != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[>]]> #{activityIn,jdbcType=TIMESTAMP}
       		and c.ACTIVITY_START_TIME <![CDATA[<]]> #{activityIn,jdbcType=TIMESTAMP} 
    	</if>
    	<if test="activityEnd != null" >
       		and c.ACTIVITY_END_TIME <![CDATA[<]]> #{activityEnd,jdbcType=TIMESTAMP}
    	</if>
    	<if test="activityCenter!= null" >
       		and c.ACTIVITY_START_TIME <![CDATA[>]]> #{activityCenter,jdbcType=TIMESTAMP}
    	</if>
		and d.type='A'
		and a.apply_status='Y'
		<if test="projectId != null">
			and d.PROJECT_ID = #{projectId,jdbcType=DECIMAL}
		</if>
      	<if test="beginTimeq != null and '' != beginTimeq">
		AND #{beginTimeq,jdbcType=TIMESTAMP} <![CDATA[<ACTIVITY_START_TIME]]>
		</if>
		<if test="endTimeq != null and '' != endTimeq">
		and
		#{endTimeq,jdbcType=TIMESTAMP} <![CDATA[>ACTIVITY_END_TIME]]>
		</if>
		order by b.code 
  	</select>
  	
  	<select id="countSection" resultType="int" parameterType="map">
  		select count(*) from tom_activity_property a,tom_courses b,tom_course_section c,tom_activity d
  		where a.course_id=b.course_id and c.course_id=b.course_id and d.activity_id=a.activity_id
  		<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
		<if test="courseId!= null">
		and b.course_id= #{courseId,jdbcType=VARCHAR}
	</if>
	and c.status='Y'
  	</select>
  	<select id="countActivityCourse" resultType="int" parameterType="map">
 	SELECT count(distinct  b.course_section_id)  FROM  tom_section_learning_record as b
			LEFT JOIN tom_course_section as a  ON b.COURSE_SECTION_ID=a.SECTION_ID
			left join tom_activity_property as c on a.course_id=c.course_id
			WHERE 1=1
		<if test="activityId!= null"> 
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
	<if test="courseId!= null">
		and a.course_id= #{courseId,jdbcType=VARCHAR}
	</if>
	AND b.LEARNING_STATES='Y'
	and  a.STATUS='Y'
  	</select>
  	<select id="countCourseOnline" resultType="int" parameterType="map">
  	select COUNT(DISTINCT a.course_id) from tom_activity_property a,tom_courses b,tom_activity c
  	 where a.course_id=b.course_id and course_online='Y' and c.activity_id=a.activity_id
  	<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	<select id="countCourseOffline" resultType="int" parameterType="map">
  	select COUNT(DISTINCT a.course_id) from tom_activity_property a,tom_courses b,tom_activity c
  	 where a.course_id=b.course_id and course_online='N' and a.activity_id=c.activity_id
  	<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  <!-- 	<select id="countCourseOffline" resultType="int" parameterType="map">
  	select  (select COUNT(*) from tom_courses as a,tom_activity_property AS c  where a.course_online='Y' AND c.ACTIVITY_ID=b.ACTIVITY_ID AND c.COURSE_ID=a.COURSE_ID) as course
from tom_activity_property as b,tom_activity c
where b.activity_id=c.activity_id  GROUP BY b.activity_id
  	<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select> -->
  	
  	<select id="countStudyTimer" parameterType="map" resultType="int">
  	select ifnull(sum( TIME),0)  from tom_learntime_log as a 
left join tom_activity_property as b on a.course_id=b.course_id
where 1=1
  	<if test="code!= null">
		and a.CODE = #{code,jdbcType=VARCHAR}
	</if>
	<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	<select id="activityCourseFinishTime" parameterType="map" resultType="Date">
  		select max( LEARNING_DATE) from tom_course_learning_record as a 
left join tom_activity_property as b on b.course_id=a.course_id
left join tom_activity_emps_relation as c on b.activity_id=c.activity_id and c.code=a.code
where 1=1
  	<if test="code!= null">
		and a.CODE = #{code,jdbcType=VARCHAR}
	</if>
	<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	<select id="activityExamFinishTime" parameterType="map" resultType="Date">
  		select max(RETAKING_EXAM_END_TIME) from tom_retaking_exam as a 
left join tom_exam_score as b on a.exam_id=b.exam_id and b.GRADE_STATE!='D'
left join tom_activity_property as c on c.exam_id=a.exam_id 
left join tom_activity_emps_relation as d on d.code=b.code
where 1=1
  	<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
	<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
and a.sort=0
  	</select>
  	<select id="activityFinishTime"   parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto"> 
SELECT
    COUNT( g.course_id)                     AS totalNum,
    COUNT(IF(g.GRADE_STATE IS NOT NULL ,true,NULL)) AS studyNum,
    MAX(TIME)                                       AS activityFinishTime,
    MAX(SIGN_TIME)                              AS signFinishTime,
   	MIN(TIME)										  AS activityFinishTime1,
	MIN(SIGN_TIME)								  AS signFinishTime1,
   count(IF(g.offilnecourse	is not NULL,TRUE,NULL))		as offilneCompleteCourse
FROM
    (
        SELECT
            s.*,
            lr.LEARNING_DATE GRADE_STATE,
            LEARNING_DATE TIME,
            os.sign_time,
            os.course_id offilnecourse
        FROM
            (
                SELECT
                    a.ACTIVITY_ID,
                    a.`CODE`,
                    ap.COURSE_ID COURSE_ID
                FROM
                    (
                        SELECT DISTINCT
                            ACTIVITY_ID,
                            CODE
                        FROM
                            tom_activity_emps_relation emp
                        WHERE
                            emp.APPLY_STATUS="y"
 												 <if test="code!= null">
													and EMP.CODE = #{code,jdbcType=VARCHAR}
												</if>
												<if test="activityId!= null">
													and EMP.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
												</if>
                        ORDER BY
                            code
                    )
                    a
                JOIN tom_activity_property ap
                ON
                    ap.ACTIVITY_ID = a.ACTIVITY_ID
                AND ap.COURSE_ID IS NOT NULL
               <!--  GROUP BY
                    a.ACTIVITY_ID,
                    a.`CODE`,
                    ap.course_id -->
            )
            s
        LEFT JOIN tom_course_learning_record lr
        ON
            lr.`CODE` = s.`CODE`
        AND lr.COURSE_ID = s.COURSE_ID
        AND lr.LEARNING_DATE IS NOT NULL
        LEFT JOIN tom_offline_sign os
        ON
            os.course_id = s.course_id and os.code=s.code
        LEFT JOIN tom_course_emp_relation AS tcer
        ON
            tcer.course_id=lr.course_id
        AND tcer.code=lr.`CODE`
        
        UNION
        
        SELECT
            s.*,
            es.GRADE_STATE,
            es.CREATE_TIME TIME ,
            es.CREATE_TIME sign_time,
            NULL offilnecourse
        FROM
            (
                SELECT
                    a.ACTIVITY_ID,
                    a.`CODE`,
                    ap.EXAM_ID COURSE_ID
                FROM
                    (
                        SELECT DISTINCT
                            ACTIVITY_ID,
                            CODE
                        FROM
                            tom_activity_emps_relation emp
                        WHERE
                            emp.APPLY_STATUS="y"
 											<if test="code!= null">
													and EMP.CODE = #{code,jdbcType=VARCHAR}
												</if>
												<if test="activityId!= null">
													and EMP.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
												</if>
                        ORDER BY
                            code
                    )
                    a
                JOIN tom_activity_property ap
                ON
                    ap.ACTIVITY_ID = a.ACTIVITY_ID
                AND ap.EXAM_ID IS NOT NULL
                <!-- GROUP BY
                    a.ACTIVITY_ID,
                    a.`CODE` -->
            )
            s
        LEFT JOIN tom_exam_score es
        ON
            es.`CODE` = s.`CODE`
        AND es.EXAM_ID = s.COURSE_ID
        AND es.GRADE_STATE="y"
    )
    g
  	</select>
  	
  	
  	<select id="countOnlineExam" resultType="int" parameterType="map">
  	select count(distinct a.exam_id) from tom_activity_property a,tom_exam b,tom_activity d
  	where a.exam_id=b.exam_id and b.offline_exam='1' and d.activity_id=a.activity_id
  	<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	  	<select id="countOnlineExam1" resultType="int" parameterType="map">
  	select count(distinct a.exam_id) from tom_activity_property a,tom_exam b,tom_activity d
  	where a.exam_id=b.exam_id and d.activity_id=a.activity_id
  	<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	<select id="countInteger" parameterType="map" resultType="int">
  	<!-- select ifnull(sum(EXCHANGE_NUMBER),0) allEb from tom_eb_record a,tom_emp d where 1=1 and a.code=d.code
  	<if test="startTime!= null">
		and a.UPDATE_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and a.UPDATE_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if> -->
		select  ifnull(sum(add_up_e_number),0) from tom_user_info where 1=1
		<if test="code!= null">
		and CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="applyActivityCourse" parameterType="map" resultType="int">
 <!--  select ifnull(sum(EXCHANGE_NUMBER),0) allEb from tom_eb_record a,tom_activity_emps_relation b,tom_activity c,tom_emp d
  where a.code=b.code and c.activity_id=b.activity_id and a.code=d.code
 and need_apply='N' 
 <if test="startTime!= null">
		and a.UPDATE_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and a.UPDATE_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if> -->
	SELECT ifnull(sum(d.E_CURRENCY),0)  FROM tom_activity_property as a
		LEFT JOIN tom_activity_emps_relation as b ON a.ACTIVITY_ID=b.ACTIVITY_ID
		LEFT JOIN tom_course_learning_record as c ON c.COURSE_ID =a.COURSE_ID AND c.`CODE`=b.`CODE`
		LEFT JOIN tom_courses as d ON d.COURSE_ID =c.COURSE_ID 
		WHERE  b.is_required='Y' AND c.COURSE_ID IS NOT NULL
		<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  
   <select id="applyActivityExam" parameterType="map" resultType="int">
	SELECT ifnull(sum(ee.PASS_EB),0)  FROM tom_activity_property as aa
		LEFT JOIN tom_activity_emps_relation as bb ON aa.ACTIVITY_ID=bb.ACTIVITY_ID
		LEFT JOIN tom_exam_score as cc ON aa.EXAM_ID=cc.EXAM_ID AND bb.`CODE`=cc.`CODE`
		LEFT JOIN tom_exam as dd ON aa.EXAM_ID=dd.EXAM_ID 
		LEFT JOIN tom_exam_paper as ee ON ee.EXAM_PAPER_ID=dd.EXAM_PAPER_ID
		WHERE  bb.is_required='Y' AND cc.GRADE_STATE='Y' AND aa.EXAM_ID IS NOT NULL
		<if test="code!= null">
		and bb.CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  
  	<select id="NoApplyActivityCourse" parameterType="map" resultType="int">
  	SELECT ifnull(sum(d.E_CURRENCY),0)  FROM tom_activity_property as a
		LEFT JOIN tom_activity_emps_relation as b ON a.ACTIVITY_ID=b.ACTIVITY_ID
		LEFT JOIN tom_course_learning_record as c ON c.COURSE_ID =a.COURSE_ID AND c.`CODE`=b.`CODE`
		LEFT JOIN tom_courses as d ON d.COURSE_ID =c.COURSE_ID 
		WHERE  b.is_required='N' AND c.COURSE_ID IS NOT NULL
		<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
  	</select>
  	 	<select id="NoApplyActivityExam" parameterType="map" resultType="int">
  SELECT ifnull(sum(ee.PASS_EB),0)  FROM tom_activity_property as aa
		LEFT JOIN tom_activity_emps_relation as bb ON aa.ACTIVITY_ID=bb.ACTIVITY_ID
		LEFT JOIN tom_exam_score as cc ON aa.EXAM_ID=cc.EXAM_ID AND bb.`CODE`=cc.`CODE`
		LEFT JOIN tom_exam as dd ON aa.EXAM_ID=dd.EXAM_ID 
		LEFT JOIN tom_exam_paper as ee ON ee.EXAM_PAPER_ID=dd.EXAM_PAPER_ID
		WHERE  bb.is_required='N' AND cc.GRADE_STATE='Y' AND aa.EXAM_ID IS NOT NULL
		<if test="code!= null">
		and bb.CODE = #{code,jdbcType=VARCHAR}
	</if>
  	</select>
  	
  	<select id="countCourseSign" parameterType="map" resultType="int">
  <!-- 	select count(code) from tom_offline_sign a,tom_courses b,tom_activity_property c,tom_activity d
  	where a.course_id=b.course_id and b.course_id=c.course_id and b.course_online='N' and d.activity_id=c.activity_id
  	<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if> -->
	select count(distinct code) from tom_offline_sign as a 
	left join tom_activity_property as b on b.course_id=a.course_id where 1=1
	<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="code!= null">
		and CODE = #{code,jdbcType=VARCHAR}
	</if>
  	</select>
  	<select id="countCourseApply" parameterType="map" resultType="int" >
  	select count(*) from tom_course_apply as a
left join tom_activity_property as b on a.course_id=b.course_id
left join tom_courses as c on a.course_id=c.course_id and c.course_online='N'
where 1=1
<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	
  	<select id="selectOfflineCourseApply" parameterType="map" resultType="int">
	select count(distinct code) from tom_course_apply as a
	left join tom_activity_property as b on b.course_id=a.course_id  where 1=1
<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	and status='Y'
  	</select>
  	<!-- 活动中的课程 -->
  	 <select id="offlineCourse" parameterType="int" resultType="com.chinamobo.ue.course.dto.TomCoursesDto">
  	select * from tom_courses  where 1=1 
  	<if test="courseId!= null">
		and COURSE_ID = #{courseId,jdbcType=VARCHAR}
	</if>
  	</select>
  	
  	<select id="codejoinofflinecourse" parameterType="int" resultType="int">
  	select count(*) from tom_offline_sign where 1=1
  	<if test="courseId!= null">
		and COURSE_ID = #{courseId,jdbcType=VARCHAR}
	</if>
	<if test="code!= null">
		and code = #{code,jdbcType=VARCHAR}
	</if>
  	</select> 
  	
  	<!-- 问卷改 -->
  	<select id="selectEmpAnswer"  resultType="com.chinamobo.ue.reportforms.dto.EmpActivityAnswerDetailDto" parameterType="map">
  	   select e.code code,e.name name,
         e.orgcode orgcode,e.orgname orgname,e.onedeptcode onedeptcode,e.onedeptname onedeptname,
       COALESCE(a.twocode, e.DEPTTOPCODE) twoCode, 
       COALESCE(a.twoname, e.DEPTTOPNAME) twoName,
        b.threecode threeCode, b.threename threeName,
         e.jobname jobname,e.secret_email secretEmail,
		 tpr.project_id  projectId,tpr.parent_project_classify_name projectName,
		 ta.ACTIVITY_ID activityId,ta.activity_number activityNumber,ta.activity_name activityName, ta.need_apply needApply,ta.create_time createTime,
         ta.activity_start_time activityStartTime,ta.activity_end_time activityEndTime,
         ta.admins admins,
		 ar.IS_REQUIRED isRequired,
		 y.EXAM_ID examId,y.EXAM_NAME examName,y.exam_type examType,
        y.end_time endTime, y.topic_id topicId, y.topic topic,y.emp_answer empAnswer,y.subjective_item_answer subjectiveItemAnswer
	from (select DISTINCT a.*,c.sort,b.exam_name,b.end_time,b.exam_type
		from TOM_EXAM_ANSWER_DETAILS a,TOM_EXAM b,TOM_EXAM_QUESTION c,TOM_TOPIC d
		where a.EXAM_ID=b.EXAM_ID and b.EXAM_PAPER_ID=c.EXAM_PAPER_ID and
		a.TOPIC_ID=d.TOPIC_ID and d.QUESTION_TYPE=c.QUESTION_TYPE
		order by a.code asc,a.EXAM_ID,a.topic_id) y
		left join tom_emp e on y.code = e.code and e.poststat = 'Y'

        LEFT JOIN
        (SELECT te.code code,te.name name, te.deptcode as twocode,te.DEPTNAME twoname,te.depttopcode depttopcode, te.depttopname depttopname 
        FROM tom_emp te where te.depttopcode = te.onedeptcode and te.deptcode != te.onedeptcode) a
        on e.code = a.code
        LEFT JOIN
		(SELECT DISTINCT e1.code code,e1.name name, e1.deptcode as threecode,e1.deptname as threename  FROM tom_emp e1  
		WHERE e1.depttopcode != e1.onedeptcode
		and e1.deptcode != e1.onedeptcode) b
		on e.code = b.code

			LEFT JOIN tom_activity_property tp ON y.exam_id = tp.exam_id
			left join tom_activity_emps_relation ar on tp.activity_id = ar.activity_id and y.code = ar.`CODE`
			left join tom_activity ta on ar.ACTIVITY_ID = ta.ACTIVITY_ID
			left join tom_project_resource tpr on ta.activity_id = tpr.resource_id and tpr.type = 'A' where 1=1
		<if test="code != null and '' != code">
         and INSTR(e.code,#{code,jdbcType=VARCHAR})>0
	      </if>
	      <if test="name != null and '' != name">
	         and INSTR(e.name,#{name,jdbcType=VARCHAR})>0
	      </if>
	      <if test="examName != null and '' != examName">
	         and INSTR(y.EXAM_NAME,#{examName,jdbcType=VARCHAR})>0
	      </if>
	      <if test="orgname != null and '' != orgname">
	         and e.orgcode = #{orgname,jdbcType=VARCHAR}
	      </if>
	      <if test="onedeptname != null and '' != onedeptname">
	         and e.onedeptcode = #{onedeptname,jdbcType=VARCHAR}
	      </if>
	      <if test="threeCode != null and '' != threeCode">
	         and  b.threecode = #{threeCode,jdbcType=VARCHAR}
	      </if>
	      <if test="twoCode != null and '' != twoCode">
	         and  COALESCE(a.twocode, e.DEPTTOPCODE) = #{twoCode,jdbcType=VARCHAR}
	      </if>
		  <if test="activityName != null and '' != activityName">
			and ta.activity_id = #{activityName,jdbcType=VARCHAR}
		  </if>
		  <if test="needApply != null and '' != needApply">
			and ta.needApply = #{needApply,jdbcType=VARCHAR}
		  </if>
		  <if test="projectName != null and '' != projectName">
			and tpr.projectName = #{projectName,jdbcType=VARCHAR}
		  </if>
		  <if test="isRequired != null and '' != isRequired">
			and ar.is_required = #{isRequired,jdbcType=VARCHAR}
		  </if>
		  <if test="projectId != null and '' != projectId">
			and tpr.project_id = #{projectId,jdbcType=VARCHAR}
		  </if>
		  <if test="activityStatus ==1">
			 and
			 ta.ACTIVITY_START_TIME<![CDATA[>now()]]>
			 and
			 ta.ACTIVITY_END_TIME<![CDATA[>now()]]>
		  </if>
		  <if test="activityStatus ==2">
			 and
			 ta.ACTIVITY_END_TIME<![CDATA[<now()]]>
		  </if>
		  <if test="completedTime != null and '' != completedTime">
			and 
			<![CDATA[y.end_time < #{completedTime,jdbcType=VARCHAR}]]>
		  </if>
      limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  	</select>
  	<select id="countEmpAnswer" parameterType="map" resultType="int">
  	select count(*) from(
  	   select e.code code,e.name name,
         e.orgcode orgcode,e.orgname orgname,e.onedeptcode onedeptcode,e.onedeptname onedeptname,
       COALESCE(a.twocode, e.DEPTTOPCODE) twoCode, 
       COALESCE(a.twoname, e.DEPTTOPNAME) twoName,
        b.threecode threeCode, b.threename threeName,
         e.jobname jobname,e.secret_email secretEmail,
		 tpr.project_id  projectId,tpr.parent_project_classify_name projectName,
		 ta.ACTIVITY_ID activityId,ta.activity_number activityNumber,ta.activity_name activityName, ta.need_apply needApply,ta.create_time createTime,
         ta.activity_start_time activityStartTime,ta.activity_end_time activityEndTime,
         ta.admins admins,
		 ar.IS_REQUIRED isRequired,
		 y.EXAM_ID examId,y.EXAM_NAME examName,y.exam_type examType,
        y.end_time endTime, y.topic_id topicId, y.topic topic,y.emp_answer empAnswer,y.subjective_item_answer subjectiveItemAnswer
	from (select DISTINCT a.*,c.sort,b.exam_name,b.end_time,b.exam_type
		from TOM_EXAM_ANSWER_DETAILS a,TOM_EXAM b,TOM_EXAM_QUESTION c,TOM_TOPIC d
		where a.EXAM_ID=b.EXAM_ID and b.EXAM_PAPER_ID=c.EXAM_PAPER_ID and
		a.TOPIC_ID=d.TOPIC_ID and d.QUESTION_TYPE=c.QUESTION_TYPE
		order by a.code asc,a.EXAM_ID,a.topic_id) y
		left join tom_emp e on y.code = e.code and e.poststat = 'Y'

        LEFT JOIN
        (SELECT te.code code,te.name name, te.deptcode as twocode,te.DEPTNAME twoname,te.depttopcode depttopcode, te.depttopname depttopname 
        FROM tom_emp te where te.depttopcode = te.onedeptcode and te.deptcode != te.onedeptcode) a
        on e.code = a.code
        LEFT JOIN
		(SELECT DISTINCT e1.code code,e1.name name, e1.deptcode as threecode,e1.deptname as threename  FROM tom_emp e1  
		WHERE e1.depttopcode != e1.onedeptcode
		and e1.deptcode != e1.onedeptcode) b
		on e.code = b.code

			LEFT JOIN tom_activity_property tp ON y.exam_id = tp.exam_id
			left join tom_activity_emps_relation ar on tp.activity_id = ar.activity_id and y.code = ar.`CODE`
			left join tom_activity ta on ar.ACTIVITY_ID = ta.ACTIVITY_ID
			left join tom_project_resource tpr on ta.activity_id = tpr.resource_id and tpr.type = 'A' where 1=1
		<if test="code != null and '' != code">
         and INSTR(e.code,#{code,jdbcType=VARCHAR})>0
	      </if>
	      <if test="name != null and '' != name">
	         and INSTR(e.name,#{name,jdbcType=VARCHAR})>0
	      </if>
	      <if test="examName != null and '' != examName">
	         and INSTR(y.EXAM_NAME,#{examName,jdbcType=VARCHAR})>0
	      </if>
	      <if test="orgname != null and '' != orgname">
	         and e.orgcode = #{orgname,jdbcType=VARCHAR}
	      </if>
	      <if test="onedeptname != null and '' != onedeptname">
	         and e.onedeptcode = #{onedeptname,jdbcType=VARCHAR}
	      </if>
	      <if test="threeCode != null and '' != threeCode">
	         and  b.threecode = #{threeCode,jdbcType=VARCHAR}
	      </if>
	      <if test="twoCode != null and '' != twoCode">
	         and COALESCE(a.twocode, e.DEPTTOPCODE) = #{twoCode,jdbcType=VARCHAR}
	      </if>
		  <if test="activityName != null and '' != activityName">
			and ta.activity_id = #{activityName,jdbcType=VARCHAR}
		  </if>
		  <if test="needApply != null and '' != needApply">
			and ta.needApply = #{needApply,jdbcType=VARCHAR}
		  </if>
		  <if test="projectName != null and '' != projectName">
			and tpr.projectName = #{projectName,jdbcType=VARCHAR}
		  </if>
		  <if test="isRequired != null and '' != isRequired">
			and ar.is_required = #{isRequired,jdbcType=VARCHAR}
		  </if>
		  <if test="projectId != null and '' != projectId">
			and tpr.project_id = #{projectId,jdbcType=VARCHAR}
		  </if>
		  <if test="activityStatus ==1">
			 and
			 ta.ACTIVITY_END_TIME<![CDATA[>=now()]]>
		  </if>
		  <if test="activityStatus ==2">
			 and
			 ta.ACTIVITY_END_TIME<![CDATA[<now()]]>
		  </if>
		  <if test="completedTime != null and '' != completedTime">
			and 
			<![CDATA[y.end_time < #{completedTime,jdbcType=VARCHAR}]]>
		  </if>) q where 1=1
  	</select>
  	
  	<select id="selecttotalIntegral" resultType="String">
  		<!-- SELECT activity_total_eb  totalIntegral  FROM tom_learning_resourse_org_dept_activity_view as a
  		left join tom_activity as b on a.activity_id=b.activity_id where  1=1
		<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if> -->
	select getActivityEb(activity_id,3) as totalIntegral from tom_activity where 1=1
	<if test="activityId!= null">
		and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  	</select>
  	
  <!-- 	活动详细 -->
 <select id="courseLearning" parameterType="map" resultType="int">
select COUNT(DISTINCT a.`COURSE_ID`) courseLearning from tom_activity_property as a 
left join tom_course_learning_record as b on a.course_id=b.course_id
where 1=1 AND a.`COURSE_ID` IS NOT NULL
	<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="offlinecourselearning" parameterType="map" resultType="int">
  select count(DISTINCT a.COURSE_ID) num from tom_activity_property as a
left join  tom_offline_sign as b on  a.course_id=b.course_id
left join tom_courses as c on a.COURSE_ID=c.COURSE_ID
where 1=1
	<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="activitycourse" parameterType="map" resultType="int">
  select count(distinct  course_id) from tom_activity_property where 1=1 and  course_id IS NOT NULL
<if test="activityId!= null">
		and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
  </select> 
  <select id="ActivityOpenNum" parameterType="map" resultType="int">
  select count(*) from tom_activity_emps_relation where 1=1
  <if test="activityId!= null">
		and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if> 
  </select>
  <select id="onlineComplentExam"  parameterType="map" resultType="int">
  SELECT count(*) 
			FROM tom_activity as a
			LEFT JOIN tom_activity_property as b ON a.activity_id=b.activity_id
			LEFT JOIN tom_activity_emps_relation as c ON a.activity_id=c.activity_id
			LEFT JOIN tom_exam_score as d ON d.EXAM_ID=b.EXAM_ID AND d.`CODE`=c.`CODE`
			WHERE b.EXAM_ID IS NOT NULL AND d.GRADE_STATE='Y' and b.offline_exam=1 
			<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
<if test="code!= null">
		and c.CODE = #{code,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="onlineComplentExam1"  parameterType="map" resultType="int">
  SELECT count(*) 
			FROM tom_activity as a
			LEFT JOIN tom_activity_property as b ON a.activity_id=b.activity_id
			LEFT JOIN tom_activity_emps_relation as c ON a.activity_id=c.activity_id
			LEFT JOIN tom_exam_score as d ON d.EXAM_ID=b.EXAM_ID AND d.`CODE`=c.`CODE`
			WHERE b.EXAM_ID IS NOT NULL AND d.GRADE_STATE='Y' 
			<if test="activityId!= null">
				and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
			</if>
			<if test="code!= null">
				and c.CODE = #{code,jdbcType=VARCHAR}
			</if>
  </select>
  <select id="onlineCompleteCourse"  parameterType="map" resultType="int">
  select count(distinct a.COURSE_ID) FROM tom_activity_property as a 
left join tom_activity_emps_relation as d on a.activity_id=d.activity_id
left join tom_courses as b on a.course_id=b.course_id
left join tom_course_learning_record as c on d.code=c.code
where b.course_online='Y' 
	<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
<if test="code!= null">
		and d.CODE = #{code,jdbcType=VARCHAR}
	</if>
</select>




<select id="count"  parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto"> 
SELECT DISTINCT
(SELECT COUNT(DISTINCT a.course_id) FROM tom_activity_property a,tom_courses b,tom_activity c
  	 WHERE a.course_id=b.course_id AND course_online='Y' AND c.activity_id=a.activity_id
		<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
)onlineCourse,
(SELECT COUNT(DISTINCT a.course_id) FROM tom_activity_property a,tom_courses b,tom_activity c
  	 WHERE a.course_id=b.course_id AND course_online='N' AND a.activity_id=c.activity_id
		<if test="activityId!= null">
		and c.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
)offlineCourse,
(	SELECT COUNT(DISTINCT CODE) FROM tom_course_apply AS a
	LEFT JOIN tom_activity_property AS b ON b.course_id=a.course_id  WHERE 1=1
		and status='Y'
		<if test="activityId!= null">
		and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
)offlineCourseApply,
(SELECT COUNT(DISTINCT a.exam_id) FROM tom_activity_property a,tom_exam b,tom_activity d
  	WHERE a.exam_id=b.exam_id AND b.offline_exam='1' AND d.activity_id=a.activity_id
		<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
)onlineExam,
(SELECT COUNT(DISTINCT a.exam_id) FROM tom_activity_property a,tom_exam b,tom_activity d
  	WHERE a.exam_id=b.exam_id AND d.activity_id=a.activity_id
		<if test="activityId!= null">
		and d.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
) activityExamCount,
(SELECT getActivityEb(activity_id,3) AS totalIntegral FROM tom_activity WHERE 1=1
		<if test="activityId!= null">
		and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
)totalIntegral
FROM tom_activity

</select>

<select id="countExamEb"  parameterType="Map" resultType="com.chinamobo.ue.reportforms.dto.EmpActivityDetaListDto"> 
select dd.num,dd.integral from(
select count(aa.COURSE_ID) num,ifnull(sum(aa.E_CURRENCY),0)integral from( 
select  distinct a.COURSE_ID ,b.E_CURRENCY  FROM tom_activity_property as a 
left join tom_activity_emps_relation as d on a.activity_id=d.activity_id
left join tom_courses as b on a.course_id=b.course_id
left join tom_course_learning_record as c on d.code=c.code and a.course_id=c.COURSE_ID
where b.course_online='Y' 
		<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
		<if test="code!= null">
		and c.CODE = #{code,jdbcType=VARCHAR}
		</if>)as aa
union all
select count(bb.COURSE_ID) num,ifnull(sum(bb.E_CURRENCY),0)integral from(
select DISTINCT a.COURSE_ID,c.E_CURRENCY  from tom_activity_property as a
left join  tom_offline_sign as b on  a.course_id=b.course_id
left join tom_courses as c on a.COURSE_ID=c.COURSE_ID
where 1=1
		<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		</if>
		<if test="code!= null">
		and b.CODE = #{code,jdbcType=VARCHAR}
		</if>) as bb
UNION all
select 0 num,ifnull(sum(cc.PASS_EB),0)integral from(
SELECT 0 ,e.PASS_EB 
			FROM tom_activity_property as b
			LEFT JOIN tom_activity_emps_relation as d ON b.activity_id=d.activity_id
			LEFT JOIN tom_exam as c ON b.EXAM_ID=c.EXAM_ID
			LEFT JOIN tom_exam_paper as e ON c.EXAM_PAPER_ID=e.EXAM_PAPER_ID
			LEFT JOIN tom_exam_score as f ON c.EXAM_ID=f.EXAM_ID AND d.`CODE`=f.`CODE`
			WHERE f.TOTAL_POINTS>=e.PASS_MARK AND  b.EXAM_ID IS NOT NULL
			<if test="activityId!= null">
			and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
			</if>
			<if test="code!= null">
			and f.CODE = #{code,jdbcType=VARCHAR}
			</if>) as cc
)as dd
</select>
<select id="getCourseId" parameterType="map" resultType="com.chinamobo.ue.activity.entity.TomActivityProperty">
select COURSE_ID courseId from tom_activity_property where 1=1
			<if test="activityId!= null">
			and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
			</if>
			and course_id is NOT NULL
</select>
<select id="activityCECount" parameterType="map" resultType="java.lang.Integer">
select count(*) from tom_activity_property where 1=1
<if test="activityId!= null">
			and ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
</if> 
</select>
</mapper>


