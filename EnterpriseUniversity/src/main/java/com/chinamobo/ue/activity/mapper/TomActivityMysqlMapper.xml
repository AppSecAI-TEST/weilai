<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.activity.dao.TomActivityMapper" >
  <resultMap id="BaseResultMap" type="com.chinamobo.ue.activity.entity.TomActivity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ACTIVITY_ID" property="activityId" jdbcType="DECIMAL" />
    <result column="ACTIVITY_NUMBER" property="activityNumber" jdbcType="VARCHAR" />
    <result column="ACTIVITY_NAME" property="activityName" jdbcType="VARCHAR" />
    <result column="INTRODUCTION" property="introduction" jdbcType="VARCHAR" />
    <result column="PROTOCOL" property="protocol" jdbcType="VARCHAR" />
    <result column="PROTOCOL_START_TIME" property="protocolStartTime" jdbcType="TIMESTAMP" />
    <result column="PROTOCOL_END_TIME" property="protocolEndTime" jdbcType="TIMESTAMP" />
    <result column="TRAIN_FEE" property="trainFee" jdbcType="DECIMAL" />
    <result column="NEED_APPLY" property="needApply" jdbcType="VARCHAR" />
    <result column="NUMBER_OF_PARTICIPANTS" property="numberOfParticipants" jdbcType="DECIMAL" />
    <result column="STAFF_LEVELS" property="staffLevels" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="ADMINS" property="admins" jdbcType="VARCHAR" />
    <result column="APPLICATION_START_TIME" property="applicationStartTime" jdbcType="TIMESTAMP" />
    <result column="APPLICATION_DEADLINE" property="applicationDeadline" jdbcType="TIMESTAMP" />
    <result column="ACTIVITY_START_TIME" property="activityStartTime" jdbcType="TIMESTAMP" />
    <result column="ACTIVITY_END_TIME" property="activityEndTime" jdbcType="TIMESTAMP" />
    <result column="DEPTS" property="depts" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <!-- zhui jia  wanglg -->
    <result column="ACT_PICTURE" property="actPicture" jdbcType="VARCHAR" />
    <result column="activityCount" property="activityCount" jdbcType="VARCHAR" />
    <result column="ADMIN_NAMES" property="adminsNames" jdbcType="VARCHAR" />
    <result column="CREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- <sql id="ACTIVITY_SEQ">ACTIVITY_SEQ.nextval</sql> -->
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME, INTRODUCTION, PROTOCOL, PROTOCOL_START_TIME, 
    PROTOCOL_END_TIME, TRAIN_FEE, NEED_APPLY, NUMBER_OF_PARTICIPANTS, STAFF_LEVELS, CITY, 
    ADMINS, APPLICATION_START_TIME, APPLICATION_DEADLINE, ACTIVITY_START_TIME, ACTIVITY_END_TIME, 
    DEPTS, CREATOR, CREATE_TIME, OPERATOR, UPDATE_TIME,ACT_PICTURE,CREATOR_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TOM_ACTIVITY
    where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TOM_ACTIVITY
    where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="activityId" parameterType="com.chinamobo.ue.activity.entity.TomActivity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TOM_ACTIVITY (ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME, 
      INTRODUCTION, PROTOCOL, PROTOCOL_START_TIME, 
      PROTOCOL_END_TIME, TRAIN_FEE, NEED_APPLY, 
      NUMBER_OF_PARTICIPANTS, STAFF_LEVELS, CITY, 
      ADMINS, APPLICATION_START_TIME, APPLICATION_DEADLINE, 
      ACTIVITY_START_TIME, ACTIVITY_END_TIME, 
      DEPTS, CREATOR, CREATE_TIME, 
      OPERATOR, UPDATE_TIME,CREATOR_ID)
    values (#{activityId,jdbcType=DECIMAL}, #{activityNumber,jdbcType=VARCHAR}, #{activityName,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{protocol,jdbcType=VARCHAR}, #{protocolStartTime,jdbcType=TIMESTAMP}, 
      #{protocolEndTime,jdbcType=TIMESTAMP}, #{trainFee,jdbcType=DECIMAL}, #{needApply,jdbcType=VARCHAR}, 
      #{numberOfParticipants,jdbcType=DECIMAL}, #{staffLevels,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{admins,jdbcType=VARCHAR}, #{applicationStartTime,jdbcType=TIMESTAMP}, #{applicationDeadline,jdbcType=TIMESTAMP}, 
      #{activityStartTime,jdbcType=TIMESTAMP}, #{activityEndTime,jdbcType=TIMESTAMP}, 
      #{depts,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=VARCHAR})
  </insert>
  
  
   <!-- Wanglg add  activity 2016年3月10日-->
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="activityId" parameterType="com.chinamobo.ue.activity.entity.TomActivity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <!-- <selectKey keyProperty="activityId" resultType="Integer" order="BEFORE">
		select
		<include refid="ACTIVITY_SEQ" />
		from dual
	</selectKey> -->
    insert into TOM_ACTIVITY
    <trim prefix="(" suffix=")" suffixOverrides="," >
        <!-- ACTIVITY_ID, -->
      <if test="activityNumber != null" >
        ACTIVITY_NUMBER,
      </if>
      <if test="activityName != null" >
        ACTIVITY_NAME,
      </if>
      <if test="introduction != null" >
        INTRODUCTION,
      </if>
      <if test="protocol != null" >
        PROTOCOL,
      </if>
      <if test="protocolStartTime != null" >
        PROTOCOL_START_TIME,
      </if>
      <if test="protocolEndTime != null" >
        PROTOCOL_END_TIME,
      </if>
      <if test="trainFee != null" >
        TRAIN_FEE,
      </if>
      <if test="needApply != null" >
        NEED_APPLY,
      </if>
      <if test="numberOfParticipants != null" >
        NUMBER_OF_PARTICIPANTS,
      </if>
      <if test="staffLevels != null" >
        STAFF_LEVELS,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="admins != null" >
        ADMINS,
      </if>
      <if test="applicationStartTime != null" >
        APPLICATION_START_TIME,
      </if>
      <if test="applicationDeadline != null" >
        APPLICATION_DEADLINE,
      </if>
      <if test="activityStartTime != null" >
        ACTIVITY_START_TIME,
      </if>
      <if test="activityEndTime != null" >
        ACTIVITY_END_TIME,
      </if>
      <if test="depts != null" >
        DEPTS,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="actPicture != null" >
        ACT_PICTURE,
      </if>
      <if test="creatorId != null" >
        CREATOR_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
       <!-- <if test="activityId != null" > 
		#{activityId,jdbcType=DECIMAL}, 
	   </if> -->
      <if test="activityNumber != null" >
        #{activityNumber,jdbcType=VARCHAR},
      </if>
      <if test="activityName != null" >
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null" >
        #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="protocolStartTime != null" >
        #{protocolStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolEndTime != null" >
        #{protocolEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trainFee != null" >
        #{trainFee,jdbcType=DECIMAL},
      </if>
      <if test="needApply != null" >
        #{needApply,jdbcType=VARCHAR},
      </if>
      <if test="numberOfParticipants != null" >
        #{numberOfParticipants,jdbcType=DECIMAL},
      </if>
      <if test="staffLevels != null" >
        #{staffLevels,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        #{admins,jdbcType=VARCHAR},
      </if>
      <if test="applicationStartTime != null" >
        #{applicationStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationDeadline != null" >
        #{applicationDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="activityStartTime != null" >
        #{activityStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null" >
        #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depts != null" >
        #{depts,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actPicture != null" >
        #{actPicture,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinamobo.ue.activity.entity.TomActivity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_ACTIVITY
    <set >
      <if test="activityNumber != null" >
        ACTIVITY_NUMBER = #{activityNumber,jdbcType=VARCHAR},
      </if>
      <if test="activityName != null" >
        ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        INTRODUCTION = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null" >
        PROTOCOL = #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="protocolStartTime != null" >
        PROTOCOL_START_TIME = #{protocolStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolEndTime != null" >
        PROTOCOL_END_TIME = #{protocolEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trainFee != null" >
        TRAIN_FEE = #{trainFee,jdbcType=DECIMAL},
      </if>
      <if test="needApply != null" >
        NEED_APPLY = #{needApply,jdbcType=VARCHAR},
      </if>
      <if test="numberOfParticipants != null" >
        NUMBER_OF_PARTICIPANTS = #{numberOfParticipants,jdbcType=DECIMAL},
      </if>
      <if test="staffLevels != null" >
        STAFF_LEVELS = #{staffLevels,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        ADMINS = #{admins,jdbcType=VARCHAR},
      </if>
      <if test="applicationStartTime != null" >
        APPLICATION_START_TIME = #{applicationStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationDeadline != null" >
        APPLICATION_DEADLINE = #{applicationDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="activityStartTime != null" >
        ACTIVITY_START_TIME = #{activityStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null" >
        ACTIVITY_END_TIME = #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depts != null" >
        DEPTS = #{depts,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="creatorId != null" >
        CREATOR_ID=#{creatorId,jdbcType=VARCHAR}
      </if>
    </set>
    where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinamobo.ue.activity.entity.TomActivity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_ACTIVITY
    set ACTIVITY_NUMBER = #{activityNumber,jdbcType=VARCHAR},
      ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
      INTRODUCTION = #{introduction,jdbcType=VARCHAR},
      PROTOCOL = #{protocol,jdbcType=VARCHAR},
      PROTOCOL_START_TIME = #{protocolStartTime,jdbcType=TIMESTAMP},
      PROTOCOL_END_TIME = #{protocolEndTime,jdbcType=TIMESTAMP},
      TRAIN_FEE = #{trainFee,jdbcType=DECIMAL},
      NEED_APPLY = #{needApply,jdbcType=VARCHAR},
      NUMBER_OF_PARTICIPANTS = #{numberOfParticipants,jdbcType=DECIMAL},
      STAFF_LEVELS = #{staffLevels,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      ADMINS = #{admins,jdbcType=VARCHAR},
      APPLICATION_START_TIME = #{applicationStartTime,jdbcType=TIMESTAMP},
      APPLICATION_DEADLINE = #{applicationDeadline,jdbcType=TIMESTAMP},
      ACTIVITY_START_TIME = #{activityStartTime,jdbcType=TIMESTAMP},
      ACTIVITY_END_TIME = #{activityEndTime,jdbcType=TIMESTAMP},
      DEPTS = #{depts,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
        CREATOR_ID=#{creatorId,jdbcType=VARCHAR}
    where ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
  </update>
  
  <sql id="Base_Column_List1" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ACTIVITY_ID, ACTIVITY_NUMBER, ACTIVITY_NAME, ACTIVITY_START_TIME, ACTIVITY_END_TIME, CREATOR, CREATE_TIME, OPERATOR, UPDATE_TIME
  </sql>
  
  <select id="selectListByParam" resultMap="BaseResultMap" parameterType="map">
				select * from TOM_ACTIVITY where 1=1
				<if test="activityName != null and '' != activityName ">
					 and INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
				</if> order by UPDATE_TIME desc 
    limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>

	<select id="countByList" parameterType="map"
		resultType="java.lang.Integer">
		select  count(*) from TOM_ACTIVITY 
		 where 1=1
		<if test="activityName != null" >
         and INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0 
      </if>
	</select>
	
	<select id="selectAllList" parameterType="com.chinamobo.ue.activity.entity.TomActivity"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from TOM_ACTIVITY where 1=1
		<if test="activityName != null and '' != activityName ">
			  and INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0 
		</if>
	</select>
  
  <!-- API -->
    <select id="selectByUser" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
	 SELECT b.apply_status AS applyStatus,
				  a.ACT_PICTURE AS actPicture,
				  a.INTRODUCTION AS introduction,
				  a.ACTIVITY_NAME AS activityName,
				  a. ACTIVITY_START_TIME AS activityStartTime,
				  a.ACTIVITY_END_TIME AS activityEndTime,
				  a.CITY AS city,
				  b.apply_type AS applyType,
				  c.course_address AS courseAddress
				FROM TOM_ACTIVITY a
				LEFT JOIN TOM_ACTIVITY_EMPS_RELATION b
				ON a.activity_id = b.activity_id
				LEFT JOIN tom_activity_property c
				ON c.activity_id = a.activity_id where 1=1
				<if test="code != null and '' != code ">
					and b.CODE = #{code,jdbcType=VARCHAR}
				</if>
				<if test="activityId != null and '' != activityId ">
					 and b.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
				</if>
  </select>
   <select id="selectByUserRe" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
	   SELECT b.apply_status AS applyStatus,
			  a.ACT_PICTURE AS actPicture,
			  a.INTRODUCTION AS introduction,
			  a.ACTIVITY_NAME AS activityName,
			  a. ACTIVITY_START_TIME AS activityStartTime,
			  a.ACTIVITY_END_TIME AS activityEndTime,
			  a.CITY AS city,
			  b.apply_type AS applyType,
			  c.course_address AS courseAddress,
			  c.course_id AS courseId,
			  d.exam_id AS examId,
			  e.course_online AS courseOnline,
			  d.offline_exam AS offlineExam,
			  e.course_img AS courseImg,
			  e.course_name AS courseName,
			  d.exam_name AS examName
			FROM TOM_ACTIVITY a
			LEFT JOIN TOM_ACTIVITY_EMPS_RELATION b
			ON a.activity_id = b.activity_id
			LEFT JOIN tom_activity_property c
			ON c.activity_id = a.activity_id
			LEFT JOIN TOM_EXAM d
			ON d.exam_id = c.exam_id
			LEFT JOIN tom_courses e
			ON e.course_id = c.course_id
			where 1=1 
			<!-- and e.status = 'Y' -->

		<if test="activityId != null and '' != activityId ">
			 and b.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
		
  </select>
 <select id="countByUserList" parameterType="map"
		resultType="java.lang.Integer">
		SELECT count(ac.ACTIVITY_ID) 
        FROM TOM_ACTIVITY_EMPS_RELATION c
        inner JOIN TOM_ACTIVITY ac  ON  c.ACTIVITY_ID =ac.ACTIVITY_ID
       	where ((c.APPLY_STATUS='Y' and ac.ACTIVITY_END_TIME > SYSDATE) or (c.APPLY_STATUS='N' and ac.APPLICATION_DEADLINE >SYSDATE)or(c.APPLY_TYPE='P' and ac.ACTIVITY_START_TIME >SYSDATE))
		and c.status='Y' 
		<if test="code != null and '' != code ">
        AND c.CODE = #{code,jdbcType=VARCHAR}
        </if>
</select>
<select id="selectByUserList" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
         
    SELECT    
    ac.ACTIVITY_ID AS activityId,
			  c.apply_status AS applyStatus,
			  ac.INTRODUCTION AS introduction,
			  ac.ACTIVITY_NAME AS activityName,
			  ac.ACTIVITY_START_TIME AS activityStartTime,
			  ac.ACTIVITY_END_TIME AS activityEndTime,
			  ac.ACT_PICTURE AS actPicture,
			  ac.need_apply as needApply,
			  ac.application_start_time as applicationStartTime,
			  ac.application_deadline as applicationDeadline,
			  ac.CITY AS city
        FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
        where 
        ((c.APPLY_STATUS='Y' and ac.ACTIVITY_END_TIME > SYSDATE) or (c.APPLY_STATUS='N' and ac.APPLICATION_DEADLINE >SYSDATE) or(c.APPLY_TYPE='P' and ac.ACTIVITY_START_TIME >SYSDATE))
        and c.ACTIVITY_ID =ac.ACTIVITY_ID  
        and c.status='Y' 
			<if test="code != null and '' != code ">
	        AND c.CODE = #{code,jdbcType=VARCHAR}
	        </if>
	        order by ac.UPDATE_TIME desc
	        
	        limit<![CDATA[
             #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
   <select id="selectByUserListGlobel" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
       
    SELECT     
    ac.ACTIVITY_ID AS activityId,
			  c.apply_status AS applyStatus,
			  ac.INTRODUCTION AS introduction,
			  ac.ACTIVITY_NAME AS activityName,
			  ac.ACTIVITY_START_TIME AS activityStartTime,
			  ac.ACTIVITY_END_TIME AS activityEndTime,
			  ac.ACT_PICTURE AS actPicture,
			  ac.need_apply as needApply,
			  ac.application_start_time as applicationStartTime,
			  ac.application_deadline as applicationDeadline,
			  ac.CITY AS city
        FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
        where 
       c.ACTIVITY_ID =ac.ACTIVITY_ID  and c.status='Y' 
			<if test="code != null and '' != code ">
	        AND c.CODE = #{code,jdbcType=VARCHAR}
	        </if>
	         <if test="null !=example.activityName">
	           and INSTR(ACTIVITY_NAME,#{example.activityName,jdbcType=VARCHAR})>0
	        </if>
	        order by ac.UPDATE_TIME desc
	        
	        limit<![CDATA[
            #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
	    
  <select id="countByListGlobel" parameterType="map"
		resultType="java.lang.Integer">
		 SELECT     
  count(*)
        FROM TOM_ACTIVITY_EMPS_RELATION c, TOM_ACTIVITY ac
        where c.ACTIVITY_ID =ac.ACTIVITY_ID  and c.status='Y' 
			<if test="code != null and '' != code ">
	        AND c.CODE = #{code,jdbcType=VARCHAR}
	        </if>
	      <if test="example.activityName != null and '' != example.activityName ">
	           and INSTR(ac.ACTIVITY_NAME,#{example.activityName,jdbcType=VARCHAR})>0
	        </if>
	</select>
  <select id="selectByUserDetail" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
  SELECT 
  a.ACTIVITY_ID       AS activityId,  
   a.APPLICATION_START_TIME as applicationStartTime, 
   a.APPLICATION_DEADLINE as applicationDeadline,
			    a.ACTIVITY_NAME        AS activityName,
			    a.NEED_APPLY as needApply,
			    a. ACTIVITY_START_TIME AS activityStartTime,
			    a.ACTIVITY_END_TIME    AS activityEndTime,
          a.INTRODUCTION         AS introduction,
          a.ACT_PICTURE          AS actPicture,
          b.apply_status         AS applyStatus,
			    a.CITY                 AS city,
          a.NUMBER_OF_PARTICIPANTS as numberOfParticipants
			  FROM TOM_ACTIVITY a
         LEFT JOIN TOM_ACTIVITY_EMPS_RELATION b
       ON b.activity_id = a.activity_id
       WHERE 1=1 
       <!-- and e.status = 'Y' -->
		<if test="code != null and '' != code ">
			and b.code = #{code,jdbcType=VARCHAR}
		</if>
		<if test="activityId != null and '' != activityId ">
			 and a.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL}
		</if>
		<if test="applyType != null and '' != applyType ">
			 and b.APPLY_TYPE = #{applyType,jdbcType=VARCHAR}
		</if>
  </select>
 
  <sql id="detailEdit_actColumns">
  	a.ADMINS_NAMES AS adminNames,
  	a.admins AS admins,
  	a.ACTIVITY_NAME AS activityName,
	a.INTRODUCTION AS introduction,
	a.PROTOCOL AS protocol ,
	a.PROTOCOL_START_TIME AS protocolStartTime,
	a.PROTOCOL_END_TIME AS protocolEndTime,
	a.TRAIN_FEE AS trainFee,
	a.NEED_APPLY AS needApply,
	a.NUMBER_OF_PARTICIPANTS AS numberOfParticipants,
	a.STAFF_LEVELS AS staffLevels, 
	a.CITY AS city,
	a.APPLICATION_START_TIME AS applicationStartTime,
	a.APPLICATION_DEADLINE AS applicationDeadline,
	a.ACTIVITY_START_TIME AS activityStartTime,
	a.ACTIVITY_END_TIME AS activityEndTime,
	a.ACT_PICTURE AS actPicture,
  </sql>
   <sql id="detailEdit_proColumns">
	c.ACTIVITY_ID AS activityId, 
	c.PACKAGE_ID AS packageId,
	c.SORT AS sort,
	c.START_TIME AS startTime,
	c.END_TIME AS endTime,
	c.LECTURERS AS lecturers,
	c.COURSE_ADDRESS AS courseAddress,
	c.COURSE_TIME AS courseTime, 
	c.UNIT_PRICE AS unitPrice,
	c.TOTAL_PRICE AS totalPrice,
	c.EXAM_NAME AS examName,
	c.RETAKING_EXAM_TIMES AS retakingExamTimes,
	c.OFFLINE_EXAM AS offlineExam,
	c.PRE_TASK AS preTask,
   </sql>
	<sql id="detailEdit_prosColumns">    
		t.PACKAGE_NAME AS packageName, 
    </sql>
	<sql id="detailEdit_FeesColumns">    
		f.FEE_ID AS feeId, 
		f.FEE AS fee, 
    </sql>
	<sql id="detailEdit_EmpsRColumns">    
		b.CODE AS code, 
		b.APPLY_STATUS AS applyStatus, 
		b.APPLY_TYPE AS applyType, 
		b.IS_REQUIRED AS isRequired
    </sql>
 <select id="selectDetails" resultType="com.chinamobo.ue.activity.dto.TomActivityDto" parameterType="map">
  SELECT 
  <include refid="detailEdit_actColumns"/>
  <include refid="detailEdit_proColumns"/>
  <include refid="detailEdit_prosColumns"/>
  <include refid="detailEdit_FeesColumns"/>
  <include refid="detailEdit_EmpsRColumns"/>
	FROM TOM_ACTIVITY a
	RIGHT JOIN tom_activity_property c
	ON c.activity_id = a.activity_id
	RIGHT JOIN TOM_ACTIVITY_EMPS_RELATION b
	ON a.activity_id = b.activity_id
	RIGHT JOIN TOM_TASK_PACKAGE t
	ON t.PACKAGE_ID = c.PACKAGE_ID
	LEFT JOIN tom_task_exam_relation te
	ON te.package_id = t.package_id
	LEFT JOIN tom_task_courses_relation tc
	ON tc.package_id = t.package_id
	LEFT JOIN tom_activity_fees f
	ON c.activity_id = f.activity_id
	LEFT JOIN tom_emp em
	ON em.code  = b.code
	<if test="activity_id != null and '' != activity_id ">
		and a.ACTIVITY_ID = #{activity_id,jdbcType=DECIMAL}
	</if>
  </select>
	
	<select id="FindByCoursecount" parameterType="map"		resultType="java.lang.Integer">
		select  
	count(*)
    from tom_exam_score S LEFT JOIN TOM_activity_emps_relation AC on s.code = AC.code
    LEFT JOIN TOM_ACTIVITY SA
			ON SA.activity_id = AC.activity_id
		 where  1=1 
		 <if test="code !=null and '' !=code">
		 AND AC.CODE = #{code,jdbcType=VARCHAR}
        </if>
      <if test="gradeState !=null and '' !=gradeState">
      AND S.GRADE_STATE=#{gradeState,jdbcType=VARCHAR} 
      </if>
      <if test="applyStatus !=null and '' !=applyStatus">
      AND (AC.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or AC.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR}) 
      </if>
	</select>
	
	<select id="FindByCourseList" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
        
	          SELECT AC.ACTIVITY_ID AS activityId,
			  B.apply_status AS applyStatus,
			  AC.need_apply as needApply,
			  AC.ACTIVITY_NAME AS activityName,
			  AC. ACTIVITY_START_TIME AS activityStartTime,
			  AC.ACTIVITY_END_TIME AS activityEndTime,
			  AC.ACT_PICTURE AS actPicture
			FROM TOM_ACTIVITY AC 
LEFT JOIN TOM_ACTIVITY_EMPS_RELATION B
			ON AC.activity_id = B.activity_id
			LEFT JOIN TOM_EXAM_SCORE S
			ON S.code = B.code
			WHERE 1=1
			<if test="applyStatus !=null and '' !=applyStatus">
      AND (B.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or B.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR}) 
        </if>
	
			<if test="gradeState !=null and '' !=gradeState">
         AND S.GRADE_STATE=#{gradeState,jdbcType=VARCHAR} 
        </if>
      <if test="code !=null and '' !=code">
		 AND B.CODE = #{code,jdbcType=VARCHAR}
     </if>
	        
	        limit<![CDATA[
             #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  

  <select id="FindAllBylist" resultType="com.chinamobo.ue.api.activity.dto.ActResults" parameterType="map">
   
	          SELECT AC.ACTIVITY_ID AS activityId,
			  B.apply_status AS applyStatus,
			  AC.need_apply as needApply,
			  AC.ACTIVITY_NAME AS activityName,
			  AC. ACTIVITY_START_TIME AS activityStartTime,
			  AC.ACTIVITY_END_TIME AS activityEndTime,
			  AC.ACT_PICTURE AS actPicture
			FROM TOM_ACTIVITY AC 
            LEFT JOIN TOM_ACTIVITY_EMPS_RELATION B
			ON AC.activity_id = B.activity_id
			LEFT JOIN TOM_EXAM_SCORE S
			ON S.code = B.code
			WHERE 1=1
       <if test="applyStatus !=null and '' !=applyStatus ">
      AND (B.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR} or B.APPLY_STATUS=#{applyStatus1,jdbcType=VARCHAR}) 
      </if>
		 <if test="code !=null and '' !=code">
		 AND B.CODE = #{code,jdbcType=VARCHAR}
       </if>
	 
	        limit<![CDATA[
            #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
 <select id="selectAllByEmp" parameterType="string" resultMap="BaseResultMap">
		select
		a.*
		from TOM_ACTIVITY a,TOM_ACTIVITY_EMPS_RELATION b where b.status='Y' and b.code=#{code,jdbcType=VARCHAR} 
		and b.APPLY_STATUS='Y' and a.ACTIVITY_ID=b.ACTIVITY_ID
	</select>
	<select id="countNotStart" parameterType="map"	resultType="java.lang.Integer">
	select count(*) from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' 
	 <![CDATA[
	and a.ACTIVITY_START_TIME >SYSDATE
	]]>
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>
	</select>
	<select id="countUnderway" parameterType="map"	resultType="java.lang.Integer">
	select count(*) from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' 
	 <![CDATA[
	and ((a.ACTIVITY_START_TIME <=SYSDATE and a.ACTIVITY_END_TIME>SYSDATE
	]]>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>) or(b.APPLY_TYPE='P' AND a.ACTIVITY_START_TIME>SYSDATE) )
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	
	</select>
	<select id="countFinished" parameterType="map"	resultType="java.lang.Integer">
	select count(*) from (select DISTINCT a.* from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where (b.status='Y' and a.ACTIVITY_ID in (${ids})
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>)or a.ACTIVITY_ID in (select ACTIVITY_ID from TOM_ACTIVITY_DEPT where HEADER_CODE=#{code,jdbcType=VARCHAR}  and push_status='Y')) as a
	</select>
	<select id="countNotPass" parameterType="map"	resultType="java.lang.Integer">
	select count(*) from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' and a.ACTIVITY_ID in (${ids}) and ((1=1 
<!-- 	<![CDATA[ -->
<!-- 	and ((a.ACTIVITY_END_TIME<SYSDATE -->
<!-- 	]]> -->
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>) or (b.APPLY_TYPE='P' and SYSDATE>a.ACTIVITY_START_TIME))
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	
	</select>
	<select id="selectNotStart" parameterType="map"	resultMap="BaseResultMap">
	
	select a.*
	 from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' 
	 <![CDATA[
	and a.ACTIVITY_START_TIME >SYSDATE
	]]>
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if> order by a.UPDATE_TIME desc
	limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
    
    
	</select>
	<select id="selectUnderway" parameterType="map"	resultMap="BaseResultMap">
	
	select a.*
	from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' 
	 <![CDATA[
	and ((a.ACTIVITY_START_TIME <=SYSDATE and a.ACTIVITY_END_TIME>SYSDATE
	]]>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>) or(b.APPLY_TYPE='P' AND a.ACTIVITY_START_TIME>SYSDATE) )
      <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
      order by a.UPDATE_TIME desc
	limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	<select id="selectFinished" parameterType="map"	resultMap="BaseResultMap">
	
	select DISTINCT a.*
	from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where (b.status='Y' and a.ACTIVITY_ID in (${ids})
	 <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>)or a.ACTIVITY_ID in (select ACTIVITY_ID from TOM_ACTIVITY_DEPT where HEADER_CODE=#{code,jdbcType=VARCHAR}  and push_status='Y')
      order by a.UPDATE_TIME desc
	limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
    
	</select>
	<select id="selectNotPass" parameterType="map"	resultMap="BaseResultMap">
	
	select a.*
	from TOM_ACTIVITY a left join TOM_ACTIVITY_EMPS_RELATION b on a.activity_id = b.activity_id 
	where b.status='Y' and a.ACTIVITY_ID in (${ids}) and ((1=1 
	 <if test="applyStatus !=null and '' !=applyStatus">
      AND b.APPLY_STATUS=#{applyStatus,jdbcType=VARCHAR}
      </if>) or (b.APPLY_TYPE='P' and SYSDATE>a.ACTIVITY_START_TIME))
       <if test="code !=null and ''!=code">
 		 and b.CODE = #{code,jdbcType=VARCHAR} 
	 </if>
      order by a.UPDATE_TIME desc
	limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
    
	</select>
	
	<!-- 活动费用条数和列表 -->
	<select id="selectCount" resultType="int" parameterType="map">
	
	 SELECT count(*) FROM TOM_VI_ACTIVITY_FEE 
WHERE 1=1
    <if test="activityName != null and '' != activityName ">
   and INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
	</if>
	</select>
	<select id="selectactivityCostList" resultType="com.chinamobo.ue.statistics.entity.TomActivityCostStatistics" parameterType="map">
	
				select 
				   activity_id as actitvtyId,
                   ACTIVITY_NAME AS activityName,
        ACTIVITY_START_TIME AS activityStarttime,
        ALL_FEE AS allFee
				from TOM_VI_ACTIVITY_FEE where 1=1
				<if test="activityName != null and '' != activityName ">
					 and INSTR(ACTIVITY_NAME,#{activityName,jdbcType=VARCHAR})>0
				</if> order by ACTIVITY_START_TIME desc
    limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
	</select>
	
		<!-- 根据员工CODE查询用户和活动信息 -->
		<select id="selectByEmpActivity" resultMap="BaseResultMap"
		parameterType="map">
		select a.* from tom_emp e
		join
		tom_activity_emps_relation aer on e.code=aer.code
		left join
		tom_activity a on aer.activity_id=a.activity_id
		where aer.apply_status='Y' and e.code=
		#{code,jdbcType=VARCHAR} order by a.create_time desc 
    limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>		
	</select>
	<!--员工 活动数 -->
	<select id="CountByEmpActivity" resultType="int"
		parameterType="map">
select count(*) from tom_emp e
		join
		tom_activity_emps_relation aer on e.code=aer.code
		left join
		tom_activity a on aer.activity_id=a.activity_id
		where aer.apply_status='Y' and e.code=
		#{code,jdbcType=VARCHAR} 
	</select>
</mapper>
