package com.chinamobo.ue.course.dao;

import java.util.List;
import java.util.Map;

import com.chinamobo.ue.common.entity.Tree;
import com.chinamobo.ue.course.entity.TomCourseClassify;

public interface TomCourseClassifyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer classifyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    int insert(TomCourseClassify record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    int insertSelective(TomCourseClassify record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    TomCourseClassify selectByPrimaryKey(Integer classifyId);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    TomCourseClassify selectByPrimaryKeyEn(Integer classifyId);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TomCourseClassify record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TOM_COURSE_CLASSIFY
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TomCourseClassify record);

    /**
     * 
     * 功能描述：[统计查询结果]
     *
     * 创建者：JCX
     * 创建时间: 2016年3月1日 下午2:12:55
     * @param example
     * @return
     */
	int countByExample(Map<Object,Object> map);
	
	/**
     * 
     * 功能描述：[统计查询结果]
     *
     * 创建者：JCX
     * 创建时间: 2016年3月1日 下午2:12:55
     * @param example
     * @return
     */
	int countByExampleEn(Map<Object,Object> map);
	
	/**
	 * 
	 * 功能描述：[分页查询]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:12:59
	 * @param map
	 * @return
	 */
	List<TomCourseClassify> selectListByPage(Map<Object, Object> map);
	
	/**
	 * 
	 * 功能描述：[分页查询]En
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:12:59
	 * @param map
	 * @return
	 */
	List<TomCourseClassify> selectListByPageEn(Map<Object, Object> map);
	
	/**
	 * 
	 * 功能描述：[查询所有]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:16:50
	 * @return
	 */
	List<TomCourseClassify> selectAll();
	
	/**
	 * 
	 * 功能描述：[查询所有]En
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:16:50
	 * @return
	 */
	List<TomCourseClassify> selectAllEn();
	
	/**
	 * 
	 * 功能描述：[获取父节点]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:13:03
	 * @param parentClassifyId
	 * @return
	 */
	TomCourseClassify getParent(Integer parentClassifyId);
	
	/**
	 * 
	 * 功能描述：[获取父节点]En
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:13:03
	 * @param parentClassifyId
	 * @return
	 */
	TomCourseClassify getParentEn(Integer parentClassifyId);


	/**
	 * 
	 * 功能描述：[根据父节点查询]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:13:07
	 * @param classifyId
	 * @return
	 */
	List<TomCourseClassify> selectByParentId(int classifyId);
	
	/**
	 * 
	 * 功能描述：[根据父节点查询]En
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月1日 下午2:13:07
	 * @param classifyId
	 * @return
	 */
	List<TomCourseClassify> selectByParentIdEn(int classifyId);


	/**
	 * 
	 * 功能描述：[根据多个id查询]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年3月8日 下午1:07:25
	 * @param classifyIds
	 * @return
	 */
	List<TomCourseClassify> selectByIds(Map<Object, Object> map);
	
	List<TomCourseClassify> selectByIdsEn(Map<Object, Object> map);

	List<Tree> selectClassifyAsTree();
	
	List<Tree> selectClassifyAsTreeEn();
	/**
	 * 
	 * 功能描述：查询所有分类
	 *
	 * 创建者：ZXM
	 * 创建时间: 2016年3月18日下午3:49:27
	 * @param map
	 * @return
	 */
	List<TomCourseClassify> selectListByPageAll(Map<Object, Object> map);
	
	/**
	 * 
	 * 功能描述：查询所有分类En
	 *
	 * 创建者：ZXM
	 * 创建时间: 2016年3月18日下午3:49:27
	 * @param map
	 * @return
	 */
	List<TomCourseClassify> selectListByPageAllEn(Map<Object, Object> map);
	
	/**
	 * 
	 * 功能描述：查询所有分类数据
	 *
	 * 创建者：ZXM
	 * 创建时间: 2016年3月18日下午3:51:29
	 * @param map
	 * @return
	 */
	int countByExampleAll(Map<Object,Object> map);
	
	/**
	 * 
	 * 功能描述：查询所有分类数据En
	 *
	 * 创建者：ZXM
	 * 创建时间: 2016年3月18日下午3:51:29
	 * @param map
	 * @return
	 */
	int countByExampleAllEn(Map<Object,Object> map);

	/**
	 * 
	 * 功能描述：[根据课程id查询分类]
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年4月12日 上午10:31:42
	 * @param courseId
	 * @return
	 */
	List<TomCourseClassify> selectByCourseId(int courseId);
	
	/**
	 * 
	 * 功能描述：[根据课程id查询分类]En
	 *
	 * 创建者：JCX
	 * 创建时间: 2016年4月12日 上午10:31:42
	 * @param courseId
	 * @return
	 */
	List<TomCourseClassify> selectByCourseIdEn(int courseId);
	
}