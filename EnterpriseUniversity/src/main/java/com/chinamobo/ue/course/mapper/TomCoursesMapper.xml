<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.course.dao.TomCoursesMapper" >
  <resultMap id="BaseResultMap" type="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
    <result column="COURSE_NUMBER" property="courseNumber" jdbcType="VARCHAR" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_NAME_EN" property="courseNameEn" jdbcType="VARCHAR" />
    <result column="COURSE_ONLINE" property="courseOnline" jdbcType="VARCHAR" />
    <result column="COURSE_INTRODUCTION" property="courseIntroduction" jdbcType="VARCHAR" />
    <result column="COURSE_INTRODUCTION_EN" property="courseIntroductionEn" jdbcType="VARCHAR" />
    <result column="COURSE_TYPE" property="courseType" jdbcType="VARCHAR" />
    <result column="E_CURRENCY" property="eCurrency" jdbcType="DECIMAL" />
    <result column="COURSE_GRADE_DIMENSIONS" property="courseGradeDimensions" jdbcType="VARCHAR" />
    <result column="LECTURER_GRADE_DIMENSIONS" property="lecturerGradeDimensions" jdbcType="VARCHAR" />
    <result column="LECTURERS" property="lecturers" jdbcType="VARCHAR" />
    <result column="COURSE_IMG" property="courseImg" jdbcType="VARCHAR" />
    <result column="COURSE_IMG_EN" property="courseImgEn" jdbcType="VARCHAR" />
    <result column="COURSE_DOWNLOADABLE" property="courseDownloadable" jdbcType="VARCHAR" />
    <result column="IS_EXCELLENT_COURSE" property="isExcellentCourse" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="OPEN_COMMENT" property="openComment" jdbcType="VARCHAR" />
    <result column="OPEN_COURSE" property="openCourse" jdbcType="VARCHAR" />
    <result column="ADMINS" property="admins" jdbcType="VARCHAR" />
    <result column="ADMIN_NAMES" property="adminNames" jdbcType="VARCHAR" />
    <result column="VIEWERS" property="viewers" jdbcType="DECIMAL" />
    <result column="THUMB_UP_COUNT" property="thumbUpCount" jdbcType="DECIMAL" />
    <result column="COMMENT_COUNT" property="commentCount" jdbcType="DECIMAL" />
    <result column="RATETIMES" property="ratetimes" jdbcType="DECIMAL" />
    <result column="COURSE_AVERAGE" property="courseAverage" jdbcType="DECIMAL" />
    <result column="TOT_SCORE" property="totScore" jdbcType="DECIMAL" />
    <result column="LECTURER_AVERAGE" property="lecturerAverage" jdbcType="DECIMAL" />
    <result column="COURSE_TIMES" property="courseTimes" jdbcType="DECIMAL" />
    <result column="SIGN_IN_TWO_DIMENSION_CODE" property="signInTwoDimensionCode" jdbcType="VARCHAR" />
    <result column="GRADE_TWO_DIMENSION_CODE" property="gradeTwoDimensionCode" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="GRADE_STATUS" property="gradeStatus" jdbcType="VARCHAR" />
     <result column="PCEN" property="pcen" jdbcType="VARCHAR" />
     <result column="PCCN" property="pccn" jdbcType="VARCHAR" />
     <result column="H5EN" property="h5en" jdbcType="VARCHAR" />
     <result column="H5CN" property="h5cn" jdbcType="VARCHAR" />
     <result column="PARENT_CLASSIFY_ID" property="parentClassifyId" jdbcType="VARCHAR" />
     <result column="PARENT_PROJECT_CLASSIFY_NAME" property="parentProjectClassifyName" jdbcType="VARCHAR" />
     <result column="SECTION_TYPES" property="sectionTypes" jdbcType="VARCHAR" />
     <result column="OPENNUM" property="opennum" jdbcType="VARCHAR" />
     <result column="REPEATSIGN" property="reapeatSign" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 课程收藏 -->
  <resultMap type="com.chinamobo.ue.course.entity.TomFavoriteCourse" id="FavoriteResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.chinamobo.ue.course.entity.TomCourseThumbUp" id="ThumbUpResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 课程学习记录 -->
  <resultMap type="com.chinamobo.ue.course.entity.TomCourseLearningRecord" id="CourseLearningResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="LEARNING_DATE" property="learningDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- 任务课程 -->
    <resultMap id="TaskResultMap" type="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_NAME_EN" property="courseNameEn" jdbcType="VARCHAR" />
    <result column="COURSE_ONLINE" property="courseOnline" jdbcType="VARCHAR" />
    <result column="COURSE_TYPE" property="courseType" jdbcType="VARCHAR" />
    <result column="COURSE_GRADE_DIMENSIONS" property="courseGradeDimensions" jdbcType="VARCHAR" />
    <result column="COURSE_IMG" property="courseImg" jdbcType="VARCHAR" />
    <result column="COURSE_IMG_EN" property="courseImgEn" jdbcType="VARCHAR" />
    <result column="IS_EXCELLENT_COURSE" property="isExcellentCourse" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="VIEWERS" property="viewers" jdbcType="DECIMAL" />
    <result column="THUMB_UP_COUNT" property="thumbUpCount" jdbcType="DECIMAL" />
    <result column="COMMENT_COUNT" property="commentCount" jdbcType="DECIMAL" />
   	<result column="ACTIVITY_ID" property="activityId" jdbcType="DECIMAL" />
   	<result column="ACTIVITY_NAME" property="activityName" jdbcType="VARCHAR" />
   	<result column="START_TIME" property="startTime" jdbcType="VARCHAR" />
  	<result column="END_TIME" property="endTime" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.chinamobo.ue.course.dto.TomEmpCourseDto" id="empCourseResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="VARCHAR" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
  	<result column="NAME" property="name" jdbcType="VARCHAR" />
  	<result column="COURSE_TYPE" property="courseType" jdbcType="VARCHAR" />
  	<result column="FINISH_TIME" property="finishTime" jdbcType="VARCHAR" />
  	<result column="FINISH_STATUS" property="finishStatus" jdbcType="VARCHAR" />
  	<result column="COURSE_GRADE" property="courseGrade" jdbcType="VARCHAR" />
  	<result column="FINISH_STATION" property="finishStation" jdbcType="DOUBLE" />
  	<result column="SUM_STATION" property="sumStation" jdbcType="DOUBLE" />
  	<result column="STUDY_COUNT" property="studycount" jdbcType="VARCHAR" />
  	<result column="IN_LINETIME" property="inLinetime" jdbcType="VARCHAR" />
  	<result column="COURSE_PLAN" property="coursePlan" jdbcType="VARCHAR" />
  	<result column="THUMB_STATUS" property="thumbStatus" jdbcType="VARCHAR" />
  	<result column="COURSE_ONLINE" property="courseOnline" jdbcType="VARCHAR" />
  	<result column="COMMENT" property="commentContent" jdbcType="VARCHAR" />
  	<!-- <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
  	<result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" /> -->
  	<result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.chinamobo.ue.course.dto.TomEmpCourseDto" id="protiesCourseResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="VARCHAR" />
  	<result column="IS_REQUIRED" property="isRequired" jdbcType="VARCHAR" />
  	<result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
  	<result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap type="com.chinamobo.ue.course.dto.TomNeedLearnDto" id="selectCourseNeedMap">
    <result column="CODE" property="code" jdbcType="VARCHAR" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="SECRET_EMAIL" property="secretEmail" jdbcType="VARCHAR" />
		<result column="OFFICEPHONE" property="officephone" jdbcType="VARCHAR" />
		<result column="DEPTNAME" property="deptname" jdbcType="VARCHAR" />
		<result column="JOBNAME" property="jobname" jdbcType="VARCHAR" />
		<result column="COURSE_COMMENT_CONTENT" property="courseCommentContent" jdbcType="VARCHAR" />
		<result column="SCOREC" property="scorec" jdbcType="VARCHAR" />
		<result column="SCOREL" property="scorel" jdbcType="VARCHAR" />
		<result column="SECTION_NAME" property="sectionName" jdbcType="VARCHAR" />
		<result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
		<result column="STATUSF" property="statusf" jdbcType="VARCHAR" />
		<result column="STATUST" property="statust" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 课程点赞 -->
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    COURSE_ID, COURSE_NUMBER, COURSE_NAME,COURSE_NAME_EN, COURSE_ONLINE, COURSE_INTRODUCTION,COURSE_INTRODUCTION_EN, COURSE_TYPE, 
    E_CURRENCY, COURSE_GRADE_DIMENSIONS, LECTURER_GRADE_DIMENSIONS, LECTURERS, COURSE_IMG, COURSE_IMG_EN,
    COURSE_DOWNLOADABLE, IS_EXCELLENT_COURSE, STATUS, OPEN_COMMENT, OPEN_COURSE, ADMINS, 
    VIEWERS, THUMB_UP_COUNT, COMMENT_COUNT, RATETIMES, COURSE_AVERAGE, TOT_SCORE, LECTURER_AVERAGE, 
    COURSE_TIMES, SIGN_IN_TWO_DIMENSION_CODE, GRADE_TWO_DIMENSION_CODE, CREATOR,CREATOR_ID, CREATE_TIME, 
    OPERATOR, UPDATE_TIME,GRADE_STATUS,PCEN,PCCN,H5EN,H5CN,REPEATSIGN
  </sql>
  <sql id="Base_Column_List1" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    c.COURSE_ID COURSE_ID, c.COURSE_NUMBER COURSE_NUMBER, c.COURSE_NAME COURSE_NAME,c.COURSE_NAME_EN COURSE_NAME_EN, c.COURSE_ONLINE COURSE_ONLINE, c.COURSE_INTRODUCTION COURSE_INTRODUCTION,c.COURSE_INTRODUCTION_EN COURSE_INTRODUCTION_EN, c.COURSE_TYPE COURSE_TYPE, 
    c.E_CURRENCY E_CURRENCY, c.COURSE_GRADE_DIMENSIONS COURSE_GRADE_DIMENSIONS, c.LECTURER_GRADE_DIMENSIONS LECTURER_GRADE_DIMENSIONS, c.LECTURERS LECTURERS, c.COURSE_IMG COURSE_IMG, c.COURSE_IMG_EN COURSE_IMG_EN,
    c.COURSE_DOWNLOADABLE COURSE_DOWNLOADABLE, c.IS_EXCELLENT_COURSE IS_EXCELLENT_COURSE, c.STATUS STATUS, c.OPEN_COMMENT OPEN_COMMENT, c.OPEN_COURSE OPEN_COURSE, c.ADMINS ADMINS, 
    c.VIEWERS VIEWERS, c.THUMB_UP_COUNT THUMB_UP_COUNT, c.COMMENT_COUNT COMMENT_COUNT, c.RATETIMES RATETIMES, c.COURSE_AVERAGE COURSE_AVERAGE, c.TOT_SCORE TOT_SCORE, c.LECTURER_AVERAGE LECTURER_AVERAGE, 
    c.COURSE_TIMES COURSE_TIMES, c.SIGN_IN_TWO_DIMENSION_CODE SIGN_IN_TWO_DIMENSION_CODE, c.GRADE_TWO_DIMENSION_CODE GRADE_TWO_DIMENSION_CODE, c.CREATOR CREATOR,c.CREATOR_ID CREATOR_ID, c.CREATE_TIME CREATE_TIME, 
    c.OPERATOR OPERATOR, c.UPDATE_TIME UPDATE_TIME,c.GRADE_STATUS GRADE_STATUS,c.PCEN PCEN,c.PCCN PCCN,c.H5EN H5EN,c.H5CN H5CN
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TOM_COURSES
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </select>
  <select id="selectByGrade" resultMap="BaseResultMap" parameterType="map"  >
  	select * from TOM_COURSES where FIND_IN_SET(#{gradeDimensionId,jdbcType=VARCHAR},COURSE_GRADE_DIMENSIONS) or FIND_IN_SET(#{gradeDimensionId,jdbcType=VARCHAR},LECTURER_GRADE_DIMENSIONS) 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TOM_COURSES
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="courseId" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TOM_COURSES (<!-- COURSE_ID, --> COURSE_NUMBER, COURSE_NAME, 
      COURSE_ONLINE, COURSE_INTRODUCTION, COURSE_TYPE, 
      E_CURRENCY, COURSE_GRADE_DIMENSIONS, LECTURER_GRADE_DIMENSIONS, 
      LECTURERS, COURSE_IMG,COURSE_IMG_EN, COURSE_DOWNLOADABLE, 
      IS_EXCELLENT_COURSE, STATUS, OPEN_COMMENT, 
      OPEN_COURSE, ADMINS, VIEWERS, 
      THUMB_UP_COUNT, COMMENT_COUNT, RATETIMES, 
      COURSE_AVERAGE, TOT_SCORE, LECTURER_AVERAGE, 
      COURSE_TIMES, SIGN_IN_TWO_DIMENSION_CODE, GRADE_TWO_DIMENSION_CODE, 
      CREATOR,CREATOR_ID, CREATE_TIME, OPERATOR, 
      UPDATE_TIME,GRADE_STATUS,PCEN,PCCN,H5EN,H5CN)
    values (<!-- COURSES_SEQ.nextval, --> #{courseNumber,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseOnline,jdbcType=VARCHAR}, #{courseIntroduction,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, 
      #{eCurrency,jdbcType=DECIMAL}, #{courseGradeDimensions,jdbcType=VARCHAR}, #{lecturerGradeDimensions,jdbcType=VARCHAR}, 
      #{lecturers,jdbcType=VARCHAR}, #{courseImg,jdbcType=VARCHAR},#{courseImgEn,jdbcType=VARCHAR}, #{courseDownloadable,jdbcType=VARCHAR}, 
      #{isExcellentCourse,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{openComment,jdbcType=VARCHAR}, 
      #{openCourse,jdbcType=VARCHAR}, #{admins,jdbcType=VARCHAR}, #{viewers,jdbcType=DECIMAL}, 
      #{thumbUpCount,jdbcType=DECIMAL}, #{commentCount,jdbcType=DECIMAL}, #{ratetimes,jdbcType=DECIMAL}, 
      #{courseAverage,jdbcType=DECIMAL}, #{totScore,jdbcType=DECIMAL}, #{lecturerAverage,jdbcType=DECIMAL}, 
      #{courseTimes,jdbcType=DECIMAL}, #{signInTwoDimensionCode,jdbcType=VARCHAR}, #{gradeTwoDimensionCode,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{gradeStatus,jdbcType=VARCHAR}, #{pcen,jdbcType=VARCHAR}, #{pccn,jdbcType=VARCHAR}
      , #{h5en,jdbcType=VARCHAR}, #{h5cn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="courseId" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
   <!-- <selectKey resultType="INTEGER" order="BEFORE" keyProperty="courseId">  
       SELECT COURSES_SEQ.NEXTVAL as courseId from DUAL
   </selectKey> --> 
    insert into TOM_COURSES
    <trim prefix="(" suffix=")" suffixOverrides="," >
        <!-- COURSE_ID, -->
      <if test="courseNumber != null" >
        COURSE_NUMBER,
      </if>
      <if test="courseName != null" >
        COURSE_NAME,
      </if>
      <if test="courseNameEn != null" >
        COURSE_NAME_EN,
      </if>
      <if test="courseOnline != null" >
        COURSE_ONLINE,
      </if>
      <if test="courseIntroduction != null" >
        COURSE_INTRODUCTION,
      </if>
      <if test="courseIntroductionEn != null" >
        COURSE_INTRODUCTION_EN,
      </if>
      <if test="courseType != null" >
        COURSE_TYPE,
      </if>
      <if test="eCurrency != null" >
        E_CURRENCY,
      </if>
        COURSE_GRADE_DIMENSIONS,
        LECTURER_GRADE_DIMENSIONS,
      <if test="lecturers != null" >
        LECTURERS,
      </if>
      <if test="courseImg != null" >
        COURSE_IMG,
      </if>
       <if test="courseImgEn != null" >
        COURSE_IMG_EN,
      </if>
      <if test="courseDownloadable != null" >
        COURSE_DOWNLOADABLE,
      </if>
      <if test="isExcellentCourse != null" >
        IS_EXCELLENT_COURSE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="openComment != null" >
        OPEN_COMMENT,
      </if>
      <if test="openCourse != null" >
        OPEN_COURSE,
      </if>
      <if test="admins != null" >
        ADMINS,
      </if>
      <if test="viewers != null" >
        VIEWERS,
      </if>
      <if test="thumbUpCount != null" >
        THUMB_UP_COUNT,
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT,
      </if>
      <if test="ratetimes != null" >
        RATETIMES,
      </if>
      <if test="courseAverage != null" >
        COURSE_AVERAGE,
      </if>
      <if test="totScore != null" >
        TOT_SCORE,
      </if>
      <if test="lecturerAverage != null" >
        LECTURER_AVERAGE,
      </if>
      <if test="courseTimes != null" >
        COURSE_TIMES,
      </if>
      <if test="signInTwoDimensionCode != null" >
        SIGN_IN_TWO_DIMENSION_CODE,
      </if>
      <if test="gradeTwoDimensionCode != null" >
        GRADE_TWO_DIMENSION_CODE,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="creatorId != null" >
        CREATOR_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="gradeStatus != null" >
        GRADE_STATUS,
      </if>
      <if test="pcen != null">
      	PCEN,
      </if>
      <if test="pccn != null">
      	PCCN,
      </if>
      <if test="h5en != null">
      	H5EN,
      </if>
      <if test="h5cn != null">
      	H5CN,
      </if>
      <if test="parentClassifyId != null">
      	PARENT_CLASSIFY_ID,
      </if>
      <if test="parentProjectClassifyName != null">
      	PARENT_PROJECT_CLASSIFY_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
       <!--  #{courseId,jdbcType=DECIMAL}, -->
      <if test="courseNumber != null" >
        #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNameEn != null" >
        #{courseNameEn,jdbcType=VARCHAR},
      </if>
      <if test="courseOnline != null" >
        #{courseOnline,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduction != null" >
        #{courseIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroductionEn != null" >
        #{courseIntroductionEn,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="eCurrency != null" >
        #{eCurrency,jdbcType=DECIMAL},
      </if>
        #{courseGradeDimensions,jdbcType=VARCHAR},
        #{lecturerGradeDimensions,jdbcType=VARCHAR},
      <if test="lecturers != null" >
        #{lecturers,jdbcType=VARCHAR},
      </if>
      <if test="courseImg != null" >
        #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="courseImgEn != null" >
        #{courseImgEn,jdbcType=VARCHAR},
      </if>
      <if test="courseDownloadable != null" >
        #{courseDownloadable,jdbcType=VARCHAR},
      </if>
      <if test="isExcellentCourse != null" >
        #{isExcellentCourse,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="openComment != null" >
        #{openComment,jdbcType=VARCHAR},
      </if>
      <if test="openCourse != null" >
        #{openCourse,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        #{admins,jdbcType=VARCHAR},
      </if>
      <if test="viewers != null" >
        #{viewers,jdbcType=DECIMAL},
      </if>
      <if test="thumbUpCount != null" >
        #{thumbUpCount,jdbcType=DECIMAL},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=DECIMAL},
      </if>
      <if test="ratetimes != null" >
        #{ratetimes,jdbcType=DECIMAL},
      </if>
      <if test="courseAverage != null" >
        #{courseAverage,jdbcType=DECIMAL},
      </if>
      <if test="totScore != null" >
        #{totScore,jdbcType=DECIMAL},
      </if>
      <if test="lecturerAverage != null" >
        #{lecturerAverage,jdbcType=DECIMAL},
      </if>
      <if test="courseTimes != null" >
        #{courseTimes,jdbcType=DECIMAL},
      </if>
      <if test="signInTwoDimensionCode != null" >
        #{signInTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeTwoDimensionCode != null" >
        #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="gradeStatus != null" >
        #{gradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="pcen != null" >
        #{pcen,jdbcType=VARCHAR},
      </if>
      <if test="pccn != null" >
        #{pccn,jdbcType=VARCHAR},
      </if>
      <if test="h5en != null" >
        #{h5en,jdbcType=VARCHAR},
      </if>
      <if test="h5cn != null" >
        #{h5cn,jdbcType=VARCHAR},
      </if>
      <if test="parentClassifyId != null">
       #{parentClassifyId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectClassifyName != null">
      #{parentProjectClassifyName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_COURSES
    <set >
      <if test="courseNumber != null" >
        COURSE_NUMBER = #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNameEn != null" >
        COURSE_NAME_EN = #{courseNameEn,jdbcType=VARCHAR},
      </if>
      <if test="courseOnline != null" >
        COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduction != null" >
        COURSE_INTRODUCTION = #{courseIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroductionEn != null" >
        COURSE_INTRODUCTION_EN = #{courseIntroductionEn,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        COURSE_TYPE = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="eCurrency != null" >
        E_CURRENCY = #{eCurrency,jdbcType=DECIMAL},
      </if>
        COURSE_GRADE_DIMENSIONS = #{courseGradeDimensions,jdbcType=VARCHAR},
        LECTURER_GRADE_DIMENSIONS = #{lecturerGradeDimensions,jdbcType=VARCHAR},
      <if test="lecturers != null" >
        LECTURERS = #{lecturers,jdbcType=VARCHAR},
      </if>
      <if test="courseImg != null" >
        COURSE_IMG = #{courseImg,jdbcType=VARCHAR},
      </if>
       <if test="courseImgEn != null" >
        COURSE_IMG_EN = #{courseImgEn,jdbcType=VARCHAR},
      </if>
      <if test="courseDownloadable != null" >
        COURSE_DOWNLOADABLE = #{courseDownloadable,jdbcType=VARCHAR},
      </if>
      <if test="isExcellentCourse != null" >
        IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="openComment != null" >
        OPEN_COMMENT = #{openComment,jdbcType=VARCHAR},
      </if>
      <if test="openCourse != null" >
        OPEN_COURSE = #{openCourse,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        ADMINS = #{admins,jdbcType=VARCHAR},
      </if>
      <if test="adminNames != null" >
        ADMIN_NAMES=#{adminNames,jdbcType=VARCHAR},
      </if>
      <if test="viewers != null" >
        VIEWERS = #{viewers,jdbcType=DECIMAL},
      </if>
      <if test="thumbUpCount != null" >
        THUMB_UP_COUNT = #{thumbUpCount,jdbcType=DECIMAL},
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT = #{commentCount,jdbcType=DECIMAL},
      </if>
      <if test="ratetimes != null" >
        RATETIMES = #{ratetimes,jdbcType=DECIMAL},
      </if>
      <if test="courseAverage != null" >
        COURSE_AVERAGE = #{courseAverage,jdbcType=DECIMAL},
      </if>
      <if test="totScore != null" >
        TOT_SCORE = #{totScore,jdbcType=DECIMAL},
      </if>
      <if test="lecturerAverage != null" >
        LECTURER_AVERAGE = #{lecturerAverage,jdbcType=DECIMAL},
      </if>
      <if test="courseTimes != null" >
        COURSE_TIMES = #{courseTimes,jdbcType=DECIMAL},
      </if>
      <if test="signInTwoDimensionCode != null" >
        SIGN_IN_TWO_DIMENSION_CODE = #{signInTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeTwoDimensionCode != null" >
        GRADE_TWO_DIMENSION_CODE = #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gradeStatus != null" >
        GRADE_STATUS = #{gradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="pcen != null" >
        PCEN = #{pcen,jdbcType=VARCHAR},
      </if>
      <if test="pccn != null" >
        PCCN = #{pccn,jdbcType=VARCHAR},
      </if>
      <if test="h5en != null" >
        H5EN = #{h5en,jdbcType=VARCHAR},
      </if>
      <if test="h5cn != null" >
        H5CN = #{h5cn,jdbcType=VARCHAR},
      </if>
      <if test="sectionTypes !=null">
      	SECTION_TYPES= #{sectionTypes,jdbcType=VARCHAR},
      </if>
      <if test="parentClassifyId !=null">
      	PARENT_CLASSIFY_ID= #{parentClassifyId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectClassifyName !=null">
      	PARENT_PROJECT_CLASSIFY_NAME= #{parentProjectClassifyName,jdbcType=VARCHAR},
      </if>
       <if test="reapeatSign !=null">
      	REPEATSIGN= #{reapeatSign,jdbcType=VARCHAR},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_COURSES
    set COURSE_NUMBER = #{courseNumber,jdbcType=VARCHAR},
      COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR},
      COURSE_INTRODUCTION = #{courseIntroduction,jdbcType=VARCHAR},
      COURSE_TYPE = #{courseType,jdbcType=VARCHAR},
      E_CURRENCY = #{eCurrency,jdbcType=DECIMAL},
      COURSE_GRADE_DIMENSIONS = #{courseGradeDimensions,jdbcType=VARCHAR},
      LECTURER_GRADE_DIMENSIONS = #{lecturerGradeDimensions,jdbcType=VARCHAR},
      LECTURERS = #{lecturers,jdbcType=VARCHAR},
      COURSE_IMG = #{courseImg,jdbcType=VARCHAR},
       COURSE_IMG_EN = #{courseImgEn,jdbcType=VARCHAR},
      COURSE_DOWNLOADABLE = #{courseDownloadable,jdbcType=VARCHAR},
      IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      OPEN_COMMENT = #{openComment,jdbcType=VARCHAR},
      OPEN_COURSE = #{openCourse,jdbcType=VARCHAR},
      ADMINS = #{admins,jdbcType=VARCHAR},
      VIEWERS = #{viewers,jdbcType=DECIMAL},
      THUMB_UP_COUNT = #{thumbUpCount,jdbcType=DECIMAL},
      COMMENT_COUNT = #{commentCount,jdbcType=DECIMAL},
      RATETIMES = #{ratetimes,jdbcType=DECIMAL},
      COURSE_AVERAGE = #{courseAverage,jdbcType=DECIMAL},
      TOT_SCORE = #{totScore,jdbcType=DECIMAL},
      LECTURER_AVERAGE = #{lecturerAverage,jdbcType=DECIMAL},
      COURSE_TIMES = #{courseTimes,jdbcType=DECIMAL},
      SIGN_IN_TWO_DIMENSION_CODE = #{signInTwoDimensionCode,jdbcType=VARCHAR},
      GRADE_TWO_DIMENSION_CODE = #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      GRADE_STATUS = #{gradeStatus,jdbcType=VARCHAR},
      PCEN = #{pcen,jdbcType=VARCHAR},
      PCCN = #{pccn,jdbcType=VARCHAR},
      H5EN = #{h5en,jdbcType=VARCHAR},
      H5CN = #{h5cn,jdbcType=VARCHAR}
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </update>
  <select id="countByExample" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where 1=1
    <if test="status != null" >
        and STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" > 
        and INSTR(COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="courseNameEn != null" > 
        and INSTR(COURSE_NAME_EN,#{courseNameEn,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
        and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="courseOnline != null" >
        and COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR} 
      </if>
        <if test="lecturers != null" >
        and INSTR(LECTURERS,#{lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
         and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="openCourse != null" >
         and OPEN_COURSE = #{openCourse,jdbcType=VARCHAR}
      </if>
  </select>
  
  <select id="selectListByPage" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(DISTINCT ce.`CODE`) OPENNUM,
	
    <include refid="Base_Column_List1" />    
     FROM TOM_COURSES  c
     LEFT JOIN tom_course_emp_relation ce on ce.COURSE_ID = c.COURSE_ID
     where 1=1
    <if test="example.status != null" >
        and c.STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" > 
        and INSTR(c.COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseNameEn != null" > 
        and INSTR(c.COURSE_NAME_EN,#{example.courseNameEn,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseType != null" >
        and INSTR(c.COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and c.COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR} 
      </if>
      <if test="example.lecturers != null" >
        and INSTR(c.LECTURERS,#{example.lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="example.openCourse != null" >
         and c.OPEN_COURSE = #{example.openCourse,jdbcType=VARCHAR}
      </if>
      GROUP BY c.COURSE_ID
      <if test="listOrder!=null">
      	 order by isnull(${listOrder})-1, ${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} <!-- nulls last -->
      </if> 
     limit<![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
   <!-- 查看当前登陆人所有课程总数据 -->
 <!--  <select id="countByExampleApi" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from (select DISTINCT c.* from TOM_COURSES c LEFT JOIN TOM_COURSE_EMP_RELATION e on c.course_id = e .course_id where 
	((e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y' ) or c.open_course ='Y') 
    <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" >
        and INSTR(c.COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
      </if>
       <if test="courseNameEn != null" >
        and INSTR(c.COURSE_NAME_EN,#{courseNameEn,jdbcType=VARCHAR})>0 
      </if>
      <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="courseType != null" >
        and INSTR(c.COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0  
      </if>
      <if test="courseOnline != null" >
        and c.COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="pccn !=null">
      	and c.pccn = #{pccn,jdbcType=VARCHAR}
      </if>
       <if test="h5en !=null">
      	and c.h5en = #{h5en,jdbcType=VARCHAR}
      </if>
       <if test="pcen !=null">
      	and c.pcen = #{pcen,jdbcType=VARCHAR}
      </if>
       <if test="h5cn !=null">
      	and c.h5cn = #{h5cn,jdbcType=VARCHAR}
      </if>
      <if test="isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR} 
      </if>) as a
  </select>-->
  
   <!-- 查看当前登陆人所有课程总数据 20170510 优化查询效率 wjx-->
  <select id="countByExampleApi" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
  	 SELECT count(*) FROM TOM_COURSES c where (c.course_id in (select e.course_id from TOM_COURSE_EMP_RELATION e 
	  	where e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y') or c.open_course ='Y')  
    <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" >
        and INSTR(c.COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
      </if>
       <if test="courseNameEn != null" >
        and INSTR(c.COURSE_NAME_EN,#{courseNameEn,jdbcType=VARCHAR})>0 
      </if>
      <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="courseType != null" >
        and INSTR(c.COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0  
      </if>
      <if test="courseOnline != null" >
        and c.COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="pccn !=null">
      	and c.pccn = #{pccn,jdbcType=VARCHAR}
      </if>
       <if test="h5en !=null">
      	and c.h5en = #{h5en,jdbcType=VARCHAR}
      </if>
       <if test="pcen !=null">
      	and c.pcen = #{pcen,jdbcType=VARCHAR}
      </if>
       <if test="h5cn !=null">
      	and c.h5cn = #{h5cn,jdbcType=VARCHAR}
      </if>
      <if test="isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR} 
      </if>
  </select>
  
  <!-- 查询当前登陆人可看到的课程 -->
<!--   <select id="selectListByPageApi" resultMap="BaseResultMap" parameterType="map" > -->
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  <!-- SELECT DISTINCT c.* FROM
	TOM_COURSES c LEFT JOIN TOM_COURSE_EMP_RELATION e on c.course_id = e .course_id where 
	((e.code = #{example.code,jdbcType=VARCHAR} and e.STATUS = 'Y' ) or c.open_course ='Y') 
	<if test="finishStatus != null" >
        and e.FINISH_STATUS = #{finishStatus,jdbcType=VARCHAR}
      </if>
    <if test="example.status != null" >
        and c.STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" > 
        and INSTR(c.COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseNameEn != null" > 
        and INSTR(c.COURSE_NAME_EN,#{example.courseNameEn,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseType != null" >
        and INSTR(c.COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and c.COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR}
      </if>
      <if test="example.pccn !=null">
      	and c.pccn = #{example.pccn,jdbcType=VARCHAR}
      </if>
       <if test="example.h5en !=null">
      	and c.h5en = #{example.h5en,jdbcType=VARCHAR}
      </if>
       <if test="example.pcen !=null">
      	and c.pcen = #{example.pcen,jdbcType=VARCHAR}
      </if>
       <if test="example.h5cn !=null">
      	and c.h5cn = #{example.h5cn,jdbcType=VARCHAR}
      </if>
      <if test="listOrder!=null">
      	 order by isnull(c.${listOrder})-1, c.${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} 
      </if>
     limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select> -->
  
  <!-- 查询当前登陆人可看到的课程 20170510 优化查询效率 wjx -->
  <select id="selectListByPageApi" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  	SELECT c.* FROM TOM_COURSES c where (c.course_id in (select e.course_id from TOM_COURSE_EMP_RELATION e 
	  	where e.code = #{example.code,jdbcType=VARCHAR} and e.STATUS = 'Y') or c.open_course ='Y')  	
	    <if test="example.status != null" >
	        and c.STATUS = #{example.status,jdbcType=VARCHAR}
	      </if>
	     <if test="example.courseName != null" > 
	        and INSTR(c.COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
	      </if>
	      <if test="example.courseNameEn != null" > 
	        and INSTR(c.COURSE_NAME_EN,#{example.courseNameEn,jdbcType=VARCHAR})>0
	      </if>
	      <if test="example.courseType != null" >
	        and INSTR(c.COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
	      </if>
	      <if test="example.courseOnline != null" >
	        and c.COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
	      </if>
	      <if test="example.isExcellentCourse != null" >
	        and c.IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR}
	      </if>
	      <if test="example.pccn !=null">
	      	and c.pccn = #{example.pccn,jdbcType=VARCHAR}
	      </if>
	       <if test="example.h5en !=null">
	      	and c.h5en = #{example.h5en,jdbcType=VARCHAR}
	      </if>
	       <if test="example.pcen !=null">
	      	and c.pcen = #{example.pcen,jdbcType=VARCHAR}
	      </if>
	       <if test="example.h5cn !=null">
	      	and c.h5cn = #{example.h5cn,jdbcType=VARCHAR}
	      </if>
	      <if test="listOrder!=null">
	      	 order by isnull(c.${listOrder})-1, c.${listOrder} 
	      </if>
	      <if test="orderBy!=null">
	      	${orderBy} <!-- nulls last -->
	      </if>
	     limit<![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
  <select id="selectByLecturerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TOM_COURSES
    where INSTR(LECTURERS,#{lecturerId,jdbcType=DECIMAL})>0
  </select>
 <!-- 查询课程信息 -->
  <select id="findCourses" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />    
    from TOM_COURSES
  </select>
  <!-- 收藏课程 -->	
  <insert id="insertFavorite" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
  	insert into TOM_FAVORITE_COURSE (CODE,COURSE_ID,STATUS,CREATE_TIME)
    values (#{code,jdbcType=VARCHAR},#{courseId,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 更新收藏 -->
  <update id="updateByCourseIdandCode" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
    update TOM_FAVORITE_COURSE
    <set >
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
    and CODE = #{code,jdbcType=VARCHAR} 
  </update>
  
  <!-- 根据员工代码和课程id查询收藏课程 -->
  <select id="selectByCourseIdAndCode" resultMap="FavoriteResultMap" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
    select 
    CODE,COURSE_ID,CREATE_TIME,STATUS
    from TOM_FAVORITE_COURSE
    where COURSE_ID = #{courseId,jdbcType=DECIMAL} 
    and CODE = #{code,jdbcType=VARCHAR} 
  </select>
  <!-- ThumbUpResultMap -->
  <!-- 课程点赞 -->	
  <insert id="insertThumbUp" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
  	insert into TOM_COURSE_THUMB_UP (CODE,COURSE_ID,STATUS,CREATE_TIME)
    values (#{code,jdbcType=VARCHAR},#{courseId,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 更新点赞状态 -->
  <update id="updateThumbUpByCourseIdandCode" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
    update TOM_COURSE_THUMB_UP
    <set >
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
    and CODE = #{code,jdbcType=VARCHAR} 
  </update>
  <!-- 查询是否已经点过赞 -->
  <select id="countThumbUpByCourseIdAndCode" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" resultType="java.lang.Integer">
   select count(*) from TOM_COURSE_THUMB_UP where 1=1
     <if test="courseId != null" >
        and COURSE_ID = #{courseId,jdbcType=DECIMAL}
      </if>
      <if test="code != null" >
        and CODE = #{code,jdbcType=VARCHAR} 
      </if>
      <if test="status != null" >
         and STATUS = #{status,jdbcType=VARCHAR}
      </if>
  </select>
  <!-- 根据员工代码和课程id查询点赞的关联信息-->
  <select id="selectThumbUpByCourseIdAndCode" resultMap="ThumbUpResultMap" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
    select 
    CODE,COURSE_ID,CREATE_TIME,STATUS
    from TOM_COURSE_THUMB_UP
    where COURSE_ID = #{courseId,jdbcType=DECIMAL} 
    and CODE = #{code,jdbcType=VARCHAR} 
  </select>
  <!-- 查询课程学习记录前三条 -->
  <select id="selectCourseLearningNO3" resultMap="CourseLearningResultMap" parameterType="com.chinamobo.ue.course.entity.TomCourseLearningRecord">
     SELECT L.*
    from (
     select COURSE_ID,CODE,LEARNING_DATE from TOM_COURSE_LEARNING_RECORD order by LEARNING_DATE desc )L
     <![CDATA[
    limit 0,3]]>
  </select>
  
  <!-- 根据任务包查询课程 -->
  <select id="selectByPackageId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
  tc.e_currency , tc.course_id
    from tom_task_package ttp join tom_task_courses_relation cr on ttp.package_id = cr.package_id
    left join tom_courses  tc on cr.course_id = tc.course_id  left join tom_course_emp_relation tcer on tcer.course_id =  tc.course_id  where tcer.finish_status = 'Y'
    and    ttp.package_id = #{packageId}

  
  </select>
  <select id="selectByPackageIdTwo" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select tc.e_currency , tc.course_id from tom_courses tc,tom_task_package ttp,tom_task_courses_relation cr  where ttp.package_id = cr.package_id  and 
     cr.course_id=tc.course_id and ttp.package_id= #{packageId}
  </select>
  <!-- 查询全部公开课 -->
  <select id="selectOpen" resultMap="BaseResultMap" >
  	select * from TOM_COURSES where open_course ='Y' and STATUS = 'Y'
  </select>
  <select id="countTaskCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) from (
   SELECT DISTINCT c.* ,e.ACTIVITY_ID from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.course_id=c.course_id and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y'  and a.APPLY_STATUS='Y'
and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y' AND e.END_TIME<![CDATA[>NOW()]]>) or (d.COURSE_ID not in (select COURSE_ID from tom_offline_sign 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
	<if test="pccn !=null">
      	and c.pccn = #{pccn,jdbcType=VARCHAR}
      </if>
       <if test="h5en !=null">
      	and c.h5en = #{h5en,jdbcType=VARCHAR}
      </if>
       <if test="pcen !=null">
      	and c.pcen = #{pcen,jdbcType=VARCHAR}
      </if>
       <if test="h5cn !=null">
      	and c.h5cn = #{h5cn,jdbcType=VARCHAR}
      </if>
	) as a
  </select>
  <select id="selectTaskCourse" resultMap="TaskResultMap" parameterType="map" >
   SELECT DISTINCT c.*,e.ACTIVITY_ID as activityId,t.ACTIVITY_NAME as activityName,e.START_TIME,e.END_TIME from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY t,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.course_id=c.course_id and e.ACTIVITY_ID=t.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID  and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
	and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y' AND e.END_TIME<![CDATA[>NOW()]]>) or (d.COURSE_ID not in (select COURSE_ID from tom_offline_sign 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
	<if test="pccn !=null">
      	and c.pccn = #{pccn,jdbcType=VARCHAR}
      </if>
       <if test="h5en !=null">
      	and c.h5en = #{h5en,jdbcType=VARCHAR}
      </if>
       <if test="pcen !=null">
      	and c.pcen = #{pcen,jdbcType=VARCHAR}
      </if>
       <if test="h5cn !=null">
      	and c.h5cn = #{h5cn,jdbcType=VARCHAR}
      </if>
     order by isnull(c.CREATE_TIME)-1, c.CREATE_TIME desc <!-- nulls last  -->
    limit <![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countFinishedCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) FROM TOM_COURSES c LEFT JOIN TOM_COURSE_LEARNING_RECORD a ON c.course_id=a.course_id
	LEFT JOIN TOM_COURSE_SIGN_IN_RECORDS s ON s.course_id=c.course_id
	WHERE c.STATUS = 'Y' AND (a.code =#{code,jdbcType=VARCHAR} OR s.code=#{code,jdbcType=VARCHAR})
  </select>
  <select id="countUnfinishedCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) from (
   SELECT DISTINCT c.* ,e.ACTIVITY_ID,t.ACTIVITY_NAME as activityName from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_ACTIVITY t,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and e.ACTIVITY_ID=t.ACTIVITY_ID and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))) as b
  </select>
  <!-- 查询是否收藏课程 -->
  <select id="countByCourseIdAndCode" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" resultType="java.lang.Integer">
   select count(c.course_id) from TOM_COURSES c,TOM_FAVORITE_COURSE a where c.course_id = a.course_id and c.status='Y'
     <if test="courseId != null" >
        and a.COURSE_ID = #{courseId,jdbcType=DECIMAL}
      </if>
      <if test="code != null" >
        and a.CODE = #{code,jdbcType=VARCHAR} 
      </if>
      <if test="status != null" >
        and a.STATUS = #{status,jdbcType=VARCHAR} 
      </if>
  </select>
  
  <select id="selectFinishedCourse" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   
	<!-- SELECT c.*,decode(c.COURSE_ONLINE, 'Y',a.LEARNING_DATE,s.CREATE_DATE) sorttime -->  
	
	
	SELECT c.*,if(c.COURSE_ONLINE='Y',a.LEARNING_DATE,s.CREATE_DATE) sorttime
	FROM TOM_COURSES c LEFT JOIN TOM_COURSE_LEARNING_RECORD a ON c.course_id=a.course_id
	LEFT JOIN TOM_COURSE_SIGN_IN_RECORDS s ON s.course_id=c.course_id
	WHERE c.STATUS = 'Y' AND(a.code =#{code,jdbcType=VARCHAR} OR s.code=#{code,jdbcType=VARCHAR})
	order by isnull(sorttime)-1, sorttime desc <!-- nulls last -->
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="selectUnfinishedCourse" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  SELECT DISTINCT c.*,e.ACTIVITY_ID as activityId, t.ACTIVITY_NAME as activityName
  from TOM_COURSES c ,
  TOM_ACTIVITY_EMPS_RELATION a,
  TOM_TASK_COURSES_RELATION d,
  TOM_ACTIVITY_PROPERTY e,
  TOM_ACTIVITY t
	where c.course_id = d.course_id 
	and a.code =#{code,jdbcType=VARCHAR} 
	and e.ACTIVITY_ID=a.ACTIVITY_ID 
	and e.PACKAGE_ID=d.PACKAGE_ID 
	and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
	and e.ACTIVITY_ID=t.ACTIVITY_ID
	and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
     order by isnull(c.CREATE_TIME)-1, c.CREATE_TIME desc <!-- nulls last -->
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
    <!-- 根据员工代码查询收藏课程 -->
 <select id="selectByCode" resultMap="BaseResultMap" parameterType="map" >
  SELECT c.* FROM TOM_FAVORITE_COURSE e ,TOM_COURSES c 
	where e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y' and  c.course_id = e.course_id  and c.status='Y'
	order by isnull(e.CREATE_TIME)-1, e.CREATE_TIME desc <!-- nulls last -->
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
  
  <select id="countByExampleForRooling" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where 1=1 and course_online='Y' and status='Y'
    <if test="status != null" >
        and STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" >
        and INSTR(COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
      </if>
      <if test="courseNameEn != null" >
        and INSTR(COURSE_NAME_EN,#{courseNameEn,jdbcType=VARCHAR})>0 
      </if>
      <if test="courseType != null" >
        and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="courseOnline != null" >
        and COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR} 
      </if>
        <if test="lecturers != null" >
        and INSTR(LECTURERS,#{lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
         and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
  </select>
  
  <select id="selectListByPageForRooling" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />    
   FROM TOM_COURSES where 1=1 and course_online='Y' and status='Y'
    <if test="example.status != null" >
        and STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" >
        and INSTR(COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0 
      </if>
      <if test="example.courseNameEn != null" >
        and INSTR(COURSE_NAME_EN,#{example.courseNameEn,jdbcType=VARCHAR})>0 
      </if>
      <if test="example.courseType != null" >
        and INSTR(COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR} 
      </if>
      <if test="example.lecturers != null" >
        and INSTR(LECTURERS,#{example.lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="listOrder!=null">
      	 order by isnull(${listOrder})-1, ${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} <!-- nulls last -->
      </if>
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countTotalCourses" parameterType="map" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where CREATE_TIME BETWEEN #{beginTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}
  </select>
  <select id="offlineList"  resultMap="BaseResultMap" parameterType="map" >
  	select * from tom_courses tc left join tom_course_emp_relation er on er.course_id=tc.course_id  where tc.course_online='N'
  	<if test="code !=null">
  		and er.code='M00001'
  	</if>
  	limit<![CDATA[ #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
  <select id="selectempCourseListByPage" resultMap="empCourseResultMap" parameterType="map" >
	  select distinct c.course_id  COURSE_ID,e.code CODE,c.course_name COURSE_NAME,c.course_online COURSE_ONLINE ,c.course_type COURSE_TYPE,e.finish_time FINISH_TIME,e.finish_status FINISH_STATUS,f.status STATUS,t.status THUMB_STATUS,cc.course_comment_content COMMENT,
		    (select  avg(score) from tom_grade_records g where g.code=e.code and g.course_id = c.course_id and g.grade_type='C') COURSE_GRADE,
		    (select count(b.course_section_id) from  tom_section_learning_record b where b.course_section_id=s.section_id and b.code =e.code ) FINISH_STATION,
		    (select count(*) from tom_course_section  where course_id= c.course_id) SUM_STATION,
		    (select count(h.code) from tom_course_learning_record h  where   h.course_id = c.course_id and h.code = e.code ) STUDY_COUNT,
		    (select sum(k.time) from tom_learntime_log k where k.CODE= e.code and k.course_id =  c.course_id) IN_LINETIME
	  from tom_courses c 
		join tom_course_emp_relation e on c.course_id=e.course_id 
		left join tom_course_section s on s.course_id = c.course_id
		left join tom_course_classify_relation r on r.course_id = c.course_id
		left join tom_course_comment cc on cc.course_id=e.course_id  and cc.code = e.code
		left join tom_favorite_course f on f.code = e.code and f.course_id = c.course_id
		left join tom_course_thumb_up t on t.code = e.code and t.course_id = c.course_id
		left join tom_course_learning_record  lr on lr.code= e.code and lr.course_id = c.course_id
	  where e.code = #{code,jdbcType=VARCHAR} 
	  
	  limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countempCourseListByPage" resultType="int" parameterType="map" >
	  select COUNT(distinct c.course_id )
		  from tom_courses c 
			join tom_course_emp_relation e on c.course_id=e.course_id 
			left join tom_course_section s on s.course_id = c.course_id
			left join tom_course_classify_relation r on r.course_id = c.course_id
			left join tom_course_comment cc on cc.course_id=e.course_id  and cc.code = e.code
			left join tom_favorite_course f on f.code = e.code and f.course_id = c.course_id
			left join tom_course_thumb_up t on t.code = e.code and t.course_id = c.course_id
			left join tom_course_learning_record  lr on lr.code= e.code and lr.course_id = c.course_id
		  where e.code = #{code,jdbcType=VARCHAR} 
  </select>
  <select id="selectempCourseProtice" resultMap="protiesCourseResultMap" parameterType="map" >
  	select p.start_time START_TIME,p.end_time END_TIME, c.course_id COURSE_ID,er.is_required IS_REQUIRED  from tom_courses c 
  	join tom_activity_property p on p.course_id = c.course_id
	join tom_activity_emps_relation er on er.activity_id = p.activity_id  and 
	er.code = #{code,jdbcType=VARCHAR} and p.course_id =#{course_id,jdbcType=VARCHAR} order by p.start_time
  </select>
  <select id="selectCourseDateProperty" resultMap="protiesCourseResultMap" parameterType="map" >
  	select p.start_time START_TIME,p.end_time END_TIME, c.course_id COURSE_ID,er.is_required IS_REQUIRED  from tom_courses c 
  	join tom_activity_property p on p.course_id = c.course_id
	join tom_activity_emps_relation er on er.activity_id = p.activity_id  and 
    p.course_id =#{course_id,jdbcType=VARCHAR} order by p.start_time
  </select>
  <!-- 查询应该学习人员详情 -->
  <select id="selectCourseNeedStatistics" resultMap="selectCourseNeedMap" parameterType="map">
    select distinct 
    e.name,e.code,e.deptname,e.jobname,e.secret_email,e.mobile,ifnull(tc.status,'N') as statusf,ifnull(tt.status,'N') as statust
    from tom_activity_emps_relation ar 
    left join tom_activity_property t on t.activity_id = ar.activity_id 
    left join tom_emp e on ar.code= e.code
    left join tom_course_thumb_up tt on tt.course_id = t.course_id and e.code= tt.code
    left join tom_favorite_course tc on tc.course_id = t.course_id and e.code= tc.code
    where t.course_id=#{courseId,jdbcType=DECIMAL} 
    limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseNeedStatistics" resultType="int" parameterType="map">
    SELECT  count(distinct e.name) from tom_emp e join 
    tom_activity_emps_relation ar on e.code = ar.code join 
    tom_activity_property t on t.activity_id = ar.activity_id and t.course_id = #{courseId,jdbcType=DECIMAL}
  </select>
  <!-- 查询点赞人员详情 -->
  <select id="selectCourseThumbUpStatistics" resultMap="selectCourseNeedMap" parameterType="map">
    select distinct e.name,e.code,e.deptname,e.jobname,e.secret_email,e.mobile, tt.status,tt.create_time from tom_emp e join 
    tom_course_thumb_up tt on e.code = tt.code and tt.status='Y' and tt.course_id=#{courseId,jdbcType=DECIMAL}
    limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseThumbUpStatistics" resultType="int" parameterType="map">
    select count(distinct e.name) from tom_emp e join tom_course_thumb_up tt on e.code = tt.code and tt.status='Y' and tt.course_id=#{courseId,jdbcType=DECIMAL}
  </select>
  <!-- 查询收藏人员详情 -->
  <select id="selectFavouriteCourseStatistics" resultMap="selectCourseNeedMap" parameterType="map">
    select distinct e.name,e.code,e.deptname,e.jobname,e.secret_email,e.mobile,tc.create_time, tc.status from tom_emp e join tom_favorite_course tc on e.code = tc.code 
    and tc.status='Y' and tc.course_id=#{courseId,jdbcType=DECIMAL}
    limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countFavouriteCourseStatistics" resultType="int" parameterType="map">
    select count(distinct e.name) from tom_emp e join tom_favorite_course tc on e.code = tc.code and tc.status='Y' and tc.course_id=#{courseId,jdbcType=DECIMAL}
  </select>
  <!-- 查询评论内容 -->
  <select id="selectCourseComment" resultMap="selectCourseNeedMap" parameterType="map">
    select e.name,e.code,e.deptname,e.jobname,e.secret_email,e.mobile,tc.course_comment_content,tc.create_time from tom_emp e, tom_course_comment tc 
    where e.code = tc.code and course_id =#{courseId,jdbcType=DECIMAL}
    limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseComment" resultType="int" parameterType="map">
    select count(course_comment_content) from tom_course_comment where course_id =#{courseId,jdbcType=DECIMAL}
  </select>
  <!-- 查询评分 -->
  <select id="selectCourseScore" resultMap="selectCourseNeedMap" parameterType="map">
    select distinct a.scorec,b.scorel,a.create_time,  e.code,e.name,e.deptname,e.jobname,e.secret_email,e.mobile from tom_emp e join
   (select tr.code,tr.course_id ,tr.create_time, tr.score as scorec from tom_grade_records tr where tr.grade_type='C')as a on a.code = e.code join
   (select tgr.code, tgr.score as scorel,tgr.course_id from tom_grade_records tgr where tgr.grade_type='L')as b on b.code = e.code 
   and a.course_id = b.course_id 
   and b.course_id=#{courseId,jdbcType=DECIMAL}
   limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseScore" resultType="int" parameterType="map">
    select count(distinct e.code) from tom_emp e join
   (select tr.code,tr.course_id , tr.score as scorec from tom_grade_records tr where tr.grade_type='C')as a on a.code = e.code join
   (select tgr.code, tgr.score as scorel,tgr.course_id from tom_grade_records tgr where tgr.grade_type='L')as b on b.code = e.code 
   and a.course_id = b.course_id 
   and b.course_id=#{courseId,jdbcType=DECIMAL}
  </select>
  <!-- 查询开始学习人员名单 -->
  <select id="selectStartLearnSection" resultMap="selectCourseNeedMap" parameterType="map">
    select distinct e.code,e.name,e.deptname,e.jobname,e.secret_email,e.mobile from tom_emp e,tom_section_learning_record tr,tom_course_section tc
    where tr.course_section_id in (select tc.section_id from tom_course_section where tc.course_id=#{courseId,jdbcType=DECIMAL})
    and e.code = tr.code and tr.learning_states = 'Y' and e.code not in (select code from tom_course_learning_record where COURSE_ID = #{courseId,jdbcType=DECIMAL}) 
    order by e.name
    limit <![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countStartLearnSection" resultType="int" parameterType="map">
    select count(distinct e.code,e.name<!-- ,tc.section_name -->) from tom_emp e,tom_section_learning_record tr,tom_course_section tc
    where tr.course_section_id in (select tc.section_id from tom_course_section where tc.course_id=#{courseId,jdbcType=DECIMAL})
    and e.code = tr.code and tr.learning_states = 'Y' and e.code not in (select code from tom_course_learning_record where COURSE_ID = #{courseId,jdbcType=DECIMAL})
  </select>
  <select id="selectSignCourseSection" parameterType="map" resultType="com.chinamobo.ue.course.entity.TomCourseLearningRecord">
  	select os.course_id courseId ,os.sign_time  learningDate ,e.name name e.code from  tom_offline_sign os
		left join tom_emp e on e.code = os.code
	where os.course_id=#{courseId,jdbcType=DECIMAL}
	limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
  <select id="countSignCourseSection" parameterType="map" resultType="int">
  	select count(os.course_id) from  tom_offline_sign os
		left join tom_emp e on e.code = os.code
	where os.course_id=#{courseId,jdbcType=DECIMAL}
  </select>
  <select id="selectOfflineCourse" parameterType="map" resultType="com.chinamobo.ue.statistics.entity.TomOpenCourseStatistic" >
	select count(e.code) openComment, m.COURSE_ID courseId, 
	  m.COURSE_NUMBER courseNumber, m.COURSE_NAME courseName,m.COURSE_TYPE courseType, 
	  m.sdd commentCount,m.open_comment isRequired
	from 
		(select count(os.course_id)sdd,c.* from TOM_COURSES c left join tom_offline_sign os
		on c.course_id = os.course_id 
		where c.COURSE_ONLINE= #{example.courseOnline,jdbcType=VARCHAR}
		
		<if test="example.courseName != null" >
        	and INSTR(COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0 
      	</if>
      	<if test="example.courseNameEn != null" >
        	and INSTR(COURSE_NAME_EN,#{example.courseNameEn,jdbcType=VARCHAR})>0 
      	</if>
		group by c.course_id)m 
		left join tom_course_emp_relation e on e.course_id = m.course_id AND e.status='Y'
		group by m.course_id	
		limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="selectCourseCanleranStatistics" parameterType="map" resultType="com.chinamobo.ue.course.dto.TomNeedLearnDto" >
  	select distinct 
	    e.name,e.code,e.deptname,e.jobname,e.secret_email secretEmail,e.mobile mobile
	    from tom_courses ar 
	    left join tom_course_emp_relation t on t.course_id = ar.course_id
	    join tom_emp e on t.code= e.code
	where t.course_id= #{courseId,jdbcType=DECIMAL} and t.status='Y'
	
	limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseCanlearnStatistics" parameterType="map" resultType="int">
  	select  count(distinct e.code)
	    from tom_courses ar 
	    left join tom_course_emp_relation t on t.course_id = ar.course_id
	    left join tom_emp e on t.code= e.code
	where t.course_id= #{courseId,jdbcType=DECIMAL}
  </select>
  <select id="selectCourseSignStatistics" parameterType="map" resultType="com.chinamobo.ue.course.dto.TomNeedLearnDto" >
  		select e.name,e.code,e.deptname,e.jobname,e.secret_email secretEmail,e.mobile mobile,os.sign_time signTime,cc.classes_name classesName from tom_offline_sign os
		left join tom_emp e on os.code= e.code left join tom_course_classes cc on os.course_id = cc.course_id and os.classes_id=cc.classes where os.course_id= #{courseId,jdbcType=DECIMAL} 
		<if test="topDept !=null">
			and e.DEPTTOPCODE=#{topDept,jdbcType=VARCHAR}
		</if>
		limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countCourseSignStatistics" parameterType="map" resultType="int">
  		select count(e.code) from tom_offline_sign os
		left join tom_emp e on os.code= e.code where os.course_id= #{courseId,jdbcType=DECIMAL} 
		<if test="topDept !=null">
			and e.DEPTTOPCODE=#{topDept,jdbcType=VARCHAR}
		</if>
  </select>
</mapper>

