<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.reportforms.dao.ReportMapper" >
  <resultMap id="s1result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
		<result column="allactivity" property="allactivity" jdbcType="DECIMAL" />
		<result column="allcourse" property="allcourse" jdbcType="DECIMAL" />
		<result column="finishCourse" property="finishCourse" jdbcType="DECIMAL" />
		<result column="avgfinCourserate" property="avgfinCourserate" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="a1result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="empall" property="empall" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="a2result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="logincount" property="logincount" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="a3result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="learnAlltime" property="learnAlltime" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="a4result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="h5logincount" property="h5logincount" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="a5result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="allEb" property="allEb" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="a6result" type="com.chinamobo.ue.reportforms.dto.PingtaideptDto">
  		<result column="finishActivity" property="finishActivity" jdbcType="DECIMAL" />
  		<result column="avgActivefinrate" property="avgActivefinrate" jdbcType="DECIMAL" />
  </resultMap>
  <select id="countAllemp" parameterType="map" resultType="int">
  	select count(distinct code) empall from tom_user_info
  	where 1=1 
  </select>
  <select id="selectlogincount" parameterType="map" resultType="int">
  	select count(distinct code) logincount from tom_active_user where 1=1 
  	<if test="startTime!= null">
		and CREATE_DATE >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and CREATE_DATE <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  <select id="selectloginemp" parameterType="map" resultType="com.chinamobo.ue.system.entity.TomUserLog">
  	select distinct code  from tom_active_user where 1=1 
  	<if test="startTime!= null and startTime!=''">
		and CREATE_DATE >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null and endTime!=''">
		<![CDATA[and CREATE_DATE <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  <select id="sumlearntimebydate" parameterType="map" resultType="java.lang.Long">
  	select sum(time) learnAlltime  from tom_learntime_log where 1=1
  	<if test="startTime!= null and '' != startTime">
		and CREATE_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null and '' != endTime">
		<![CDATA[and CREATE_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  <select id="sumlogineb" parameterType="map" resultType="int">
  	select sum(EXCHANGE_NUMBER) allEb from tom_eb_record where 1=1
  	<if test="startTime!= null">
		and UPDATE_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and UPDATE_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
		and code  in
	 <foreach collection="Ids" item="item" index="index"  open="(" separator="," close=")">
		 #{item}
	</foreach>
  </select>
  <select id="countActivebytime" parameterType="map" resultType="int">
  	select count(activity_id) from  tom_activity where 1=1
  	<if test="startTime!= null">
		and ACTIVITY_START_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and ACTIVITY_START_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  <select id="selectActivebytime" parameterType="map" resultType="com.chinamobo.ue.activity.entity.TomActivity">
  	select activity_id activityId from  tom_activity where 1=1
  	<if test="startTime!= null">
		and ACTIVITY_START_TIME >= #{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and ACTIVITY_START_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
  <select id="selectcourseByactiveId" parameterType="map" resultType="com.chinamobo.ue.course.entity.TomCourses">
  	select p.course_id courseId,p.exam_id countApply from tom_activity a 
		left join tom_activity_property  p on p.activity_id=a.activity_id 
	where  1=1
  	<if test="activityId!= null">
		and a.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="courseId!= null">
		and p.course_id!=''
	</if>
	<if test="examId!= null">
		and p.exam_id!=''
	</if>
  </select>
  <select id="selectCoursefinish" parameterType="map" resultType="com.chinamobo.ue.course.entity.TomCourseEmpRelation">
	  select ar.code code,lr.course_id courseId,lr.FINISH_STATUS finishStatus from tom_activity_emps_relation ar 
		left join  tom_course_emp_relation lr on lr.code=ar.code  and ar.status='Y'
		<if test="courseId!= null">
			and lr.course_id = #{courseId,jdbcType=VARCHAR}
		</if>
	  where 1=1
	<if test="activityId!= null">
		and ar.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	
  </select>
  <select id="selectExamfinish" parameterType="map" resultType="com.chinamobo.ue.exam.entity.TomExamScore">
  	select es.exam_id examId,es.grade_state gradeState,es.code code from tom_activity_emps_relation ar <!-- //ar.* -->
		join tom_exam_score es on ar.code=es.code
	where  1=1<!-- es.grade_state='Y' -->
	<if test="activityId!= null">
		and ar.ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</if>
	<if test="examId!= null">
		and es.exam_id = #{examId,jdbcType=VARCHAR}
	</if>
  </select>
  <select id="counth5loginemp" parameterType="map" resultType="int">
  	select count(code) from tom_login_record 
	where 1=1
	<if test="driver!= null">
		and driver=#{driver,jdbcType=VARCHAR}
	</if>
	<if test="startTime!= null">
		and login_date >=#{startTime,jdbcType=VARCHAR}
	</if>
	<if test="endTime!= null">
		<![CDATA[and login_date <=#{endTime,jdbcType=VARCHAR}]]> 
	</if>
  </select>
 <!--  <select id="selectEmpResource" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT 
  		a.code userId,a.name userName, a.orgname orgName, a.orgcode orgId,a.ONEDEPTCODE,a.ONEDEPTNAME onedept, two.`NAME` twodept,
	three.`NAME` threedept, a.deptcode, a.jobname job , a.secret_email empEmail, 
	  	count(e.code)sumResnum, count(c.course_id) onlineResnum,( count(e.code)-count(c.course_id)) offlineResnum,
		(SELECT count(*)  FROM tom_exam_emp_allocation s WHERE s.CODE = a.code) onlineExamnum,
		(select count(eel.code) from tom_exam e
			join  tom_exam_emp_allocation eel  on eel.exam_id = e.exam_id
	 		join tom_exam_score es on es.code = eel.code and es.exam_id = e.exam_id
			where eel.code=a.code AND e.OFFLINE_EXAM='1'and es.grade_state='y'
		) shouldeb,
		ui.LEARNING_TIME/60 onlinelearnAlltime,ui.E_NUMBER ebNumber,
		ro.ROLE_NAME rolename
 	from  tom_emp a
 		left join tom_dept as two on	two.`CODE` = getDeptCode (`a`.`DEPTCODE`,`a`.`DEPTTOPCODE`,`a`.`ONEDEPTCODE`,2) 
		left join tom_dept as three on  three.`CODE` = getDeptCode (`a`.`DEPTCODE`,`a`.`DEPTTOPCODE`,`a`.`ONEDEPTCODE`,3)
		left join tom_course_emp_relation e  on a.code = e.code
		left join tom_courses c on c.course_id = e.course_id and c.course_online='Y'
		left join tom_learntime_log l on l.code= a.code and l.course_id= e.course_id
		left join tom_user_info ui on ui.code= a.code 
		LEFT JOIN tom_admin ta on  ta.`CODE` = a.`CODE`
		LEFT JOIN tom_admin_roles ar on ar.ADMIN_ID = ta.ADMIN_ID
		LEFT JOIN tom_role ro on ro.ROLE_ID = ar.ROLE_ID 
	where 1=1 and e.status='Y'  
	<if test="paramter.startTime!= null and ''!=paramter.startTime">
		and e.CREATE_TIME >=#{paramter.startTime,jdbcType=VARCHAR}
	</if>
	<if test="paramter.endTime!= null and ''!=paramter.endTime">
		<![CDATA[and e.CREATE_TIME <=#{paramter.endTime,jdbcType=VARCHAR}]]> 
	</if>
	<if test="paramter.onedeptId!= null  and ''!=paramter.onedeptId">
		and a.ONEDEPTCODE =#{paramter.onedeptId,jdbcType=VARCHAR}  
	</if>
	<if test="paramter.deptId!= null and ''!=paramter.deptId">
		and two.`CODE` =#{paramter.deptId,jdbcType=VARCHAR}  
	</if>
	<if test="paramter.thirdcode!= null and ''!=paramter.thirdcode">
		and three.`CODE` =#{paramter.thirdcode,jdbcType=VARCHAR}  
	</if>
	<if test="paramter.userName!= null and ''!=paramter.userName">
		and a.NAME =#{paramter.userName,jdbcType=VARCHAR} 
	</if>
	group by a.code  order by a.code asc
	
	limit<![CDATA[ #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select> -->
  <select id="selectempCourseDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT 
	COUNT(DISTINCT M.courseId) coursenumd,
	COUNT( IF(M.openCourseStatus='Y',TRUE,NULL) )openCoursenumd,
	COUNT(IF (M.`STATUS`='Y',TRUE,NULL)) applyCoursenumd,
	COUNT(DISTINCT M.courseId)- COUNT(IF (M.`STATUS`='Y',TRUE,NULL)) unappCoursenumd,
	COUNT(IF (M.threedept IS NOT NULL, TRUE,NULL)) signCoursenumd,
	COUNT(DISTINCT M.courseId)- COUNT(IF (M.threedept IS NOT NULL, TRUE,NULL)) unsignCoursenumd,
	COUNT(IF (M.`STATUS`='Y',TRUE,NULL))/COUNT(DISTINCT M.courseId) avgaApprated,
	COUNT(IF (M.threedept IS NOT NULL, TRUE,NULL))/COUNT(DISTINCT M.courseId)avetSignrated,
	SUM(M.shouldeb) needEbd
	from 
	(
	  	SELECT 
			S.COURSE_ID courseId,S.OPEN_COURSE openCourseStatus,L.CODE userId,sum(L.TIME) time,LR.LEARNING_DATE timestatep,S.shouldeb,S.status,S.sign_time threedept
		FROM 
			(select  DISTINCT  ap.course_id,c.open_course, ae.code,c.e_currency shouldeb ,ca.status,sig.sign_time 
			from tom_activity_emps_relation ae 
			left join tom_activity_property ap on ae.activity_id = ap.activity_id
			left join  tom_courses c on ap.course_id = c.course_id  
			left join tom_activity ac on ap.activity_id = ac.activity_id
			
			left join tom_course_apply ca on ca.code = ae.code and ca.course_id = ap.course_id
			left join tom_offline_sign sig on sig.code = ae.code and sig.course_id=ap.course_id
			where 1=1
			<if test="userId!= null">
				AND ae.code = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="courseId!= null">
				AND ap.course_id is not null
			</if>
			<if test="status!= null">
				AND ae.status = #{status,jdbcType=VARCHAR} 
			</if>
			<if test="needApply!= null">
				AND ac.need_apply = #{needApply,jdbcType=VARCHAR} 
			</if>
			<if test="courseOnline!= null">
				AND c.course_online = #{courseOnline,jdbcType=VARCHAR} 
			</if>
			) S
		LEFT JOIN  tom_learntime_log L ON S.COURSE_ID = L.COURSE_ID and S.CODE= L.CODE
		LEFT JOIN tom_course_learning_record LR ON S.COURSE_ID = LR.COURSE_ID and S.CODE= LR.CODE
	  	group by S.COURSE_ID
  	)M
  </select>
  <select id="countEmpResource" parameterType="map" resultType="int">
  		select count(M.CODE) from (SELECT a.code
		 	from  tom_emp a
		LEFT JOIN (SELECT e.code ,e.`NAME`, e.DEPTCODE,e.deptName,e.DEPTTOPCODE,e.deptTopname,e.ONEDEPTCODE ,e.oneDeptname from tom_emp e 
 			where e.DEPTTOPCODE is not null  and e.DEPTTOPCODE = e.ONEDEPTCODE and e.DEPTCODE != e.ONEDEPTCODE ) two  on two.code = a.code
	 	LEFT JOIN (SELECT e.code ,e.`NAME`, e.DEPTCODE,e.deptName,e.DEPTTOPCODE,e.deptTopname,e.ONEDEPTCODE ,e.oneDeptname from tom_emp e 
	        where e.DEPTTOPCODE is not null  and e.DEPTTOPCODE != e.ONEDEPTCODE and e.DEPTCODE!= e.ONEDEPTCODE ) three on three.`code`=a.`CODE`
		LEFT JOIN tom_course_emp_relation e on e.`CODE` = a.`CODE` 	
		where 1=1 and e.status='Y'  	
		<if test="paramter.startTime!= null and ''!=paramter.startTime">
			and e.CREATE_TIME >=#{paramter.startTime,jdbcType=VARCHAR}
		</if>
		<if test="paramter.endTime!= null and ''!=paramter.endTime">
			<![CDATA[and e.CREATE_TIME <=#{paramter.endTime,jdbcType=VARCHAR}]]> 
		</if>
		<if test="paramter.onedeptId!= null  and ''!=paramter.onedeptId">
			and a.ONEDEPTCODE =#{paramter.onedeptId,jdbcType=VARCHAR}  
		</if>
		<if test="paramter.deptId!= null and ''!=paramter.deptId">
			and (two.`DEPTCODE` =#{paramter.deptId,jdbcType=VARCHAR}  or three.DEPTTOPCODE = #{paramter.deptId,jdbcType=VARCHAR} )
		</if>
		<if test="paramter.thirdcode!= null and ''!=paramter.thirdcode">
			and three.`DEPTCODE` =#{paramter.thirdcode,jdbcType=VARCHAR}  
		</if>
		
		<if test="paramter.userName!= null and ''!=paramter.userName">
			<!-- and a.NAME like TRIM('%'#{paramter.userName,jdbcType=VARCHAR})'%' -->
			and INSTR(a.NAME,#{paramter.userName,jdbcType=VARCHAR})>0
		</if>
		group by a.code  order by a.code asc)M
	
  </select>
  
  <select id="selectempExamDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT 
		COUNT(DISTINCT M.exam_id) needExamnuma,
		COUNT(IF( M.gradeState='Y', TRUE, NULL)) finExamnuma,
		COUNT(DISTINCT M.exam_id) - COUNT( IF(M.gradeState='Y', TRUE, NULL)) unfinExamnuma,
		COUNT(IF( M.gradeState='Y', TRUE, NULL))/COUNT(DISTINCT M.exam_id) numbers,
		SUM(M.SHOULDEB)needEbb
	FROM
	(SELECT 
		S.exam_id ,L.CODE,l.grade_state gradeState,ep.pass_eb shouldeb
	FROM 
	(select  DISTINCT  ap.exam_id,ae.code from tom_activity_emps_relation ae 
	left join tom_activity_property ap on ae.activity_id = ap.activity_id
	left join tom_activity ac on ap.activity_id = ac.activity_id
	where 1=1
	<if test="userId!= null">
	 	and ae.code= #{userId,jdbcType=VARCHAR}
	</if>
	<if test="examId!= null">
		and ap.exam_id IS NOT NULL
	</if>
	<if test="status!= null">
		AND ae.status = #{status,jdbcType=VARCHAR}
	</if>
	<if test="needApply!= null">
		AND ac.need_apply=	#{needApply,jdbcType=VARCHAR}
	</if>
	) S
	LEFT JOIN  tom_exam_score L ON S.exam_id = L.exam_id and S.CODE= L.CODE
	left join tom_exam ex on s.exam_id = ex.exam_id
	left join tom_exam_paper ep on ex.exam_paper_id = ep.exam_paper_id
	<if test="gradeState!= null">
	 	AND L.GRADE_STATE= #{gradeState,jdbcType=VARCHAR}
	</if>
	)M
  </select>
  <select id="selectempOutExamDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT
		COUNT(DISTINCT M.exam_id) needExamnuma,
		COUNT(
	
			IF (M.gradeState = 'Y', TRUE, NULL)
		) finExamnuma,
		COUNT(DISTINCT M.exam_id) - COUNT(
	
			IF (M.gradeState = 'Y', TRUE, NULL)
		) unfinExamnuma,
		COUNT(
	
			IF (M.gradeState = 'Y', TRUE, NULL)
		) / COUNT(DISTINCT M.exam_id) numbers,
		SUM(M.SHOULDEB) needEbb
	FROM
	(
		SELECT
			e.exam_id,
			L. CODE,
			l.grade_state gradeState,
			ep.pass_eb shouldeb
		FROM
			tom_exam_emp_allocation e
		LEFT JOIN tom_exam ex ON e.exam_id = ex.exam_id
		LEFT JOIN tom_exam_score L ON e.exam_id = L.exam_id
		AND e. CODE = L. CODE
		LEFT JOIN tom_exam_paper ep ON ex.exam_paper_id = ep.exam_paper_id
		WHERE
			1 = 1 AND ex.offline_exam = '1'
		<if test="userId!= null">
		 	AND e. CODE= #{userId,jdbcType=VARCHAR}
		</if>
		AND ex.exam_id NOT IN (
			SELECT
				ap.exam_id
			FROM
				tom_activity_emps_relation ae
			LEFT JOIN tom_activity_property ap ON ae.activity_id = ap.activity_id
			LEFT JOIN tom_activity ac ON ap.activity_id = ac.activity_id
			WHERE
				1 = 1
			<if test="userId!= null">
			 	and ae.code= #{userId,jdbcType=VARCHAR}
			</if>	
			AND ap.exam_id IS NOT NULL
			AND ae. STATUS = 'Y'
		)
	) M
  </select>
  <!--查询人员对应活动内课程的EB数  -->
  <!-- <select id="selectActivityCourseBycode" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
	  select  DISTINCT  ap.course_id,c.e_currency shouldeb from tom_activity_emps_relation ae 
	    left join tom_activity_property ap on ae.activity_id = ap.activity_id
	    left join  tom_courses c on ap.course_id = c.course_id  
	    left join tom_activity ac on ap.activity_id = ac.activity_id
	    where 1=1
	    <if test="userId!= null">
	    	and ae.code = #{userId,jdbcType=VARCHAR}
  		</if>
  		and ap.course_id!=''AND ae.status = 'Y' 
  </select> -->
  <!--查询人员非活动内课程的EB数  -->
  <select id="selectUnActivityCourseBycode" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	select 
  		cr.code userId,cr.course_id courseId,cs.e_currency shouldeb from tom_course_emp_relation cr 
	left join tom_courses cs on cs.course_id = cr.course_id AND cr.status='Y'
	where 1=1 
		<if test="userId!= null">
	    	AND  cr.code = #{userId,jdbcType=VARCHAR}
  		</if>
		and cs.course_online='Y' 
		and cs.course_id
		NOT in (
			select  DISTINCT  ap.course_id from tom_activity_emps_relation ae 
		    left join tom_activity_property ap on ae.activity_id = ap.activity_id
		    left join  tom_courses c on ap.course_id = c.course_id  
		    left join tom_activity ac on ap.activity_id = ac.activity_id
		    where 1=1
		    <if test="userId!= null">
		    	and ae.code = #{userId,jdbcType=VARCHAR}
	  		</if>
		    and ap.course_id!=''AND ae.status = 'Y'
		)
  </select>
  <select id="selectUnactivityCourseDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT 
		S.COURSE_ID courseId,L.CODE userId,sum(L.TIME) time,LR.LEARNING_DATE timestatep ,S.shouldeb
	FROM 
		(
		select 
			cr.code,cr.course_id,cs.e_currency shouldeb from tom_course_emp_relation cr 
		left join tom_courses cs on cs.course_id = cr.course_id 
		<if test="status!= null">
			AND cr.status = #{status,jdbcType=VARCHAR}
		</if>
		where 1=1 
			<if test="userId!= null">
		    	AND  cr.code= #{userId,jdbcType=VARCHAR}
	  		</if>
	  		<if test="courseonLine!= null">
				AND  cs.course_online=#{courseonLine,jdbcType=VARCHAR}
			</if>
			and cs.course_id
			NOT in (
				select  DISTINCT  ap.course_id from tom_activity_emps_relation ae 
			    left join tom_activity_property ap on ae.activity_id = ap.activity_id
			    left join tom_courses c on ap.course_id = c.course_id  
			    left join tom_activity ac on ap.activity_id = ac.activity_id
			    where ae.code= cr.code AND ap.course_id!=''
			    <if test="status!= null">
			    	AND ae.status = #{status,jdbcType=VARCHAR}
			    </if>
		    )
		) S
	LEFT JOIN  tom_learntime_log L ON S.COURSE_ID = L.COURSE_ID and S.CODE= L.CODE
	LEFT JOIN tom_course_learning_record LR ON S.COURSE_ID = LR.COURSE_ID and S.CODE= LR.CODE
	group by S.course_id
  </select>
  <select id="selectUnactivityExamDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
 	SELECT 
		S.exam_id examId,S.pass_eb shouldeb ,L.CODE userId,l.grade_state gradeState
	FROM (
	    select 
	    	distinct e.exam_id ,ep.pass_eb, ee.code FROM  tom_exam_emp_allocation ee 
	    left join tom_exam e on e.exam_id= ee.exam_id
	    left join tom_exam_paper ep on e.exam_paper_id = ep.exam_paper_id
	    where 1=1 
	    <if test="userId!= null">
	    	and  ee.code= #{userId,jdbcType=VARCHAR}
	    </if>
	    and e.exam_id not in 
	    (
	    	select  DISTINCT  
	    		ap.exam_id from tom_activity_emps_relation ae 
		    left join tom_activity_property ap on ae.activity_id = ap.activity_id
		    left join tom_activity ac on ap.activity_id = ac.activity_id
		    where 1=1
		        and ae.code=ee.code
		        and ap.exam_id!=''
		        AND ae.status = 'Y'
		)
	) S
	LEFT JOIN  tom_exam_score L ON S.exam_id = L.exam_id and S.CODE= L.CODE
	<if test="gradeState!= null">
	 	AND L.GRADE_STATE= #{gradeState,jdbcType=VARCHAR}
	</if>
  
  </select>
  <select id="selectempSectionDetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	select sl.code userId,se.course_id courseId,
		count(if(sl.LEARNING_STATES='y',true,null)) passSectionNum,
		count(se.SECTION_ID)sectionNum
	from  tom_course_section se 
	join tom_section_learning_record  sl on  se.SECTION_ID = sl.COURSE_SECTION_ID 
	<if test="userId!= null">
		and  sl.code = #{userId,jdbcType=VARCHAR}
	</if>	 
		group by se.course_id
  </select>
  <select id="selectempCoursefinrate" parameterType="map" resultType="int">
  	SELECT
	count(DISTINCT c.course_id)
	FROM
	 tom_course_emp_relation e  
	JOIN tom_course_learning_record lr ON lr.CODE = e.Code
	LEFT JOIN tom_courses c on e.COURSE_ID = c.COURSE_ID
	where 1=1 
	<if test="userId!= null">
		AND E.CODE =  #{userId,jdbcType=VARCHAR}
	</if>
	AND e. STATUS = 'Y'
	and c.COURSE_ONLINE = 'y'
  </select>
  <select id="countExampassNum" parameterType="map" resultType="int">
  	select count(es.grade_state) from tom_exam e
		join  tom_exam_emp_allocation eel  on eel.exam_id = e.exam_id
	 	join tom_exam_score es on es.code = eel.code and es.exam_id = e.exam_id
	where 1=1
	<if test="userId!= null">
	AND eel.code= #{userId,jdbcType=VARCHAR}
	</if>
	AND e.OFFLINE_EXAM='1' and es.grade_state='y'
  </select>
  
  <select id="selectApplyandSignNum" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	 select count(c.course_id) offlineResnum , count(if(ca.status='y',true,null)) shouldeb,count(if(sig.sign_time is not null,true,null)) onlineResnum
		from  tom_courses c  
                join tom_course_emp_relation er on er.course_id = c.course_id
		left join tom_course_apply ca on ca.code = er.code and ca.course_id = c.course_id
		left join tom_offline_sign  sig on sig.code = er.code and sig.course_id=c.course_id
		where 1=1
		<if test="userId!= null">
			AND er.code = #{userId,jdbcType=VARCHAR}
		</if>	
			AND c.course_online ='N'
  </select>
  <select id="selectInActivecoursePo" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT  COUNT(DISTINCT M.course_id) coursenuma,
			COUNT(IF ( M.fintime > 0, TRUE,NULL )) startCoursenuma,
			COUNT(IF ( M.fintime = 0, TRUE,NULL )) notAtCoursenuma,
			COUNT(M.LEARNING_DATE) finishCoursenuma,
			AVG(AVGPOM) numbers,
			COUNT(M.LEARNING_DATE)/COUNT(DISTINCT M.course_id) avgfinishratea,
			SUM(M.TIME)/60 courseAlltimea,
			SUM(M.TIME)/COUNT(DISTINCT M.course_id)/60 avgCoulearnTimea,
			SUM(M.E_CURRENCY) needEbb
  	FROM 
		(SELECT
		S.`CODE`,
		S.course_id,
		S.E_CURRENCY,
		COUNT(se.SECTION_ID) onlineResnum,
		count( IF ( sl.LEARNING_STATES = 'y', TRUE, NULL ) ) fintime,
		count( IF ( sl.LEARNING_STATES = 'y', TRUE, NULL ) )/COUNT(se.SECTION_ID) AVGPOM,
		lr.LEARNING_DATE,
		L.TIME
		FROM 
		(
			select  DISTINCT  ap.course_id,ae.code,c.E_CURRENCY
			from tom_activity_emps_relation ae 
			left join tom_activity_property ap on ae.activity_id = ap.activity_id
			left join  tom_courses c on ap.course_id = c.course_id  
			left join tom_activity ac on ap.activity_id = ac.activity_id
			where 1=1
			<if test="userId!= null">
			 	AND  ae.code=#{userId,jdbcType=VARCHAR}
			</if>
			<if test="needApply!= null">
				AND ac.need_apply=#{needApply,jdbcType=VARCHAR}
			</if>
			<if test="courseOnline!= null">
				AND c.course_online = #{courseOnline,jdbcType=VARCHAR}
			</if>
			AND ap.course_id IS NOT NULL AND ae.status = 'Y'
		) S
		LEFT JOIN tom_course_learning_record lr ON  lr.`CODE` = S.`CODE` and lr.COURSE_ID = s.course_id
		left join tom_course_section se  on se.course_id = S.course_id 
		LEFT join tom_section_learning_record  sl on  se.SECTION_ID = sl.COURSE_SECTION_ID  AND SL.CODE=s.CODE
		LEFT JOIN  tom_learntime_log L ON S.COURSE_ID = L.COURSE_ID and S.CODE= L.CODE
		WHERE 1=1 GROUP BY S.course_id
	) M
	<!-- group by S.course_id -->
  </select>
  <select id="selectOutActivecoursePo" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  		SELECT  COUNT(DISTINCT M.course_id) coursenuma,
			COUNT(IF ( M.fintime > 0, TRUE,NULL )) startCoursenuma,
			COUNT(IF ( M.fintime = 0, TRUE,NULL )) notAtCoursenuma,
			COUNT(M.LEARNING_DATE) finishCoursenuma,
			AVG(AVGPOM) numbers,
			COUNT(M.LEARNING_DATE)/COUNT(DISTINCT M.course_id) avgfinishratea,
			SUM(M.TIME)/60 courseAlltimea,
			SUM(M.TIME)/COUNT(DISTINCT M.course_id)/60 avgCoulearnTimea,
			SUM(M.E_CURRENCY) needEbb
  	FROM 
		(SELECT
		S.`CODE`,
		S.course_id,
		S.E_CURRENCY,
		COUNT(se.SECTION_ID) onlineResnum,
		count( IF ( sl.LEARNING_STATES = 'y', TRUE, NULL ) ) fintime,
		count( IF ( sl.LEARNING_STATES = 'y', TRUE, NULL ) )/COUNT(se.SECTION_ID) AVGPOM,
		lr.LEARNING_DATE,
		L.TIME
		FROM 
		(
			SELECT ce.COURSE_ID,ce.`CODE` ,c1.E_CURRENCY from tom_course_emp_relation ce 
			left join tom_courses c1 on c1.course_id = ce.course_id
			where 
			1=1  
			<if test="userId!= null">
			 	AND  ce.CODE = #{userId,jdbcType=VARCHAR}
			</if>
			 and ce.`STATUS`='y' and ce.COURSE_ID not IN
			(select  DISTINCT  ap.course_id
			from tom_activity_emps_relation ae 
			left join tom_activity_property ap on ae.activity_id = ap.activity_id
			left join  tom_courses c on ap.course_id = c.course_id  
			left join tom_activity ac on ap.activity_id = ac.activity_id
			where 1=1
			<if test="userId!= null">
			 	AND  ae.code = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="courseOnline!= null">
				AND c.course_online = #{courseOnline,jdbcType=VARCHAR}
			</if>
			AND ap.course_id IS NOT NULL AND ae.status = 'Y')
		) S
		LEFT JOIN tom_course_learning_record lr ON  lr.`CODE` = S.`CODE` and lr.COURSE_ID = s.course_id
		left join tom_course_section se  on se.course_id = S.course_id 
		LEFT join tom_section_learning_record  sl on  se.SECTION_ID = sl.COURSE_SECTION_ID  AND SL.CODE=s.CODE
		LEFT JOIN  tom_learntime_log L ON S.COURSE_ID = L.COURSE_ID and S.CODE= L.CODE
		WHERE 1=1 GROUP BY S.course_id
	) M
  </select>
  <!-- <select id="">
  	select COUNT(S.ACTIVITY_ID),
  		   sum(S.ALLCOURSE),
  		   sum(S.FINEMPNUM),
  		   AVG(S.FINRATE) 
	FROM(
		select a.activity_id ,count(distinct p.course_id) ALLCOURSE,count(distinct c.code) FINEMPNUM,count(distinct er.code), 
			count(distinct c.code)/count(distinct er.code) FINRATE from tom_activity a 
		left join tom_activity_emps_relation er on er.activity_id = a.activity_id 
		left join tom_activity_property  p on p.activity_id=a.activity_id   and p.course_id is not null
		left join tom_course_learning_record c on c.course_id= p.course_id
		where 1=1 
		<if test="startTime!= null and startTime!=''">
			and a.ACTIVITY_START_TIME >=#{startTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime!= null and endTime!=''">
			<![CDATA[AND a.ACTIVITY_END_TIME <= #{endTime,jdbcType=VARCHAR}]]> 
		</if>
		group by a.activity_id
		order by a.activity_id
		) S
  </select> -->
 
  <select id="selectPingtaiData" parameterType="map" statementType="CALLABLE"  
     resultMap="s1result,a1result,a2result,a3result,a4result,a5result,a6result" >  
        {CALL getpingtainew(
	       #{startTime,mode=IN,jdbcType=VARCHAR},
	       #{endTime,mode=IN,jdbcType=VARCHAR},
	       #{onedept,mode=IN,jdbcType=VARCHAR},
	       #{twodept,mode=IN,jdbcType=VARCHAR},
	       #{threedept,mode=IN,jdbcType=VARCHAR} 
        )}  
   </select>
  <select  id="selectEmpResource" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT
		a. CODE userId,
		a. NAME userName,
		a.orgname orgName,
		a.orgcode orgId,
		a.ONEDEPTCODE,
		a.ONEDEPTNAME onedept,
		two.deptName twodept,
		three.deptTopname deptcode,
		three.deptName threedept,
		a.jobname job,
		a.secret_email empEmail,
	    COUNT(DISTINCT e.COURSE_ID)sumResnum,
		ui.LEARNING_TIME / 60 onlinelearnAlltime,
		ui.E_NUMBER ebNumber
	FROM
		tom_emp a
	LEFT JOIN (SELECT e.code ,e.`NAME`, e.DEPTCODE,e.deptName,e.DEPTTOPCODE,e.deptTopname,e.ONEDEPTCODE ,e.oneDeptname from tom_emp e 
 							where e.DEPTTOPCODE is not null  and e.DEPTTOPCODE = e.ONEDEPTCODE and e.DEPTCODE != e.ONEDEPTCODE ) two  on two.code = a.code
 	LEFT JOIN (SELECT e.code ,e.`NAME`, e.DEPTCODE,e.deptName,e.DEPTTOPCODE,e.deptTopname,e.ONEDEPTCODE ,e.oneDeptname from tom_emp e 
               where e.DEPTTOPCODE is not null  and e.DEPTTOPCODE != e.ONEDEPTCODE and e.DEPTCODE!= e.ONEDEPTCODE ) three on three.`code`=a.`CODE`
	LEFT JOIN tom_course_emp_relation e on e.`CODE` = a.`CODE`
	LEFT JOIN tom_user_info ui ON ui. CODE = a. CODE
	where 1=1  
	<if test="paramter.startTime!= null and ''!=paramter.startTime">
		and e.CREATE_TIME >=#{paramter.startTime,jdbcType=VARCHAR}
	</if>
	<if test="paramter.endTime!= null and ''!=paramter.endTime">
		<![CDATA[and e.CREATE_TIME <=#{paramter.endTime,jdbcType=VARCHAR}]]> 
	</if>
	<if test="paramter.onedeptId!= null  and ''!=paramter.onedeptId">
		and a.ONEDEPTCODE =#{paramter.onedeptId,jdbcType=VARCHAR}  
	</if>
	<if test="paramter.deptId!= null and ''!=paramter.deptId">
		and (two.`DEPTCODE` =#{paramter.deptId,jdbcType=VARCHAR}  or three.DEPTTOPCODE = #{paramter.deptId,jdbcType=VARCHAR} )
	</if>
	<if test="paramter.thirdcode!= null and ''!=paramter.thirdcode">
		and three.`DEPTCODE` =#{paramter.thirdcode,jdbcType=VARCHAR}  
	</if>
	<if test="paramter.userName!= null and ''!=paramter.userName">
		<!-- and a.NAME like '%'TRIM(#{paramter.userName,jdbcType=VARCHAR})'%' -->
		and INSTR(a.NAME,#{paramter.userName,jdbcType=VARCHAR})>0
	</if>
	and e.`STATUS`='y' GROUP BY a.code order by a.code asc
	
	limit<![CDATA[ #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="selectEmpResourcedetail" parameterType="map" resultType="com.chinamobo.ue.reportforms.dto.StuLearnResourceDto">
  	SELECT n.code,COUNT(DISTINCT n.course_id)onlineResnum,
	 	COUNT(IF(n.jindu>=1,true,null)) finishCoursenuma ,
 		AVG(n.jindu) avgOnschedule,
	 	(SELECT count(*) FROM tom_exam_emp_allocation s WHERE s. CODE = n. CODE ) onlineExamnum,
 		(SELECT count(eel. CODE) FROM tom_exam e
			JOIN tom_exam_emp_allocation eel ON eel.exam_id = e.exam_id
			JOIN tom_exam_score es ON es. CODE = eel. CODE
			AND es.exam_id = e.exam_id
		 WHERE eel. CODE = n. CODE AND e.OFFLINE_EXAM = '1' AND es.grade_state = 'y' ) shouldeb
	 FROM(
	  SELECT e.code,e.course_id,COUNT( IF(sr.LEARNING_STATES='y',true,null))/count(s.SECTION_ID) jindu  from 
		 tom_course_emp_relation e  
		LEFT JOIN tom_courses c ON c.course_id = e.course_id
		AND c.course_online = 'Y'
	
		LEFT JOIN tom_course_learning_record lr on lr.`CODE`= e.`CODE` and lr.COURSE_ID = c.COURSE_ID
		LEFT JOIN tom_course_section s on s.COURSE_ID = c.COURSE_ID
		LEFT JOIN tom_section_learning_record sr on sr.COURSE_SECTION_ID = s.SECTION_ID and e.`CODE` = sr.`CODE`
		WHERE 1=1  AND e. STATUS = 'Y' and c.course_online ='Y' and e.code = #{userId,jdbcType=VARCHAR}
		<if test="paramter.startTime!= null and ''!=paramter.startTime">
			and e.CREATE_TIME >=#{paramter.startTime,jdbcType=VARCHAR}
		</if>
		<if test="paramter.endTime!= null and ''!=paramter.endTime">
			<![CDATA[and e.CREATE_TIME <=#{paramter.endTime,jdbcType=VARCHAR}]]> 
		</if>
		GROUP BY e.course_id
	) n
  </select>
</mapper>

